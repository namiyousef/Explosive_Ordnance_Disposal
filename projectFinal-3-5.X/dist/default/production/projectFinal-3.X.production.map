Microchip MPLAB XC8 Compiler V2.10 ()

Linker command line:

-W-3 --edf=/Applications/microchip/xc8/v2.10/pic/dat/en_msgs.txt -cs \
  -h+dist/default/production/projectFinal-3.X.production.sym \
  --cmf=dist/default/production/projectFinal-3.X.production.cmf -z \
  -Q18F4331 -o/tmp/xcplFz4F8 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/projectFinal-3.X.production.map -E1 -ver=XC8 \
  --acfsm=1493 -ASTACK=0100h-02FFh -pstack=STACK -ACODE=00h-01FFFh \
  -ACONST=00h-01FFFh -ASMALLCONST=0300h-03FFhx29 -AMEDIUMCONST=0300h-01FFFh \
  -ACOMRAM=01h-05Fh -AABS1=00h-02FFh -ABIGRAM=01h-02FFh \
  -ARAM=060h-0FFh,0100h-01FFhx2 -ABANK0=060h-0FFh -ABANK1=0100h-01FFh \
  -ABANK2=0200h-02FFh -ASFR=0F60h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo=018h,powerup,init -pramtop=0300h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  /tmp/xczbfPVYW.o dist/default/production/projectFinal-3.X.production.o 

Object code version is 3.11

Machine type is 18F4331

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
/tmp/xczbfPVYW.o
                init                                 76       76        4        C       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production/projectFinal-3.X.production.o
                intcodelo                            18       18       5E        C       0
                intcode                               8        8        6        4       0
                temp                                 34       34        1        1       1
                smallconst                          300      300        C      180       0
                intcode_body                        A8E      A8E       70      186       0
                text21                              EDA      EDA        E      186       0
                text20                              DB2      DB2       3C      186       0
                text19                              E26      E26       38      186       0
                text18                              CA2      CA2       48      186       0
                text17                              D30      D30       46      186       0
                text16                              EBA      EBA       12      186       0
                text15                              8CE      8CE       FA      186       0
                text13                              C58      C58       4A      186       0
                text12                              EA2      EA2       18      186       0
                text11                              E84      E84       1E      186       0
                text10                              ECC      ECC        E      186       0
                text9                               D76      D76       3C      186       0
                text8                               DEE      DEE       38      186       0
                text7                               9C8      9C8       C6      186       0
                text6                               AFE      AFE       5A      186       0
                text5                               E5E      E5E       26      186       0
                text4                               716      716      1B8      186       0
                text3                               BB0      BB0       58      186       0
                text2                               B58      B58       58      186       0
                text1                               C08      C08       50      186       0
                text0                               30C      30C      40A      186       0
                cstackCOMRAM                          1        1       2E        1       1
                cstackBANK0                          60       60       9C       60       1
                dataBANK0                            FF       FF        1       60       1
                bssBANK0                             FC       FC        3       60       1
                dataCOMRAM                           33       33        1        1       1
                bssCOMRAM                            2F       2F        4        1       1
                cinit                               CEA      CEA       46      186       0
                idataBANK0                          EE9      EE9        1      186       0
                idataCOMRAM                         EE8      EE8        1      186       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                intcodelo                            18       18       5E         0
                intcode                               8        8        6         0
                init                                 76       76        4         0
                reset_vec                             0        0        4         0
                intcode_body                        A8E      A8E       70         0
                text21                              EDA      EDA        E         0
                text20                              DB2      DB2       3C         0
                text19                              E26      E26       38         0
                text18                              CA2      CA2       48         0
                text17                              D30      D30       46         0
                text16                              EBA      EBA       12         0
                text15                              8CE      8CE       FA         0
                text13                              C58      C58       4A         0
                text12                              EA2      EA2       18         0
                text11                              E84      E84       1E         0
                text10                              ECC      ECC        E         0
                text9                               D76      D76       3C         0
                text8                               DEE      DEE       38         0
                text7                               9C8      9C8       C6         0
                text6                               AFE      AFE       5A         0
                text5                               E5E      E5E       26         0
                text4                               716      716      1B8         0
                text3                               BB0      BB0       58         0
                text2                               B58      B58       58         0
                text1                               C08      C08       50         0
                text0                               30C      30C      40A         0
                cinit                               CEA      CEA       46         0
                idataBANK0                          EE9      EE9        1         0
                idataCOMRAM                         EE8      EE8        1         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          300      300        C         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 34       34        1         1
                cstackCOMRAM                          1        1       2E         1
                dataCOMRAM                           33       33        1         1
                bssCOMRAM                            2F       2F        4         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          60       60       9C         1
                dataBANK0                            FF       FF        1         1
                bssBANK0                             FC       FC        3         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                cstackCOMRAM                   000001  000034  000035         1       1  COMRAM  
                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackBANK0                    000060  0000A0  000100        60       1  BANK0   
                text0                          00030C  000BDE  000EEA       186       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                intcodelo                      000018  000062  00007A         C       0  CODE    
                intcode                        000008  000006  00000E         4       0  CODE    
                smallconst                     000300  00000C  00030C       180       0  SMALLCON
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BIGRAM           000035-00005F               2B
                         000100-0002FF              200
        CODE             000004-000007                4
                         00000E-000017                A
                         00007A-0002FF              286
                         000EEA-001FFF             1116
        COMRAM           000035-00005F               2B
        CONST            000004-000007                4
                         00000E-000017                A
                         00007A-0002FF              286
                         000EEA-001FFF             1116
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      000EEA-001FFF             1116
        RAM              000100-0002FF              100
        SFR              000F60-000FFF               A0
        SMALLCONST       000EEA-001FFF              100
        STACK            000100-0002FF              200

                                  Symbol Table

?___wmul                     cstackCOMRAM 000014
LCD_String@string            cstackCOMRAM 000009
LCDout@number                cstackCOMRAM 000016
SendLCD@Byte                 cstackCOMRAM 00001A
SendLCD@HighBits             cstackCOMRAM 000018
SendLCD@LowBits              cstackCOMRAM 000019
SendLCD@type                 cstackCOMRAM 000017
SetLine@line                 cstackCOMRAM 000009
_ANSEL0                      (abs)        000FB8
_ANSEL1                      (abs)        000FB9
_BAUDCONbits                 (abs)        000FAA
_CAP2BUFH                    (abs)        000F67
_CAP2BUFL                    (abs)        000F66
_CAP2CON                     (abs)        000F62
_CAP3BUFH                    (abs)        000F65
_CAP3BUFL                    (abs)        000F64
_CAP3CON                     (abs)        000F61
_E_TOG                       text10       000ECC
_INTCONbits                  (abs)        000FF2
_IPR1bits                    (abs)        000F9F
_IRsource                    bssBANK0     0000FC
_LATAbits                    (abs)        000F89
_LATB                        (abs)        000F8A
_LATBbits                    (abs)        000F8A
_LATC                        (abs)        000F8B
_LATCbits                    (abs)        000F8B
_LATD                        (abs)        000F8C
_LATDbits                    (abs)        000F8C
_LCD_String                  text18       000CA2
_LCDout                      text9        000D76
_OSCCON                      (abs)        000FD3
_OSCCONbits                  (abs)        000FD3
_PDC0H                       (abs)        000F78
_PDC0L                       (abs)        000F79
_PDC1H                       (abs)        000F76
_PDC1L                       (abs)        000F77
_PDC2H                       (abs)        000F74
_PDC2L                       (abs)        000F75
_PDC3H                       (abs)        000F72
_PDC3L                       (abs)        000F73
_PIE1bits                    (abs)        000F9D
_PIR1                        (abs)        000F9E
_PIR1bits                    (abs)        000F9E
_PTCON0                      (abs)        000F7F
_PTCON1                      (abs)        000F7E
_PTPERH                      (abs)        000F7A
_PTPERL                      (abs)        000F7B
_PWMCON0                     (abs)        000F6F
_PWMCON1                     (abs)        000F6E
_RCONbits                    (abs)        000FD0
_RCREG                       (abs)        000FAE
_RCSTAbits                   (abs)        000FAB
_RFIDread                    bssBANK0     0000FD
_SPBRG                       (abs)        000FAF
_SPBRGH                      (abs)        000FB0
_SendLCD                     text8        000DEE
_SetLine                     text17       000D30
_T5CON                       (abs)        000FB7
_TRISAbits                   (abs)        000F92
_TRISBbits                   (abs)        000F93
_TRISCbits                   (abs)        000F94
_TRISDbits                   (abs)        000F95
_TXSTAbits                   (abs)        000FAC
__CFG_LVP$OFF                (abs)        000000
__CFG_MCLRE$OFF              (abs)        000000
__CFG_OSC$IRCIO              (abs)        000000
__CFG_WDTEN$OFF              (abs)        000000
__HRAM                       (abs)        000000
__Habs1                      abs1         000000
__Hbank0                     bank0        000000
__Hbank1                     bank1        000000
__Hbank2                     bank2        000000
__Hbigbss                    bigbss       000000
__Hbigdata                   bigdata      000000
__Hbigram                    bigram       000000
__Hbss                       bss          000000
__HbssBANK0                  bssBANK0     000000
__HbssCOMRAM                 bssCOMRAM    000000
__Hcinit                     cinit        000000
__Hclrtext                   clrtext      000000
__Hcomram                    comram       000000
__Hconfig                    config       30000E
__Hconst                     const        000000
__HcstackBANK0               cstackBANK0  000000
__HcstackCOMRAM              cstackCOMRAM 000000
__Hdata                      data         000000
__HdataBANK0                 dataBANK0    000000
__HdataCOMRAM                dataCOMRAM   000000
__Heeprom_data               eeprom_data  000000
__Hfarbss                    farbss       000000
__Hfardata                   fardata      000000
__Hibigdata                  ibigdata     000000
__Hidata                     idata        000000
__HidataBANK0                idataBANK0   000000
__HidataCOMRAM               idataCOMRAM  000000
__Hidloc                     idloc        200008
__Hifardata                  ifardata     000000
__Hinit                      init         00007A
__Hintcode                   intcode      00000E
__Hintcode_body              intcode_body 000000
__Hintcodelo                 intcodelo    000076
__Hintentry                  intentry     000000
__Hintret                    intret       000000
__Hintsave_regs              intsave_regs 000000
__Hirdata                    irdata       000000
__Hmediumconst               mediumconst  000000
__HnvFARRAM                  nvFARRAM     000000
__Hnvbit                     nvbit        000000
__Hnvrram                    nvrram       000000
__Hparam                     rparam       000000
__Hpowerup                   powerup      000076
__Hram                       ram          000000
__Hramtop                    ramtop       000300
__Hrbit                      rbit         000000
__Hrbss                      rbss         000000
__Hrdata                     rdata        000000
__Hreset_vec                 reset_vec    000004
__Hrparam                    rparam       000000
__Hsfr                       sfr          000000
__Hsmallconst                smallconst   00030C
__Hspace_0                   (abs)        30000E
__Hspace_1                   (abs)        000100
__Hspace_2                   (abs)        000000
__Hstack                     stack        000000
__Hstruct                    struct       000000
__Htemp                      temp         000035
__Htext                      text         000000
__Htext0                     text0        000000
__Htext1                     text1        000000
__Htext10                    text10       000000
__Htext11                    text11       000000
__Htext12                    text12       000000
__Htext13                    text13       000000
__Htext15                    text15       000000
__Htext16                    text16       000000
__Htext17                    text17       000000
__Htext18                    text18       000000
__Htext19                    text19       000000
__Htext2                     text2        000000
__Htext20                    text20       000000
__Htext21                    text21       000000
__Htext3                     text3        000000
__Htext4                     text4        000000
__Htext5                     text5        000000
__Htext6                     text6        000000
__Htext7                     text7        000000
__Htext8                     text8        000000
__Htext9                     text9        000000
__LRAM                       (abs)        000001
__Labs1                      abs1         000000
__Lbank0                     bank0        000000
__Lbank1                     bank1        000000
__Lbank2                     bank2        000000
__Lbigbss                    bigbss       000000
__Lbigdata                   bigdata      000000
__Lbigram                    bigram       000000
__Lbss                       bss          000000
__LbssBANK0                  bssBANK0     000000
__LbssCOMRAM                 bssCOMRAM    000000
__Lcinit                     cinit        000000
__Lclrtext                   clrtext      000000
__Lcomram                    comram       000000
__Lconfig                    config       300000
__Lconst                     const        000000
__LcstackBANK0               cstackBANK0  000000
__LcstackCOMRAM              cstackCOMRAM 000000
__Ldata                      data         000000
__LdataBANK0                 dataBANK0    000000
__LdataCOMRAM                dataCOMRAM   000000
__Leeprom_data               eeprom_data  000000
__Lfarbss                    farbss       000000
__Lfardata                   fardata      000000
__Libigdata                  ibigdata     000000
__Lidata                     idata        000000
__LidataBANK0                idataBANK0   000000
__LidataCOMRAM               idataCOMRAM  000000
__Lidloc                     idloc        200000
__Lifardata                  ifardata     000000
__Linit                      init         000076
__Lintcode                   intcode      000008
__Lintcode_body              intcode_body 000000
__Lintcodelo                 intcodelo    000018
__Lintentry                  intentry     000000
__Lintret                    intret       000000
__Lintsave_regs              intsave_regs 000000
__Lirdata                    irdata       000000
__Lmediumconst               mediumconst  000000
__LnvFARRAM                  nvFARRAM     000000
__Lnvbit                     nvbit        000000
__Lnvrram                    nvrram       000000
__Lparam                     rparam       000000
__Lpowerup                   powerup      000076
__Lram                       ram          000000
__Lramtop                    ramtop       000300
__Lrbit                      rbit         000000
__Lrbss                      rbss         000000
__Lrdata                     rdata        000000
__Lreset_vec                 reset_vec    000000
__Lrparam                    rparam       000000
__Lsfr                       sfr          000000
__Lsmallconst                smallconst   000300
__Lspace_0                   (abs)        000000
__Lspace_1                   (abs)        000000
__Lspace_2                   (abs)        000000
__Lstack                     stack        000000
__Lstruct                    struct       000000
__Ltemp                      temp         000034
__Ltext                      text         000000
__Ltext0                     text0        000000
__Ltext1                     text1        000000
__Ltext10                    text10       000000
__Ltext11                    text11       000000
__Ltext12                    text12       000000
__Ltext13                    text13       000000
__Ltext15                    text15       000000
__Ltext16                    text16       000000
__Ltext17                    text17       000000
__Ltext18                    text18       000000
__Ltext19                    text19       000000
__Ltext2                     text2        000000
__Ltext20                    text20       000000
__Ltext21                    text21       000000
__Ltext3                     text3        000000
__Ltext4                     text4        000000
__Ltext5                     text5        000000
__Ltext6                     text6        000000
__Ltext7                     text7        000000
__Ltext8                     text8        000000
__Ltext9                     text9        000000
__S0                         (abs)        30000E
__S1                         (abs)        000100
__S2                         (abs)        000000
___inthi_sp                  stack        000000
___intlo_sp                  stack        000000
___param_bank                (abs)        000000
___rparam_used               (abs)        000001
___sp                        stack        000000
___wmul                      text5        000E5E
___wmul@multiplicand         cstackCOMRAM 000016
___wmul@multiplier           cstackCOMRAM 000014
___wmul@product              cstackCOMRAM 000018
__accesstop                  (abs)        000060
__activetblptr               (abs)        000001
__end_of_E_TOG               text10       000EDA
__end_of_LCD_String          text18       000CEA
__end_of_LCDout              text9        000DB2
__end_of_SendLCD             text8        000E26
__end_of_SetLine             text17       000D76
__end_of___wmul              text5        000E84
__end_of__initialization     cinit        000D1E
__end_of_findStrengths       text13       000CA2
__end_of_getCharSerial       text16       000ECC
__end_of_initEusart          text12       000EBA
__end_of_initIR              text11       000EA2
__end_of_initLCD             text7        000A8E
__end_of_initPWM             text6        000B58
__end_of_main                text0        000716
__end_of_move                text1        000C58
__end_of_my_hp_isr           intcode_body 000AFE
__end_of_my_lp_isr           intcodelo    000076
__end_of_sendRFID            text15       0009C8
__end_of_setMotorPWM         text4        0008CE
__end_of_setMotorsFullSpeed  text3        000C08
__end_of_stop                text2        000BB0
__end_ofi1_E_TOG             text21       000EE8
__end_ofi1_LCDout            text20       000DEE
__end_ofi1_SendLCD           text19       000E5E
__initialization             cinit        000CEA
__mediumconst                mediumconst  000000
__pbssBANK0                  bssBANK0     0000FC
__pbssCOMRAM                 bssCOMRAM    00002F
__pcinit                     cinit        000CEA
__pcstackBANK0               cstackBANK0  000060
__pcstackCOMRAM              cstackCOMRAM 000001
__pdataBANK0                 dataBANK0    0000FF
__pdataCOMRAM                dataCOMRAM   000033
__pidataBANK0                idataBANK0   000EE9
__pidataCOMRAM               idataCOMRAM  000EE8
__pintcode                   intcode      000008
__pintcode_body              intcode_body 000A8E
__pintcodelo                 intcodelo    000018
__psmallconst                smallconst   000300
__ptext0                     text0        00030C
__ptext1                     text1        000C08
__ptext10                    text10       000ECC
__ptext11                    text11       000E84
__ptext12                    text12       000EA2
__ptext13                    text13       000C58
__ptext15                    text15       0008CE
__ptext16                    text16       000EBA
__ptext17                    text17       000D30
__ptext18                    text18       000CA2
__ptext19                    text19       000E26
__ptext2                     text2        000B58
__ptext20                    text20       000DB2
__ptext21                    text21       000EDA
__ptext3                     text3        000BB0
__ptext4                     text4        000716
__ptext5                     text5        000E5E
__ptext6                     text6        000AFE
__ptext7                     text7        0009C8
__ptext8                     text8        000DEE
__ptext9                     text9        000D76
__ramtop                     ramtop       000300
__size_of_E_TOG              (abs)        000000
__size_of_LCD_String         (abs)        000000
__size_of_LCDout             (abs)        000000
__size_of_SendLCD            (abs)        000000
__size_of_SetLine            (abs)        000000
__size_of___wmul             (abs)        000000
__size_of_findStrengths      (abs)        000000
__size_of_getCharSerial      (abs)        000000
__size_of_initEusart         (abs)        000000
__size_of_initIR             (abs)        000000
__size_of_initLCD            (abs)        000000
__size_of_initPWM            (abs)        000000
__size_of_main               (abs)        000000
__size_of_move               (abs)        000000
__size_of_my_hp_isr          (abs)        000000
__size_of_my_lp_isr          (abs)        000000
__size_of_sendRFID           (abs)        000000
__size_of_setMotorPWM        (abs)        000000
__size_of_setMotorsFullSpeed (abs)        000000
__size_of_stop               (abs)        000000
__size_ofi1_E_TOG            (abs)        000000
__size_ofi1_LCDout           (abs)        000000
__size_ofi1_SendLCD          (abs)        000000
__smallconst                 smallconst   000300
_a                           bssCOMRAM    00002F
_checkSum                    bssCOMRAM    000030
_currentVal                  bssCOMRAM    000031
_debouncer                   bssCOMRAM    000032
_findStrengths               text13       000C58
_getCharSerial               text16       000EBA
_index                       dataCOMRAM   000033
_initEusart                  text12       000EA2
_initIR                      text11       000E84
_initLCD                     text7        0009C8
_initPWM                     text6        000AFE
_main                        text0        00030C
_move                        text1        000C08
_my_hp_isr                   intcode      000008
_my_lp_isr                   intcodelo    000018
_reset                       dataBANK0    0000FF
_robotOn                     bssBANK0     0000FE
_sendRFID                    text15       0008CE
_setMotorPWM                 text4        000716
_setMotorsFullSpeed          text3        000BB0
_stop                        text2        000B58
btemp                        temp         000034
end_of_initialization        cinit        000D1E
findStrengths@leftIR         cstackCOMRAM 000014
findStrengths@rightIR        cstackCOMRAM 000016
i1LCDout@number              cstackCOMRAM 000004
i1SendLCD@Byte               cstackCOMRAM 000008
i1SendLCD@HighBits           cstackCOMRAM 000006
i1SendLCD@LowBits            cstackCOMRAM 000007
i1SendLCD@type               cstackCOMRAM 000005
i1_E_TOG                     text21       000EDA
i1_LCDout                    text20       000DB2
i1_SendLCD                   text19       000E26
int$flags                    temp         000034
int_func                     intcode_body 000A8E
intlevel0                    text         000000
intlevel1                    text         000000
intlevel2                    text         000000
intlevel3                    text         000000
main@buffer                  cstackBANK0  0000E2
main@c                       cstackBANK0  0000E4
main@i                       cstackBANK0  0000E9
main@leftIR                  cstackBANK0  0000E5
main@motorL                  cstackBANK0  0000F3
main@motorR                  cstackBANK0  0000EA
main@path                    cstackBANK0  000060
main@rightIR                 cstackBANK0  0000E7
move@dir                     cstackCOMRAM 00002B
move@mL                      cstackCOMRAM 000027
move@mR                      cstackCOMRAM 000029
setMotorPWM@PWMduty          cstackCOMRAM 000020
setMotorPWM@m                cstackCOMRAM 00001A
setMotorsFullSpeed@mL        cstackCOMRAM 000022
setMotorsFullSpeed@mR        cstackCOMRAM 000024
stackhi                      (abs)        0002FF
stacklo                      (abs)        000100
start                        init         000076
start_initialization         cinit        000CEA
stop@mL                      cstackCOMRAM 000022
stop@mR                      cstackCOMRAM 000024
ttemp5                       temp         000035
ttemp6                       temp         000038
ttemp7                       temp         00003C
wtemp8                       temp         000035


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 56 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  path          130    0[BANK0 ] unsigned char [130]
  motorL          9  147[BANK0 ] struct DC_motor
  motorR          9  138[BANK0 ] struct DC_motor
  rightIR         2  135[BANK0 ] int 
  leftIR          2  133[BANK0 ] int 
  buffer          2  130[BANK0 ] int 
  i               1  137[BANK0 ] unsigned char 
  c               1  132[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0     156       0       0
      Temps:          3       0       0       0
      Totals:         3     156       0       0
Total ram usage:      159 bytes
 Hardware stack levels required when called:   11
 This function calls:
		_findStrengths
		_initEusart
		_initIR
		_initLCD
		_initPWM
		_move
		_setMotorPWM
		_stop
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _move *****************
 Defined at:
		line 142 in file "PWM.c"
 Parameters:    Size  Location     Type
  mL              2   38[COMRAM] PTR struct DC_motor
		 -> main@motorL(9), 
  mR              2   40[COMRAM] PTR struct DC_motor
		 -> main@motorR(9), 
  dir             1   42[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         5       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_setMotorsFullSpeed
		_stop
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _stop *****************
 Defined at:
		line 123 in file "PWM.c"
 Parameters:    Size  Location     Type
  mL              2   33[COMRAM] PTR struct DC_motor
		 -> main@motorL(9), 
  mR              2   35[COMRAM] PTR struct DC_motor
		 -> main@motorR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       0       0       0
      Temps:          1       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_setMotorPWM
 This function is called by:
		_main
		_move
 This function uses a non-reentrant model


 *************** function _setMotorsFullSpeed *****************
 Defined at:
		line 105 in file "PWM.c"
 Parameters:    Size  Location     Type
  mL              2   33[COMRAM] PTR struct DC_motor
		 -> main@motorL(9), 
  mR              2   35[COMRAM] PTR struct DC_motor
		 -> main@motorR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       0       0       0
      Temps:          1       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_setMotorPWM
 This function is called by:
		_move
 This function uses a non-reentrant model


 *************** function _setMotorPWM *****************
 Defined at:
		line 74 in file "PWM.c"
 Parameters:    Size  Location     Type
  m               2   25[COMRAM] PTR struct DC_motor
		 -> main@motorL(9), main@motorR(9), 
 Auto vars:     Size  Location     Type
  PWMduty         2   31[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         2       0       0       0
      Temps:          4       0       0       0
      Totals:         8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		___wmul
 This function is called by:
		_main
		_setMotorsFullSpeed
		_stop
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2   19[COMRAM] unsigned int 
  multiplicand    2   21[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  product         2   23[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2   19[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_setMotorPWM
 This function uses a non-reentrant model


 *************** function _initPWM *****************
 Defined at:
		line 25 in file "PWM.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _initLCD *****************
 Defined at:
		line 78 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          1       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_LCDout
		_SendLCD
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _SendLCD *****************
 Defined at:
		line 57 in file "LCD.c"
 Parameters:    Size  Location     Type
  Byte            1    wreg     unsigned char 
  type            1   22[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  Byte            1   25[COMRAM] unsigned char 
  LowBits         1   24[COMRAM] unsigned char 
  HighBits        1   23[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         3       0       0       0
      Temps:          0       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_LCDout
 This function is called by:
		_initLCD
 This function uses a non-reentrant model


 *************** function _LCDout *****************
 Defined at:
		line 41 in file "LCD.c"
 Parameters:    Size  Location     Type
  number          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  number          1   21[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          2       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_E_TOG
 This function is called by:
		_SendLCD
		_initLCD
 This function uses a non-reentrant model


 *************** function _E_TOG *****************
 Defined at:
		line 28 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_LCDout
 This function uses a non-reentrant model


 *************** function _initIR *****************
 Defined at:
		line 30 in file "IR.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _initEusart *****************
 Defined at:
		line 13 in file "eusart.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _findStrengths *****************
 Defined at:
		line 57 in file "IR.c"
 Parameters:    Size  Location     Type
  leftIR          2   19[COMRAM] PTR int 
		 -> main@leftIR(2), 
  rightIR         2   21[COMRAM] PTR int 
		 -> main@rightIR(2), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       0       0       0
      Temps:          4       0       0       0
      Totals:         8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _my_lp_isr *****************
 Defined at:
		line 300 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  LastRFID        1    0        unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          7       0       0       0
      Totals:         8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_sendRFID
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _sendRFID *****************
 Defined at:
		line 16 in file "RFID.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCD_String
		_SetLine
		_getCharSerial
		i1_SendLCD
 This function is called by:
		_my_lp_isr
 This function uses a non-reentrant model


 *************** function _getCharSerial *****************
 Defined at:
		line 34 in file "eusart.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_sendRFID
 This function uses a non-reentrant model


 *************** function _SetLine *****************
 Defined at:
		line 143 in file "LCD.c"
 Parameters:    Size  Location     Type
  line            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  line            1    8[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		i1_SendLCD
 This function is called by:
		_sendRFID
 This function uses a non-reentrant model


 *************** function _LCD_String *****************
 Defined at:
		line 163 in file "LCD.c"
 Parameters:    Size  Location     Type
  string          2    8[COMRAM] PTR unsigned char 
		 -> STR_2(9), STR_1(6), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         0       0       0       0
      Temps:          1       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		i1_SendLCD
 This function is called by:
		_sendRFID
 This function uses a non-reentrant model


 *************** function i1_SendLCD *****************
 Defined at:
		line 57 in file "LCD.c"
 Parameters:    Size  Location     Type
  Byte            1    wreg     unsigned char 
  type            1    4[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  Byte            1    7[COMRAM] unsigned char 
  SendLCD         1    6[COMRAM] unsigned char 
  SendLCD         1    5[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         3       0       0       0
      Temps:          0       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		i1_LCDout
 This function is called by:
		_SetLine
		_LCD_String
		_sendRFID
 This function uses a non-reentrant model


 *************** function i1_LCDout *****************
 Defined at:
		line 41 in file "LCD.c"
 Parameters:    Size  Location     Type
  number          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  number          1    3[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          2       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		i1_E_TOG
 This function is called by:
		i1_SendLCD
 This function uses a non-reentrant model


 *************** function i1_E_TOG *****************
 Defined at:
		line 28 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		i1_LCDout
 This function uses a non-reentrant model


 *************** function _my_hp_isr *****************
 Defined at:
		line 268 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          1       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
eusart.c
		_initEusart    		CODE           	0EA2	0000	25
		_getCharSerial 		CODE           	0EBA	0000	19

eusart.c estimated size: 44

RFID.c
		_sendRFID      		CODE           	08CE	0000	251

RFID.c estimated size: 251

/Applications/microchip/xc8/v2.10/pic/sources/c99/common/Umul16.c
		___wmul        		CODE           	0E5E	0000	39

/Applications/microchip/xc8/v2.10/pic/sources/c99/common/Umul16.c estimated size: 39

PWM.c
		_stop          		CODE           	0B58	0000	89
		_move          		CODE           	0C08	0000	81
		_setMotorPWM   		CODE           	0716	0000	441
		_initPWM       		CODE           	0AFE	0000	91
		_setMotorsFullSpeed		CODE           	0BB0	0000	89

PWM.c estimated size: 791

shared
		i1_LCDout      		CODE           	0DB2	0000	61
		i1_E_TOG       		CODE           	0EDA	0000	15
		__initialization		CODE           	0CEA	0000	53
		i1_SendLCD     		CODE           	0E26	0000	57

shared estimated size: 186

IR.c
		_findStrengths 		CODE           	0C58	0000	75
		_initIR        		CODE           	0E84	0000	31

IR.c estimated size: 106

main.c
		_my_hp_isr     		CODE           	0008	0000	119
		_main          		CODE           	030C	0000	1035
		_my_lp_isr     		CODE           	0018	0000	95

main.c estimated size: 1249

LCD.c
		_SetLine       		CODE           	0D30	0000	71
		_LCD_String    		CODE           	0CA2	0000	73
		_SendLCD       		CODE           	0DEE	0000	57
		_E_TOG         		CODE           	0ECC	0000	15
		_LCDout        		CODE           	0D76	0000	61
		_initLCD       		CODE           	09C8	0000	199

LCD.c estimated size: 476

