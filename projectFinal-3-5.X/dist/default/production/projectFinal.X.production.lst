

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Dec 09 21:51:38 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4331 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   108                           DFLTCON equ 0F60h ;# 
   109  0000                     # 118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   110                           CAP3CON equ 0F61h ;# 
   111  0000                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   112                           CAP2CON equ 0F62h ;# 
   113  0000                     # 236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   114                           CAP1CON equ 0F63h ;# 
   115  0000                     # 295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   116                           CAP3BUFL equ 0F64h ;# 
   117  0000                     # 300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   118                           MAXCNTL equ 0F64h ;# 
   119  0000                     # 307 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   120                           CAP3BUFH equ 0F65h ;# 
   121  0000                     # 312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   122                           MAXCNTH equ 0F65h ;# 
   123  0000                     # 319 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   124                           CAP2BUFL equ 0F66h ;# 
   125  0000                     # 324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   126                           POSCNTL equ 0F66h ;# 
   127  0000                     # 331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   128                           CAP2BUFH equ 0F67h ;# 
   129  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   130                           POSCNTH equ 0F67h ;# 
   131  0000                     # 343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   132                           CAP1BUFL equ 0F68h ;# 
   133  0000                     # 348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   134                           VELRL equ 0F68h ;# 
   135  0000                     # 355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   136                           CAP1BUFH equ 0F69h ;# 
   137  0000                     # 360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   138                           VELRH equ 0F69h ;# 
   139  0000                     # 367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   140                           OVDCONS equ 0F6Ah ;# 
   141  0000                     # 437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   142                           OVDCOND equ 0F6Bh ;# 
   143  0000                     # 507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   144                           FLTCONFIG equ 0F6Ch ;# 
   145  0000                     # 569 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   146                           DTCON equ 0F6Dh ;# 
   147  0000                     # 695 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   148                           PWMCON1 equ 0F6Eh ;# 
   149  0000                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   150                           PWMCON0 equ 0F6Fh ;# 
   151  0000                     # 831 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   152                           SEVTCMPH equ 0F70h ;# 
   153  0000                     # 838 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   154                           SEVTCMPL equ 0F71h ;# 
   155  0000                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   156                           PDC3H equ 0F72h ;# 
   157  0000                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   158                           PDC3L equ 0F73h ;# 
   159  0000                     # 859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   160                           PDC2H equ 0F74h ;# 
   161  0000                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   162                           PDC2L equ 0F75h ;# 
   163  0000                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   164                           PDC1H equ 0F76h ;# 
   165  0000                     # 880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   166                           PDC1L equ 0F77h ;# 
   167  0000                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   168                           PDC0H equ 0F78h ;# 
   169  0000                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   170                           PDC0L equ 0F79h ;# 
   171  0000                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   172                           PTPERH equ 0F7Ah ;# 
   173  0000                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   174                           PTPERL equ 0F7Bh ;# 
   175  0000                     # 915 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   176                           PTMRH equ 0F7Ch ;# 
   177  0000                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   178                           PTMRL equ 0F7Dh ;# 
   179  0000                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   180                           PTCON1 equ 0F7Eh ;# 
   181  0000                     # 956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   182                           PTCON0 equ 0F7Fh ;# 
   183  0000                     # 1038 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   184                           PORTA equ 0F80h ;# 
   185  0000                     # 1199 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   186                           PORTB equ 0F81h ;# 
   187  0000                     # 1270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   188                           PORTC equ 0F82h ;# 
   189  0000                     # 1536 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   190                           PORTD equ 0F83h ;# 
   191  0000                     # 1607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   192                           PORTE equ 0F84h ;# 
   193  0000                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   194                           TMR5 equ 0F87h ;# 
   195  0000                     # 1740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   196                           TMR5L equ 0F87h ;# 
   197  0000                     # 1747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   198                           TMR5H equ 0F88h ;# 
   199  0000                     # 1754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   200                           LATA equ 0F89h ;# 
   201  0000                     # 1866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   202                           LATB equ 0F8Ah ;# 
   203  0000                     # 1978 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   204                           LATC equ 0F8Bh ;# 
   205  0000                     # 2090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   206                           LATD equ 0F8Ch ;# 
   207  0000                     # 2202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   208                           LATE equ 0F8Dh ;# 
   209  0000                     # 2254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   210                           PR5 equ 0F90h ;# 
   211  0000                     # 2261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   212                           PR5L equ 0F90h ;# 
   213  0000                     # 2268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   214                           PR5H equ 0F91h ;# 
   215  0000                     # 2275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   216                           TRISA equ 0F92h ;# 
   217  0000                     # 2280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   218                           DDRA equ 0F92h ;# 
   219  0000                     # 2497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   220                           TRISB equ 0F93h ;# 
   221  0000                     # 2502 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   222                           DDRB equ 0F93h ;# 
   223  0000                     # 2719 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   224                           TRISC equ 0F94h ;# 
   225  0000                     # 2724 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   226                           DDRC equ 0F94h ;# 
   227  0000                     # 2941 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   228                           TRISD equ 0F95h ;# 
   229  0000                     # 2946 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   230                           DDRD equ 0F95h ;# 
   231  0000                     # 3163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   232                           TRISE equ 0F96h ;# 
   233  0000                     # 3168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   234                           DDRE equ 0F96h ;# 
   235  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   236                           ADCHS equ 0F99h ;# 
   237  0000                     # 3403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   238                           ADCON3 equ 0F9Ah ;# 
   239  0000                     # 3475 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   240                           OSCTUNE equ 0F9Bh ;# 
   241  0000                     # 3533 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   242                           PIE1 equ 0F9Dh ;# 
   243  0000                     # 3613 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   244                           PIR1 equ 0F9Eh ;# 
   245  0000                     # 3693 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   246                           IPR1 equ 0F9Fh ;# 
   247  0000                     # 3773 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   248                           PIE2 equ 0FA0h ;# 
   249  0000                     # 3814 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   250                           PIR2 equ 0FA1h ;# 
   251  0000                     # 3855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   252                           IPR2 equ 0FA2h ;# 
   253  0000                     # 3896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   254                           PIE3 equ 0FA3h ;# 
   255  0000                     # 3988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   256                           PIR3 equ 0FA4h ;# 
   257  0000                     # 4048 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   258                           IPR3 equ 0FA5h ;# 
   259  0000                     # 4108 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   260                           EECON1 equ 0FA6h ;# 
   261  0000                     # 4174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   262                           EECON2 equ 0FA7h ;# 
   263  0000                     # 4181 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   264                           EEDATA equ 0FA8h ;# 
   265  0000                     # 4188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   266                           EEADR equ 0FA9h ;# 
   267  0000                     # 4195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   268                           BAUDCON equ 0FAAh ;# 
   269  0000                     # 4200 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   270                           BAUDCTL equ 0FAAh ;# 
   271  0000                     # 4375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   272                           RCSTA equ 0FABh ;# 
   273  0000                     # 4380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   274                           RCSTA1 equ 0FABh ;# 
   275  0000                     # 4585 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   276                           TXSTA equ 0FACh ;# 
   277  0000                     # 4590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   278                           TXSTA1 equ 0FACh ;# 
   279  0000                     # 4841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   280                           TXREG equ 0FADh ;# 
   281  0000                     # 4846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   282                           TXREG1 equ 0FADh ;# 
   283  0000                     # 4853 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   284                           RCREG equ 0FAEh ;# 
   285  0000                     # 4858 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   286                           RCREG1 equ 0FAEh ;# 
   287  0000                     # 4865 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   288                           SPBRG equ 0FAFh ;# 
   289  0000                     # 4870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   290                           SPBRG1 equ 0FAFh ;# 
   291  0000                     # 4877 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   292                           SPBRGH equ 0FB0h ;# 
   293  0000                     # 4884 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   294                           QEICON equ 0FB6h ;# 
   295  0000                     # 5036 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   296                           T5CON equ 0FB7h ;# 
   297  0000                     # 5154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   298                           ANSEL0 equ 0FB8h ;# 
   299  0000                     # 5216 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   300                           ANSEL1 equ 0FB9h ;# 
   301  0000                     # 5236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   302                           CCP2CON equ 0FBAh ;# 
   303  0000                     # 5315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   304                           CCPR2 equ 0FBBh ;# 
   305  0000                     # 5322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   306                           CCPR2L equ 0FBBh ;# 
   307  0000                     # 5329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   308                           CCPR2H equ 0FBCh ;# 
   309  0000                     # 5336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   310                           CCP1CON equ 0FBDh ;# 
   311  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   312                           CCPR1 equ 0FBEh ;# 
   313  0000                     # 5422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   314                           CCPR1L equ 0FBEh ;# 
   315  0000                     # 5429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   316                           CCPR1H equ 0FBFh ;# 
   317  0000                     # 5436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   318                           ADCON2 equ 0FC0h ;# 
   319  0000                     # 5512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   320                           ADCON1 equ 0FC1h ;# 
   321  0000                     # 5608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   322                           ADCON0 equ 0FC2h ;# 
   323  0000                     # 5727 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   324                           ADRES equ 0FC3h ;# 
   325  0000                     # 5734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   326                           ADRESL equ 0FC3h ;# 
   327  0000                     # 5741 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   328                           ADRESH equ 0FC4h ;# 
   329  0000                     # 5748 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   330                           SSPCON equ 0FC6h ;# 
   331  0000                     # 5753 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   332                           SSPCON1 equ 0FC6h ;# 
   333  0000                     # 5886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   334                           SSPSTAT equ 0FC7h ;# 
   335  0000                     # 6107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   336                           SSPADD equ 0FC8h ;# 
   337  0000                     # 6114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   338                           SSPBUF equ 0FC9h ;# 
   339  0000                     # 6121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   340                           T2CON equ 0FCAh ;# 
   341  0000                     # 6219 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   342                           PR2 equ 0FCBh ;# 
   343  0000                     # 6224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   344                           MEMCON equ 0FCBh ;# 
   345  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   346                           TMR2 equ 0FCCh ;# 
   347  0000                     # 6336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   348                           T1CON equ 0FCDh ;# 
   349  0000                     # 6448 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   350                           TMR1 equ 0FCEh ;# 
   351  0000                     # 6455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   352                           TMR1L equ 0FCEh ;# 
   353  0000                     # 6462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   354                           TMR1H equ 0FCFh ;# 
   355  0000                     # 6469 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   356                           RCON equ 0FD0h ;# 
   357  0000                     # 6612 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   358                           WDTCON equ 0FD1h ;# 
   359  0000                     # 6639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   360                           LVDCON equ 0FD2h ;# 
   361  0000                     # 6704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   362                           OSCCON equ 0FD3h ;# 
   363  0000                     # 6790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   364                           T0CON equ 0FD5h ;# 
   365  0000                     # 6866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   366                           TMR0 equ 0FD6h ;# 
   367  0000                     # 6873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   368                           TMR0L equ 0FD6h ;# 
   369  0000                     # 6880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   370                           TMR0H equ 0FD7h ;# 
   371  0000                     # 6887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   372                           STATUS equ 0FD8h ;# 
   373  0000                     # 6958 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   374                           FSR2 equ 0FD9h ;# 
   375  0000                     # 6965 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   376                           FSR2L equ 0FD9h ;# 
   377  0000                     # 6972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   378                           FSR2H equ 0FDAh ;# 
   379  0000                     # 6979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   380                           PLUSW2 equ 0FDBh ;# 
   381  0000                     # 6986 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   382                           PREINC2 equ 0FDCh ;# 
   383  0000                     # 6993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   384                           POSTDEC2 equ 0FDDh ;# 
   385  0000                     # 7000 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   386                           POSTINC2 equ 0FDEh ;# 
   387  0000                     # 7007 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   388                           INDF2 equ 0FDFh ;# 
   389  0000                     # 7014 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   390                           BSR equ 0FE0h ;# 
   391  0000                     # 7021 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   392                           FSR1 equ 0FE1h ;# 
   393  0000                     # 7028 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   394                           FSR1L equ 0FE1h ;# 
   395  0000                     # 7035 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   396                           FSR1H equ 0FE2h ;# 
   397  0000                     # 7042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   398                           PLUSW1 equ 0FE3h ;# 
   399  0000                     # 7049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   400                           PREINC1 equ 0FE4h ;# 
   401  0000                     # 7056 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   402                           POSTDEC1 equ 0FE5h ;# 
   403  0000                     # 7063 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   404                           POSTINC1 equ 0FE6h ;# 
   405  0000                     # 7070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   406                           INDF1 equ 0FE7h ;# 
   407  0000                     # 7077 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   408                           WREG equ 0FE8h ;# 
   409  0000                     # 7084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   410                           FSR0 equ 0FE9h ;# 
   411  0000                     # 7091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   412                           FSR0L equ 0FE9h ;# 
   413  0000                     # 7098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   414                           FSR0H equ 0FEAh ;# 
   415  0000                     # 7105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   416                           PLUSW0 equ 0FEBh ;# 
   417  0000                     # 7112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   418                           PREINC0 equ 0FECh ;# 
   419  0000                     # 7119 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   420                           POSTDEC0 equ 0FEDh ;# 
   421  0000                     # 7126 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   422                           POSTINC0 equ 0FEEh ;# 
   423  0000                     # 7133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   424                           INDF0 equ 0FEFh ;# 
   425  0000                     # 7140 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   426                           INTCON3 equ 0FF0h ;# 
   427  0000                     # 7232 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   428                           INTCON2 equ 0FF1h ;# 
   429  0000                     # 7309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   430                           INTCON equ 0FF2h ;# 
   431  0000                     # 7426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   432                           PROD equ 0FF3h ;# 
   433  0000                     # 7433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   434                           PRODL equ 0FF3h ;# 
   435  0000                     # 7440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   436                           PRODH equ 0FF4h ;# 
   437  0000                     # 7447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   438                           TABLAT equ 0FF5h ;# 
   439  0000                     # 7456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   440                           TBLPTR equ 0FF6h ;# 
   441  0000                     # 7463 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   442                           TBLPTRL equ 0FF6h ;# 
   443  0000                     # 7470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   444                           TBLPTRH equ 0FF7h ;# 
   445  0000                     # 7477 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   446                           TBLPTRU equ 0FF8h ;# 
   447  0000                     # 7486 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   448                           PCLAT equ 0FF9h ;# 
   449  0000                     # 7493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   450                           PC equ 0FF9h ;# 
   451  0000                     # 7500 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   452                           PCL equ 0FF9h ;# 
   453  0000                     # 7507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   454                           PCLATH equ 0FFAh ;# 
   455  0000                     # 7514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   456                           PCLATU equ 0FFBh ;# 
   457  0000                     # 7521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   458                           STKPTR equ 0FFCh ;# 
   459  0000                     # 7595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   460                           TOS equ 0FFDh ;# 
   461  0000                     # 7602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   462                           TOSL equ 0FFDh ;# 
   463  0000                     # 7609 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   464                           TOSH equ 0FFEh ;# 
   465  0000                     # 7616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   466                           TOSU equ 0FFFh ;# 
   467  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   468                           DFLTCON equ 0F60h ;# 
   469  0000                     # 118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   470                           CAP3CON equ 0F61h ;# 
   471  0000                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   472                           CAP2CON equ 0F62h ;# 
   473  0000                     # 236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   474                           CAP1CON equ 0F63h ;# 
   475  0000                     # 295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   476                           CAP3BUFL equ 0F64h ;# 
   477  0000                     # 300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   478                           MAXCNTL equ 0F64h ;# 
   479  0000                     # 307 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   480                           CAP3BUFH equ 0F65h ;# 
   481  0000                     # 312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   482                           MAXCNTH equ 0F65h ;# 
   483  0000                     # 319 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   484                           CAP2BUFL equ 0F66h ;# 
   485  0000                     # 324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   486                           POSCNTL equ 0F66h ;# 
   487  0000                     # 331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   488                           CAP2BUFH equ 0F67h ;# 
   489  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   490                           POSCNTH equ 0F67h ;# 
   491  0000                     # 343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   492                           CAP1BUFL equ 0F68h ;# 
   493  0000                     # 348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   494                           VELRL equ 0F68h ;# 
   495  0000                     # 355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   496                           CAP1BUFH equ 0F69h ;# 
   497  0000                     # 360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   498                           VELRH equ 0F69h ;# 
   499  0000                     # 367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   500                           OVDCONS equ 0F6Ah ;# 
   501  0000                     # 437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   502                           OVDCOND equ 0F6Bh ;# 
   503  0000                     # 507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   504                           FLTCONFIG equ 0F6Ch ;# 
   505  0000                     # 569 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   506                           DTCON equ 0F6Dh ;# 
   507  0000                     # 695 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   508                           PWMCON1 equ 0F6Eh ;# 
   509  0000                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   510                           PWMCON0 equ 0F6Fh ;# 
   511  0000                     # 831 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   512                           SEVTCMPH equ 0F70h ;# 
   513  0000                     # 838 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   514                           SEVTCMPL equ 0F71h ;# 
   515  0000                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   516                           PDC3H equ 0F72h ;# 
   517  0000                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   518                           PDC3L equ 0F73h ;# 
   519  0000                     # 859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   520                           PDC2H equ 0F74h ;# 
   521  0000                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   522                           PDC2L equ 0F75h ;# 
   523  0000                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   524                           PDC1H equ 0F76h ;# 
   525  0000                     # 880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   526                           PDC1L equ 0F77h ;# 
   527  0000                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   528                           PDC0H equ 0F78h ;# 
   529  0000                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   530                           PDC0L equ 0F79h ;# 
   531  0000                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   532                           PTPERH equ 0F7Ah ;# 
   533  0000                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   534                           PTPERL equ 0F7Bh ;# 
   535  0000                     # 915 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   536                           PTMRH equ 0F7Ch ;# 
   537  0000                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   538                           PTMRL equ 0F7Dh ;# 
   539  0000                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   540                           PTCON1 equ 0F7Eh ;# 
   541  0000                     # 956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   542                           PTCON0 equ 0F7Fh ;# 
   543  0000                     # 1038 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   544                           PORTA equ 0F80h ;# 
   545  0000                     # 1199 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   546                           PORTB equ 0F81h ;# 
   547  0000                     # 1270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   548                           PORTC equ 0F82h ;# 
   549  0000                     # 1536 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   550                           PORTD equ 0F83h ;# 
   551  0000                     # 1607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   552                           PORTE equ 0F84h ;# 
   553  0000                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   554                           TMR5 equ 0F87h ;# 
   555  0000                     # 1740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   556                           TMR5L equ 0F87h ;# 
   557  0000                     # 1747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   558                           TMR5H equ 0F88h ;# 
   559  0000                     # 1754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   560                           LATA equ 0F89h ;# 
   561  0000                     # 1866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   562                           LATB equ 0F8Ah ;# 
   563  0000                     # 1978 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   564                           LATC equ 0F8Bh ;# 
   565  0000                     # 2090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   566                           LATD equ 0F8Ch ;# 
   567  0000                     # 2202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   568                           LATE equ 0F8Dh ;# 
   569  0000                     # 2254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   570                           PR5 equ 0F90h ;# 
   571  0000                     # 2261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   572                           PR5L equ 0F90h ;# 
   573  0000                     # 2268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   574                           PR5H equ 0F91h ;# 
   575  0000                     # 2275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   576                           TRISA equ 0F92h ;# 
   577  0000                     # 2280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   578                           DDRA equ 0F92h ;# 
   579  0000                     # 2497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   580                           TRISB equ 0F93h ;# 
   581  0000                     # 2502 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   582                           DDRB equ 0F93h ;# 
   583  0000                     # 2719 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   584                           TRISC equ 0F94h ;# 
   585  0000                     # 2724 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   586                           DDRC equ 0F94h ;# 
   587  0000                     # 2941 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   588                           TRISD equ 0F95h ;# 
   589  0000                     # 2946 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   590                           DDRD equ 0F95h ;# 
   591  0000                     # 3163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   592                           TRISE equ 0F96h ;# 
   593  0000                     # 3168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   594                           DDRE equ 0F96h ;# 
   595  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   596                           ADCHS equ 0F99h ;# 
   597  0000                     # 3403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   598                           ADCON3 equ 0F9Ah ;# 
   599  0000                     # 3475 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   600                           OSCTUNE equ 0F9Bh ;# 
   601  0000                     # 3533 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   602                           PIE1 equ 0F9Dh ;# 
   603  0000                     # 3613 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   604                           PIR1 equ 0F9Eh ;# 
   605  0000                     # 3693 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   606                           IPR1 equ 0F9Fh ;# 
   607  0000                     # 3773 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   608                           PIE2 equ 0FA0h ;# 
   609  0000                     # 3814 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   610                           PIR2 equ 0FA1h ;# 
   611  0000                     # 3855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   612                           IPR2 equ 0FA2h ;# 
   613  0000                     # 3896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   614                           PIE3 equ 0FA3h ;# 
   615  0000                     # 3988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   616                           PIR3 equ 0FA4h ;# 
   617  0000                     # 4048 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   618                           IPR3 equ 0FA5h ;# 
   619  0000                     # 4108 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   620                           EECON1 equ 0FA6h ;# 
   621  0000                     # 4174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   622                           EECON2 equ 0FA7h ;# 
   623  0000                     # 4181 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   624                           EEDATA equ 0FA8h ;# 
   625  0000                     # 4188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   626                           EEADR equ 0FA9h ;# 
   627  0000                     # 4195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   628                           BAUDCON equ 0FAAh ;# 
   629  0000                     # 4200 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   630                           BAUDCTL equ 0FAAh ;# 
   631  0000                     # 4375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   632                           RCSTA equ 0FABh ;# 
   633  0000                     # 4380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   634                           RCSTA1 equ 0FABh ;# 
   635  0000                     # 4585 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   636                           TXSTA equ 0FACh ;# 
   637  0000                     # 4590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   638                           TXSTA1 equ 0FACh ;# 
   639  0000                     # 4841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   640                           TXREG equ 0FADh ;# 
   641  0000                     # 4846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   642                           TXREG1 equ 0FADh ;# 
   643  0000                     # 4853 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   644                           RCREG equ 0FAEh ;# 
   645  0000                     # 4858 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   646                           RCREG1 equ 0FAEh ;# 
   647  0000                     # 4865 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   648                           SPBRG equ 0FAFh ;# 
   649  0000                     # 4870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   650                           SPBRG1 equ 0FAFh ;# 
   651  0000                     # 4877 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   652                           SPBRGH equ 0FB0h ;# 
   653  0000                     # 4884 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   654                           QEICON equ 0FB6h ;# 
   655  0000                     # 5036 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   656                           T5CON equ 0FB7h ;# 
   657  0000                     # 5154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   658                           ANSEL0 equ 0FB8h ;# 
   659  0000                     # 5216 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   660                           ANSEL1 equ 0FB9h ;# 
   661  0000                     # 5236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   662                           CCP2CON equ 0FBAh ;# 
   663  0000                     # 5315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   664                           CCPR2 equ 0FBBh ;# 
   665  0000                     # 5322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   666                           CCPR2L equ 0FBBh ;# 
   667  0000                     # 5329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   668                           CCPR2H equ 0FBCh ;# 
   669  0000                     # 5336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   670                           CCP1CON equ 0FBDh ;# 
   671  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   672                           CCPR1 equ 0FBEh ;# 
   673  0000                     # 5422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   674                           CCPR1L equ 0FBEh ;# 
   675  0000                     # 5429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   676                           CCPR1H equ 0FBFh ;# 
   677  0000                     # 5436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   678                           ADCON2 equ 0FC0h ;# 
   679  0000                     # 5512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   680                           ADCON1 equ 0FC1h ;# 
   681  0000                     # 5608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   682                           ADCON0 equ 0FC2h ;# 
   683  0000                     # 5727 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   684                           ADRES equ 0FC3h ;# 
   685  0000                     # 5734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   686                           ADRESL equ 0FC3h ;# 
   687  0000                     # 5741 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   688                           ADRESH equ 0FC4h ;# 
   689  0000                     # 5748 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   690                           SSPCON equ 0FC6h ;# 
   691  0000                     # 5753 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   692                           SSPCON1 equ 0FC6h ;# 
   693  0000                     # 5886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   694                           SSPSTAT equ 0FC7h ;# 
   695  0000                     # 6107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   696                           SSPADD equ 0FC8h ;# 
   697  0000                     # 6114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   698                           SSPBUF equ 0FC9h ;# 
   699  0000                     # 6121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   700                           T2CON equ 0FCAh ;# 
   701  0000                     # 6219 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   702                           PR2 equ 0FCBh ;# 
   703  0000                     # 6224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   704                           MEMCON equ 0FCBh ;# 
   705  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   706                           TMR2 equ 0FCCh ;# 
   707  0000                     # 6336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   708                           T1CON equ 0FCDh ;# 
   709  0000                     # 6448 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   710                           TMR1 equ 0FCEh ;# 
   711  0000                     # 6455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   712                           TMR1L equ 0FCEh ;# 
   713  0000                     # 6462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   714                           TMR1H equ 0FCFh ;# 
   715  0000                     # 6469 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   716                           RCON equ 0FD0h ;# 
   717  0000                     # 6612 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   718                           WDTCON equ 0FD1h ;# 
   719  0000                     # 6639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   720                           LVDCON equ 0FD2h ;# 
   721  0000                     # 6704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   722                           OSCCON equ 0FD3h ;# 
   723  0000                     # 6790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   724                           T0CON equ 0FD5h ;# 
   725  0000                     # 6866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   726                           TMR0 equ 0FD6h ;# 
   727  0000                     # 6873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   728                           TMR0L equ 0FD6h ;# 
   729  0000                     # 6880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   730                           TMR0H equ 0FD7h ;# 
   731  0000                     # 6887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   732                           STATUS equ 0FD8h ;# 
   733  0000                     # 6958 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   734                           FSR2 equ 0FD9h ;# 
   735  0000                     # 6965 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   736                           FSR2L equ 0FD9h ;# 
   737  0000                     # 6972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   738                           FSR2H equ 0FDAh ;# 
   739  0000                     # 6979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   740                           PLUSW2 equ 0FDBh ;# 
   741  0000                     # 6986 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   742                           PREINC2 equ 0FDCh ;# 
   743  0000                     # 6993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   744                           POSTDEC2 equ 0FDDh ;# 
   745  0000                     # 7000 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   746                           POSTINC2 equ 0FDEh ;# 
   747  0000                     # 7007 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   748                           INDF2 equ 0FDFh ;# 
   749  0000                     # 7014 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   750                           BSR equ 0FE0h ;# 
   751  0000                     # 7021 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   752                           FSR1 equ 0FE1h ;# 
   753  0000                     # 7028 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   754                           FSR1L equ 0FE1h ;# 
   755  0000                     # 7035 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   756                           FSR1H equ 0FE2h ;# 
   757  0000                     # 7042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   758                           PLUSW1 equ 0FE3h ;# 
   759  0000                     # 7049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   760                           PREINC1 equ 0FE4h ;# 
   761  0000                     # 7056 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   762                           POSTDEC1 equ 0FE5h ;# 
   763  0000                     # 7063 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   764                           POSTINC1 equ 0FE6h ;# 
   765  0000                     # 7070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   766                           INDF1 equ 0FE7h ;# 
   767  0000                     # 7077 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   768                           WREG equ 0FE8h ;# 
   769  0000                     # 7084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   770                           FSR0 equ 0FE9h ;# 
   771  0000                     # 7091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   772                           FSR0L equ 0FE9h ;# 
   773  0000                     # 7098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   774                           FSR0H equ 0FEAh ;# 
   775  0000                     # 7105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   776                           PLUSW0 equ 0FEBh ;# 
   777  0000                     # 7112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   778                           PREINC0 equ 0FECh ;# 
   779  0000                     # 7119 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   780                           POSTDEC0 equ 0FEDh ;# 
   781  0000                     # 7126 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   782                           POSTINC0 equ 0FEEh ;# 
   783  0000                     # 7133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   784                           INDF0 equ 0FEFh ;# 
   785  0000                     # 7140 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   786                           INTCON3 equ 0FF0h ;# 
   787  0000                     # 7232 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   788                           INTCON2 equ 0FF1h ;# 
   789  0000                     # 7309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   790                           INTCON equ 0FF2h ;# 
   791  0000                     # 7426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   792                           PROD equ 0FF3h ;# 
   793  0000                     # 7433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   794                           PRODL equ 0FF3h ;# 
   795  0000                     # 7440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   796                           PRODH equ 0FF4h ;# 
   797  0000                     # 7447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   798                           TABLAT equ 0FF5h ;# 
   799  0000                     # 7456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   800                           TBLPTR equ 0FF6h ;# 
   801  0000                     # 7463 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   802                           TBLPTRL equ 0FF6h ;# 
   803  0000                     # 7470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   804                           TBLPTRH equ 0FF7h ;# 
   805  0000                     # 7477 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   806                           TBLPTRU equ 0FF8h ;# 
   807  0000                     # 7486 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   808                           PCLAT equ 0FF9h ;# 
   809  0000                     # 7493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   810                           PC equ 0FF9h ;# 
   811  0000                     # 7500 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   812                           PCL equ 0FF9h ;# 
   813  0000                     # 7507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   814                           PCLATH equ 0FFAh ;# 
   815  0000                     # 7514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   816                           PCLATU equ 0FFBh ;# 
   817  0000                     # 7521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   818                           STKPTR equ 0FFCh ;# 
   819  0000                     # 7595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   820                           TOS equ 0FFDh ;# 
   821  0000                     # 7602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   822                           TOSL equ 0FFDh ;# 
   823  0000                     # 7609 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   824                           TOSH equ 0FFEh ;# 
   825  0000                     # 7616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   826                           TOSU equ 0FFFh ;# 
   827  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   828                           DFLTCON equ 0F60h ;# 
   829  0000                     # 118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   830                           CAP3CON equ 0F61h ;# 
   831  0000                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   832                           CAP2CON equ 0F62h ;# 
   833  0000                     # 236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   834                           CAP1CON equ 0F63h ;# 
   835  0000                     # 295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   836                           CAP3BUFL equ 0F64h ;# 
   837  0000                     # 300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   838                           MAXCNTL equ 0F64h ;# 
   839  0000                     # 307 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   840                           CAP3BUFH equ 0F65h ;# 
   841  0000                     # 312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   842                           MAXCNTH equ 0F65h ;# 
   843  0000                     # 319 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   844                           CAP2BUFL equ 0F66h ;# 
   845  0000                     # 324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   846                           POSCNTL equ 0F66h ;# 
   847  0000                     # 331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   848                           CAP2BUFH equ 0F67h ;# 
   849  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   850                           POSCNTH equ 0F67h ;# 
   851  0000                     # 343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   852                           CAP1BUFL equ 0F68h ;# 
   853  0000                     # 348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   854                           VELRL equ 0F68h ;# 
   855  0000                     # 355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   856                           CAP1BUFH equ 0F69h ;# 
   857  0000                     # 360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   858                           VELRH equ 0F69h ;# 
   859  0000                     # 367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   860                           OVDCONS equ 0F6Ah ;# 
   861  0000                     # 437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   862                           OVDCOND equ 0F6Bh ;# 
   863  0000                     # 507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   864                           FLTCONFIG equ 0F6Ch ;# 
   865  0000                     # 569 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   866                           DTCON equ 0F6Dh ;# 
   867  0000                     # 695 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   868                           PWMCON1 equ 0F6Eh ;# 
   869  0000                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   870                           PWMCON0 equ 0F6Fh ;# 
   871  0000                     # 831 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   872                           SEVTCMPH equ 0F70h ;# 
   873  0000                     # 838 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   874                           SEVTCMPL equ 0F71h ;# 
   875  0000                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   876                           PDC3H equ 0F72h ;# 
   877  0000                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   878                           PDC3L equ 0F73h ;# 
   879  0000                     # 859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   880                           PDC2H equ 0F74h ;# 
   881  0000                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   882                           PDC2L equ 0F75h ;# 
   883  0000                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   884                           PDC1H equ 0F76h ;# 
   885  0000                     # 880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   886                           PDC1L equ 0F77h ;# 
   887  0000                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   888                           PDC0H equ 0F78h ;# 
   889  0000                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   890                           PDC0L equ 0F79h ;# 
   891  0000                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   892                           PTPERH equ 0F7Ah ;# 
   893  0000                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   894                           PTPERL equ 0F7Bh ;# 
   895  0000                     # 915 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   896                           PTMRH equ 0F7Ch ;# 
   897  0000                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   898                           PTMRL equ 0F7Dh ;# 
   899  0000                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   900                           PTCON1 equ 0F7Eh ;# 
   901  0000                     # 956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   902                           PTCON0 equ 0F7Fh ;# 
   903  0000                     # 1038 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   904                           PORTA equ 0F80h ;# 
   905  0000                     # 1199 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   906                           PORTB equ 0F81h ;# 
   907  0000                     # 1270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   908                           PORTC equ 0F82h ;# 
   909  0000                     # 1536 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   910                           PORTD equ 0F83h ;# 
   911  0000                     # 1607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   912                           PORTE equ 0F84h ;# 
   913  0000                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   914                           TMR5 equ 0F87h ;# 
   915  0000                     # 1740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   916                           TMR5L equ 0F87h ;# 
   917  0000                     # 1747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   918                           TMR5H equ 0F88h ;# 
   919  0000                     # 1754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   920                           LATA equ 0F89h ;# 
   921  0000                     # 1866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   922                           LATB equ 0F8Ah ;# 
   923  0000                     # 1978 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   924                           LATC equ 0F8Bh ;# 
   925  0000                     # 2090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   926                           LATD equ 0F8Ch ;# 
   927  0000                     # 2202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   928                           LATE equ 0F8Dh ;# 
   929  0000                     # 2254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   930                           PR5 equ 0F90h ;# 
   931  0000                     # 2261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   932                           PR5L equ 0F90h ;# 
   933  0000                     # 2268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   934                           PR5H equ 0F91h ;# 
   935  0000                     # 2275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   936                           TRISA equ 0F92h ;# 
   937  0000                     # 2280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   938                           DDRA equ 0F92h ;# 
   939  0000                     # 2497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   940                           TRISB equ 0F93h ;# 
   941  0000                     # 2502 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   942                           DDRB equ 0F93h ;# 
   943  0000                     # 2719 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   944                           TRISC equ 0F94h ;# 
   945  0000                     # 2724 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   946                           DDRC equ 0F94h ;# 
   947  0000                     # 2941 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   948                           TRISD equ 0F95h ;# 
   949  0000                     # 2946 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   950                           DDRD equ 0F95h ;# 
   951  0000                     # 3163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   952                           TRISE equ 0F96h ;# 
   953  0000                     # 3168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   954                           DDRE equ 0F96h ;# 
   955  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   956                           ADCHS equ 0F99h ;# 
   957  0000                     # 3403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   958                           ADCON3 equ 0F9Ah ;# 
   959  0000                     # 3475 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   960                           OSCTUNE equ 0F9Bh ;# 
   961  0000                     # 3533 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   962                           PIE1 equ 0F9Dh ;# 
   963  0000                     # 3613 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   964                           PIR1 equ 0F9Eh ;# 
   965  0000                     # 3693 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   966                           IPR1 equ 0F9Fh ;# 
   967  0000                     # 3773 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   968                           PIE2 equ 0FA0h ;# 
   969  0000                     # 3814 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   970                           PIR2 equ 0FA1h ;# 
   971  0000                     # 3855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   972                           IPR2 equ 0FA2h ;# 
   973  0000                     # 3896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   974                           PIE3 equ 0FA3h ;# 
   975  0000                     # 3988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   976                           PIR3 equ 0FA4h ;# 
   977  0000                     # 4048 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   978                           IPR3 equ 0FA5h ;# 
   979  0000                     # 4108 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   980                           EECON1 equ 0FA6h ;# 
   981  0000                     # 4174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   982                           EECON2 equ 0FA7h ;# 
   983  0000                     # 4181 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   984                           EEDATA equ 0FA8h ;# 
   985  0000                     # 4188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   986                           EEADR equ 0FA9h ;# 
   987  0000                     # 4195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   988                           BAUDCON equ 0FAAh ;# 
   989  0000                     # 4200 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   990                           BAUDCTL equ 0FAAh ;# 
   991  0000                     # 4375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   992                           RCSTA equ 0FABh ;# 
   993  0000                     # 4380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   994                           RCSTA1 equ 0FABh ;# 
   995  0000                     # 4585 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   996                           TXSTA equ 0FACh ;# 
   997  0000                     # 4590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   998                           TXSTA1 equ 0FACh ;# 
   999  0000                     # 4841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1000                           TXREG equ 0FADh ;# 
  1001  0000                     # 4846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1002                           TXREG1 equ 0FADh ;# 
  1003  0000                     # 4853 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1004                           RCREG equ 0FAEh ;# 
  1005  0000                     # 4858 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1006                           RCREG1 equ 0FAEh ;# 
  1007  0000                     # 4865 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1008                           SPBRG equ 0FAFh ;# 
  1009  0000                     # 4870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1010                           SPBRG1 equ 0FAFh ;# 
  1011  0000                     # 4877 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1012                           SPBRGH equ 0FB0h ;# 
  1013  0000                     # 4884 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1014                           QEICON equ 0FB6h ;# 
  1015  0000                     # 5036 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1016                           T5CON equ 0FB7h ;# 
  1017  0000                     # 5154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1018                           ANSEL0 equ 0FB8h ;# 
  1019  0000                     # 5216 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1020                           ANSEL1 equ 0FB9h ;# 
  1021  0000                     # 5236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1022                           CCP2CON equ 0FBAh ;# 
  1023  0000                     # 5315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1024                           CCPR2 equ 0FBBh ;# 
  1025  0000                     # 5322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1026                           CCPR2L equ 0FBBh ;# 
  1027  0000                     # 5329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1028                           CCPR2H equ 0FBCh ;# 
  1029  0000                     # 5336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1030                           CCP1CON equ 0FBDh ;# 
  1031  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1032                           CCPR1 equ 0FBEh ;# 
  1033  0000                     # 5422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1034                           CCPR1L equ 0FBEh ;# 
  1035  0000                     # 5429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1036                           CCPR1H equ 0FBFh ;# 
  1037  0000                     # 5436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1038                           ADCON2 equ 0FC0h ;# 
  1039  0000                     # 5512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1040                           ADCON1 equ 0FC1h ;# 
  1041  0000                     # 5608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1042                           ADCON0 equ 0FC2h ;# 
  1043  0000                     # 5727 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1044                           ADRES equ 0FC3h ;# 
  1045  0000                     # 5734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1046                           ADRESL equ 0FC3h ;# 
  1047  0000                     # 5741 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1048                           ADRESH equ 0FC4h ;# 
  1049  0000                     # 5748 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1050                           SSPCON equ 0FC6h ;# 
  1051  0000                     # 5753 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1052                           SSPCON1 equ 0FC6h ;# 
  1053  0000                     # 5886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1054                           SSPSTAT equ 0FC7h ;# 
  1055  0000                     # 6107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1056                           SSPADD equ 0FC8h ;# 
  1057  0000                     # 6114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1058                           SSPBUF equ 0FC9h ;# 
  1059  0000                     # 6121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1060                           T2CON equ 0FCAh ;# 
  1061  0000                     # 6219 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1062                           PR2 equ 0FCBh ;# 
  1063  0000                     # 6224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1064                           MEMCON equ 0FCBh ;# 
  1065  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1066                           TMR2 equ 0FCCh ;# 
  1067  0000                     # 6336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1068                           T1CON equ 0FCDh ;# 
  1069  0000                     # 6448 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1070                           TMR1 equ 0FCEh ;# 
  1071  0000                     # 6455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1072                           TMR1L equ 0FCEh ;# 
  1073  0000                     # 6462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1074                           TMR1H equ 0FCFh ;# 
  1075  0000                     # 6469 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1076                           RCON equ 0FD0h ;# 
  1077  0000                     # 6612 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1078                           WDTCON equ 0FD1h ;# 
  1079  0000                     # 6639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1080                           LVDCON equ 0FD2h ;# 
  1081  0000                     # 6704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1082                           OSCCON equ 0FD3h ;# 
  1083  0000                     # 6790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1084                           T0CON equ 0FD5h ;# 
  1085  0000                     # 6866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1086                           TMR0 equ 0FD6h ;# 
  1087  0000                     # 6873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1088                           TMR0L equ 0FD6h ;# 
  1089  0000                     # 6880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1090                           TMR0H equ 0FD7h ;# 
  1091  0000                     # 6887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1092                           STATUS equ 0FD8h ;# 
  1093  0000                     # 6958 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1094                           FSR2 equ 0FD9h ;# 
  1095  0000                     # 6965 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1096                           FSR2L equ 0FD9h ;# 
  1097  0000                     # 6972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1098                           FSR2H equ 0FDAh ;# 
  1099  0000                     # 6979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1100                           PLUSW2 equ 0FDBh ;# 
  1101  0000                     # 6986 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1102                           PREINC2 equ 0FDCh ;# 
  1103  0000                     # 6993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1104                           POSTDEC2 equ 0FDDh ;# 
  1105  0000                     # 7000 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1106                           POSTINC2 equ 0FDEh ;# 
  1107  0000                     # 7007 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1108                           INDF2 equ 0FDFh ;# 
  1109  0000                     # 7014 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1110                           BSR equ 0FE0h ;# 
  1111  0000                     # 7021 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1112                           FSR1 equ 0FE1h ;# 
  1113  0000                     # 7028 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1114                           FSR1L equ 0FE1h ;# 
  1115  0000                     # 7035 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1116                           FSR1H equ 0FE2h ;# 
  1117  0000                     # 7042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1118                           PLUSW1 equ 0FE3h ;# 
  1119  0000                     # 7049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1120                           PREINC1 equ 0FE4h ;# 
  1121  0000                     # 7056 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1122                           POSTDEC1 equ 0FE5h ;# 
  1123  0000                     # 7063 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1124                           POSTINC1 equ 0FE6h ;# 
  1125  0000                     # 7070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1126                           INDF1 equ 0FE7h ;# 
  1127  0000                     # 7077 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1128                           WREG equ 0FE8h ;# 
  1129  0000                     # 7084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1130                           FSR0 equ 0FE9h ;# 
  1131  0000                     # 7091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1132                           FSR0L equ 0FE9h ;# 
  1133  0000                     # 7098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1134                           FSR0H equ 0FEAh ;# 
  1135  0000                     # 7105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1136                           PLUSW0 equ 0FEBh ;# 
  1137  0000                     # 7112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1138                           PREINC0 equ 0FECh ;# 
  1139  0000                     # 7119 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1140                           POSTDEC0 equ 0FEDh ;# 
  1141  0000                     # 7126 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1142                           POSTINC0 equ 0FEEh ;# 
  1143  0000                     # 7133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1144                           INDF0 equ 0FEFh ;# 
  1145  0000                     # 7140 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1146                           INTCON3 equ 0FF0h ;# 
  1147  0000                     # 7232 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1148                           INTCON2 equ 0FF1h ;# 
  1149  0000                     # 7309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1150                           INTCON equ 0FF2h ;# 
  1151  0000                     # 7426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1152                           PROD equ 0FF3h ;# 
  1153  0000                     # 7433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1154                           PRODL equ 0FF3h ;# 
  1155  0000                     # 7440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1156                           PRODH equ 0FF4h ;# 
  1157  0000                     # 7447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1158                           TABLAT equ 0FF5h ;# 
  1159  0000                     # 7456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1160                           TBLPTR equ 0FF6h ;# 
  1161  0000                     # 7463 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1162                           TBLPTRL equ 0FF6h ;# 
  1163  0000                     # 7470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1164                           TBLPTRH equ 0FF7h ;# 
  1165  0000                     # 7477 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1166                           TBLPTRU equ 0FF8h ;# 
  1167  0000                     # 7486 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1168                           PCLAT equ 0FF9h ;# 
  1169  0000                     # 7493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1170                           PC equ 0FF9h ;# 
  1171  0000                     # 7500 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1172                           PCL equ 0FF9h ;# 
  1173  0000                     # 7507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1174                           PCLATH equ 0FFAh ;# 
  1175  0000                     # 7514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1176                           PCLATU equ 0FFBh ;# 
  1177  0000                     # 7521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1178                           STKPTR equ 0FFCh ;# 
  1179  0000                     # 7595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1180                           TOS equ 0FFDh ;# 
  1181  0000                     # 7602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1182                           TOSL equ 0FFDh ;# 
  1183  0000                     # 7609 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1184                           TOSH equ 0FFEh ;# 
  1185  0000                     # 7616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1186                           TOSU equ 0FFFh ;# 
  1187  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1188                           DFLTCON equ 0F60h ;# 
  1189  0000                     # 118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1190                           CAP3CON equ 0F61h ;# 
  1191  0000                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1192                           CAP2CON equ 0F62h ;# 
  1193  0000                     # 236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1194                           CAP1CON equ 0F63h ;# 
  1195  0000                     # 295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1196                           CAP3BUFL equ 0F64h ;# 
  1197  0000                     # 300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1198                           MAXCNTL equ 0F64h ;# 
  1199  0000                     # 307 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1200                           CAP3BUFH equ 0F65h ;# 
  1201  0000                     # 312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1202                           MAXCNTH equ 0F65h ;# 
  1203  0000                     # 319 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1204                           CAP2BUFL equ 0F66h ;# 
  1205  0000                     # 324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1206                           POSCNTL equ 0F66h ;# 
  1207  0000                     # 331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1208                           CAP2BUFH equ 0F67h ;# 
  1209  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1210                           POSCNTH equ 0F67h ;# 
  1211  0000                     # 343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1212                           CAP1BUFL equ 0F68h ;# 
  1213  0000                     # 348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1214                           VELRL equ 0F68h ;# 
  1215  0000                     # 355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1216                           CAP1BUFH equ 0F69h ;# 
  1217  0000                     # 360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1218                           VELRH equ 0F69h ;# 
  1219  0000                     # 367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1220                           OVDCONS equ 0F6Ah ;# 
  1221  0000                     # 437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1222                           OVDCOND equ 0F6Bh ;# 
  1223  0000                     # 507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1224                           FLTCONFIG equ 0F6Ch ;# 
  1225  0000                     # 569 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1226                           DTCON equ 0F6Dh ;# 
  1227  0000                     # 695 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1228                           PWMCON1 equ 0F6Eh ;# 
  1229  0000                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1230                           PWMCON0 equ 0F6Fh ;# 
  1231  0000                     # 831 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1232                           SEVTCMPH equ 0F70h ;# 
  1233  0000                     # 838 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1234                           SEVTCMPL equ 0F71h ;# 
  1235  0000                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1236                           PDC3H equ 0F72h ;# 
  1237  0000                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1238                           PDC3L equ 0F73h ;# 
  1239  0000                     # 859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1240                           PDC2H equ 0F74h ;# 
  1241  0000                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1242                           PDC2L equ 0F75h ;# 
  1243  0000                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1244                           PDC1H equ 0F76h ;# 
  1245  0000                     # 880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1246                           PDC1L equ 0F77h ;# 
  1247  0000                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1248                           PDC0H equ 0F78h ;# 
  1249  0000                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1250                           PDC0L equ 0F79h ;# 
  1251  0000                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1252                           PTPERH equ 0F7Ah ;# 
  1253  0000                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1254                           PTPERL equ 0F7Bh ;# 
  1255  0000                     # 915 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1256                           PTMRH equ 0F7Ch ;# 
  1257  0000                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1258                           PTMRL equ 0F7Dh ;# 
  1259  0000                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1260                           PTCON1 equ 0F7Eh ;# 
  1261  0000                     # 956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1262                           PTCON0 equ 0F7Fh ;# 
  1263  0000                     # 1038 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1264                           PORTA equ 0F80h ;# 
  1265  0000                     # 1199 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1266                           PORTB equ 0F81h ;# 
  1267  0000                     # 1270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1268                           PORTC equ 0F82h ;# 
  1269  0000                     # 1536 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1270                           PORTD equ 0F83h ;# 
  1271  0000                     # 1607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1272                           PORTE equ 0F84h ;# 
  1273  0000                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1274                           TMR5 equ 0F87h ;# 
  1275  0000                     # 1740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1276                           TMR5L equ 0F87h ;# 
  1277  0000                     # 1747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1278                           TMR5H equ 0F88h ;# 
  1279  0000                     # 1754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1280                           LATA equ 0F89h ;# 
  1281  0000                     # 1866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1282                           LATB equ 0F8Ah ;# 
  1283  0000                     # 1978 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1284                           LATC equ 0F8Bh ;# 
  1285  0000                     # 2090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1286                           LATD equ 0F8Ch ;# 
  1287  0000                     # 2202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1288                           LATE equ 0F8Dh ;# 
  1289  0000                     # 2254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1290                           PR5 equ 0F90h ;# 
  1291  0000                     # 2261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1292                           PR5L equ 0F90h ;# 
  1293  0000                     # 2268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1294                           PR5H equ 0F91h ;# 
  1295  0000                     # 2275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1296                           TRISA equ 0F92h ;# 
  1297  0000                     # 2280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1298                           DDRA equ 0F92h ;# 
  1299  0000                     # 2497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1300                           TRISB equ 0F93h ;# 
  1301  0000                     # 2502 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1302                           DDRB equ 0F93h ;# 
  1303  0000                     # 2719 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1304                           TRISC equ 0F94h ;# 
  1305  0000                     # 2724 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1306                           DDRC equ 0F94h ;# 
  1307  0000                     # 2941 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1308                           TRISD equ 0F95h ;# 
  1309  0000                     # 2946 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1310                           DDRD equ 0F95h ;# 
  1311  0000                     # 3163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1312                           TRISE equ 0F96h ;# 
  1313  0000                     # 3168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1314                           DDRE equ 0F96h ;# 
  1315  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1316                           ADCHS equ 0F99h ;# 
  1317  0000                     # 3403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1318                           ADCON3 equ 0F9Ah ;# 
  1319  0000                     # 3475 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1320                           OSCTUNE equ 0F9Bh ;# 
  1321  0000                     # 3533 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1322                           PIE1 equ 0F9Dh ;# 
  1323  0000                     # 3613 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1324                           PIR1 equ 0F9Eh ;# 
  1325  0000                     # 3693 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1326                           IPR1 equ 0F9Fh ;# 
  1327  0000                     # 3773 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1328                           PIE2 equ 0FA0h ;# 
  1329  0000                     # 3814 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1330                           PIR2 equ 0FA1h ;# 
  1331  0000                     # 3855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1332                           IPR2 equ 0FA2h ;# 
  1333  0000                     # 3896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1334                           PIE3 equ 0FA3h ;# 
  1335  0000                     # 3988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1336                           PIR3 equ 0FA4h ;# 
  1337  0000                     # 4048 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1338                           IPR3 equ 0FA5h ;# 
  1339  0000                     # 4108 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1340                           EECON1 equ 0FA6h ;# 
  1341  0000                     # 4174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1342                           EECON2 equ 0FA7h ;# 
  1343  0000                     # 4181 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1344                           EEDATA equ 0FA8h ;# 
  1345  0000                     # 4188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1346                           EEADR equ 0FA9h ;# 
  1347  0000                     # 4195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1348                           BAUDCON equ 0FAAh ;# 
  1349  0000                     # 4200 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1350                           BAUDCTL equ 0FAAh ;# 
  1351  0000                     # 4375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1352                           RCSTA equ 0FABh ;# 
  1353  0000                     # 4380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1354                           RCSTA1 equ 0FABh ;# 
  1355  0000                     # 4585 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1356                           TXSTA equ 0FACh ;# 
  1357  0000                     # 4590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1358                           TXSTA1 equ 0FACh ;# 
  1359  0000                     # 4841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1360                           TXREG equ 0FADh ;# 
  1361  0000                     # 4846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1362                           TXREG1 equ 0FADh ;# 
  1363  0000                     # 4853 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1364                           RCREG equ 0FAEh ;# 
  1365  0000                     # 4858 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1366                           RCREG1 equ 0FAEh ;# 
  1367  0000                     # 4865 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1368                           SPBRG equ 0FAFh ;# 
  1369  0000                     # 4870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1370                           SPBRG1 equ 0FAFh ;# 
  1371  0000                     # 4877 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1372                           SPBRGH equ 0FB0h ;# 
  1373  0000                     # 4884 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1374                           QEICON equ 0FB6h ;# 
  1375  0000                     # 5036 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1376                           T5CON equ 0FB7h ;# 
  1377  0000                     # 5154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1378                           ANSEL0 equ 0FB8h ;# 
  1379  0000                     # 5216 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1380                           ANSEL1 equ 0FB9h ;# 
  1381  0000                     # 5236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1382                           CCP2CON equ 0FBAh ;# 
  1383  0000                     # 5315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1384                           CCPR2 equ 0FBBh ;# 
  1385  0000                     # 5322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1386                           CCPR2L equ 0FBBh ;# 
  1387  0000                     # 5329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1388                           CCPR2H equ 0FBCh ;# 
  1389  0000                     # 5336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1390                           CCP1CON equ 0FBDh ;# 
  1391  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1392                           CCPR1 equ 0FBEh ;# 
  1393  0000                     # 5422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1394                           CCPR1L equ 0FBEh ;# 
  1395  0000                     # 5429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1396                           CCPR1H equ 0FBFh ;# 
  1397  0000                     # 5436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1398                           ADCON2 equ 0FC0h ;# 
  1399  0000                     # 5512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1400                           ADCON1 equ 0FC1h ;# 
  1401  0000                     # 5608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1402                           ADCON0 equ 0FC2h ;# 
  1403  0000                     # 5727 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1404                           ADRES equ 0FC3h ;# 
  1405  0000                     # 5734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1406                           ADRESL equ 0FC3h ;# 
  1407  0000                     # 5741 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1408                           ADRESH equ 0FC4h ;# 
  1409  0000                     # 5748 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1410                           SSPCON equ 0FC6h ;# 
  1411  0000                     # 5753 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1412                           SSPCON1 equ 0FC6h ;# 
  1413  0000                     # 5886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1414                           SSPSTAT equ 0FC7h ;# 
  1415  0000                     # 6107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1416                           SSPADD equ 0FC8h ;# 
  1417  0000                     # 6114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1418                           SSPBUF equ 0FC9h ;# 
  1419  0000                     # 6121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1420                           T2CON equ 0FCAh ;# 
  1421  0000                     # 6219 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1422                           PR2 equ 0FCBh ;# 
  1423  0000                     # 6224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1424                           MEMCON equ 0FCBh ;# 
  1425  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1426                           TMR2 equ 0FCCh ;# 
  1427  0000                     # 6336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1428                           T1CON equ 0FCDh ;# 
  1429  0000                     # 6448 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1430                           TMR1 equ 0FCEh ;# 
  1431  0000                     # 6455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1432                           TMR1L equ 0FCEh ;# 
  1433  0000                     # 6462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1434                           TMR1H equ 0FCFh ;# 
  1435  0000                     # 6469 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1436                           RCON equ 0FD0h ;# 
  1437  0000                     # 6612 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1438                           WDTCON equ 0FD1h ;# 
  1439  0000                     # 6639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1440                           LVDCON equ 0FD2h ;# 
  1441  0000                     # 6704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1442                           OSCCON equ 0FD3h ;# 
  1443  0000                     # 6790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1444                           T0CON equ 0FD5h ;# 
  1445  0000                     # 6866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1446                           TMR0 equ 0FD6h ;# 
  1447  0000                     # 6873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1448                           TMR0L equ 0FD6h ;# 
  1449  0000                     # 6880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1450                           TMR0H equ 0FD7h ;# 
  1451  0000                     # 6887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1452                           STATUS equ 0FD8h ;# 
  1453  0000                     # 6958 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1454                           FSR2 equ 0FD9h ;# 
  1455  0000                     # 6965 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1456                           FSR2L equ 0FD9h ;# 
  1457  0000                     # 6972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1458                           FSR2H equ 0FDAh ;# 
  1459  0000                     # 6979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1460                           PLUSW2 equ 0FDBh ;# 
  1461  0000                     # 6986 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1462                           PREINC2 equ 0FDCh ;# 
  1463  0000                     # 6993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1464                           POSTDEC2 equ 0FDDh ;# 
  1465  0000                     # 7000 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1466                           POSTINC2 equ 0FDEh ;# 
  1467  0000                     # 7007 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1468                           INDF2 equ 0FDFh ;# 
  1469  0000                     # 7014 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1470                           BSR equ 0FE0h ;# 
  1471  0000                     # 7021 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1472                           FSR1 equ 0FE1h ;# 
  1473  0000                     # 7028 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1474                           FSR1L equ 0FE1h ;# 
  1475  0000                     # 7035 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1476                           FSR1H equ 0FE2h ;# 
  1477  0000                     # 7042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1478                           PLUSW1 equ 0FE3h ;# 
  1479  0000                     # 7049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1480                           PREINC1 equ 0FE4h ;# 
  1481  0000                     # 7056 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1482                           POSTDEC1 equ 0FE5h ;# 
  1483  0000                     # 7063 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1484                           POSTINC1 equ 0FE6h ;# 
  1485  0000                     # 7070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1486                           INDF1 equ 0FE7h ;# 
  1487  0000                     # 7077 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1488                           WREG equ 0FE8h ;# 
  1489  0000                     # 7084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1490                           FSR0 equ 0FE9h ;# 
  1491  0000                     # 7091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1492                           FSR0L equ 0FE9h ;# 
  1493  0000                     # 7098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1494                           FSR0H equ 0FEAh ;# 
  1495  0000                     # 7105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1496                           PLUSW0 equ 0FEBh ;# 
  1497  0000                     # 7112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1498                           PREINC0 equ 0FECh ;# 
  1499  0000                     # 7119 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1500                           POSTDEC0 equ 0FEDh ;# 
  1501  0000                     # 7126 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1502                           POSTINC0 equ 0FEEh ;# 
  1503  0000                     # 7133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1504                           INDF0 equ 0FEFh ;# 
  1505  0000                     # 7140 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1506                           INTCON3 equ 0FF0h ;# 
  1507  0000                     # 7232 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1508                           INTCON2 equ 0FF1h ;# 
  1509  0000                     # 7309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1510                           INTCON equ 0FF2h ;# 
  1511  0000                     # 7426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1512                           PROD equ 0FF3h ;# 
  1513  0000                     # 7433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1514                           PRODL equ 0FF3h ;# 
  1515  0000                     # 7440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1516                           PRODH equ 0FF4h ;# 
  1517  0000                     # 7447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1518                           TABLAT equ 0FF5h ;# 
  1519  0000                     # 7456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1520                           TBLPTR equ 0FF6h ;# 
  1521  0000                     # 7463 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1522                           TBLPTRL equ 0FF6h ;# 
  1523  0000                     # 7470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1524                           TBLPTRH equ 0FF7h ;# 
  1525  0000                     # 7477 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1526                           TBLPTRU equ 0FF8h ;# 
  1527  0000                     # 7486 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1528                           PCLAT equ 0FF9h ;# 
  1529  0000                     # 7493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1530                           PC equ 0FF9h ;# 
  1531  0000                     # 7500 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1532                           PCL equ 0FF9h ;# 
  1533  0000                     # 7507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1534                           PCLATH equ 0FFAh ;# 
  1535  0000                     # 7514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1536                           PCLATU equ 0FFBh ;# 
  1537  0000                     # 7521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1538                           STKPTR equ 0FFCh ;# 
  1539  0000                     # 7595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1540                           TOS equ 0FFDh ;# 
  1541  0000                     # 7602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1542                           TOSL equ 0FFDh ;# 
  1543  0000                     # 7609 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1544                           TOSH equ 0FFEh ;# 
  1545  0000                     # 7616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1546                           TOSU equ 0FFFh ;# 
  1547  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1548                           DFLTCON equ 0F60h ;# 
  1549  0000                     # 118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1550                           CAP3CON equ 0F61h ;# 
  1551  0000                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1552                           CAP2CON equ 0F62h ;# 
  1553  0000                     # 236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1554                           CAP1CON equ 0F63h ;# 
  1555  0000                     # 295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1556                           CAP3BUFL equ 0F64h ;# 
  1557  0000                     # 300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1558                           MAXCNTL equ 0F64h ;# 
  1559  0000                     # 307 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1560                           CAP3BUFH equ 0F65h ;# 
  1561  0000                     # 312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1562                           MAXCNTH equ 0F65h ;# 
  1563  0000                     # 319 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1564                           CAP2BUFL equ 0F66h ;# 
  1565  0000                     # 324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1566                           POSCNTL equ 0F66h ;# 
  1567  0000                     # 331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1568                           CAP2BUFH equ 0F67h ;# 
  1569  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1570                           POSCNTH equ 0F67h ;# 
  1571  0000                     # 343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1572                           CAP1BUFL equ 0F68h ;# 
  1573  0000                     # 348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1574                           VELRL equ 0F68h ;# 
  1575  0000                     # 355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1576                           CAP1BUFH equ 0F69h ;# 
  1577  0000                     # 360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1578                           VELRH equ 0F69h ;# 
  1579  0000                     # 367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1580                           OVDCONS equ 0F6Ah ;# 
  1581  0000                     # 437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1582                           OVDCOND equ 0F6Bh ;# 
  1583  0000                     # 507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1584                           FLTCONFIG equ 0F6Ch ;# 
  1585  0000                     # 569 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1586                           DTCON equ 0F6Dh ;# 
  1587  0000                     # 695 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1588                           PWMCON1 equ 0F6Eh ;# 
  1589  0000                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1590                           PWMCON0 equ 0F6Fh ;# 
  1591  0000                     # 831 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1592                           SEVTCMPH equ 0F70h ;# 
  1593  0000                     # 838 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1594                           SEVTCMPL equ 0F71h ;# 
  1595  0000                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1596                           PDC3H equ 0F72h ;# 
  1597  0000                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1598                           PDC3L equ 0F73h ;# 
  1599  0000                     # 859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1600                           PDC2H equ 0F74h ;# 
  1601  0000                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1602                           PDC2L equ 0F75h ;# 
  1603  0000                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1604                           PDC1H equ 0F76h ;# 
  1605  0000                     # 880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1606                           PDC1L equ 0F77h ;# 
  1607  0000                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1608                           PDC0H equ 0F78h ;# 
  1609  0000                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1610                           PDC0L equ 0F79h ;# 
  1611  0000                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1612                           PTPERH equ 0F7Ah ;# 
  1613  0000                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1614                           PTPERL equ 0F7Bh ;# 
  1615  0000                     # 915 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1616                           PTMRH equ 0F7Ch ;# 
  1617  0000                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1618                           PTMRL equ 0F7Dh ;# 
  1619  0000                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1620                           PTCON1 equ 0F7Eh ;# 
  1621  0000                     # 956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1622                           PTCON0 equ 0F7Fh ;# 
  1623  0000                     # 1038 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1624                           PORTA equ 0F80h ;# 
  1625  0000                     # 1199 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1626                           PORTB equ 0F81h ;# 
  1627  0000                     # 1270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1628                           PORTC equ 0F82h ;# 
  1629  0000                     # 1536 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1630                           PORTD equ 0F83h ;# 
  1631  0000                     # 1607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1632                           PORTE equ 0F84h ;# 
  1633  0000                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1634                           TMR5 equ 0F87h ;# 
  1635  0000                     # 1740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1636                           TMR5L equ 0F87h ;# 
  1637  0000                     # 1747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1638                           TMR5H equ 0F88h ;# 
  1639  0000                     # 1754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1640                           LATA equ 0F89h ;# 
  1641  0000                     # 1866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1642                           LATB equ 0F8Ah ;# 
  1643  0000                     # 1978 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1644                           LATC equ 0F8Bh ;# 
  1645  0000                     # 2090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1646                           LATD equ 0F8Ch ;# 
  1647  0000                     # 2202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1648                           LATE equ 0F8Dh ;# 
  1649  0000                     # 2254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1650                           PR5 equ 0F90h ;# 
  1651  0000                     # 2261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1652                           PR5L equ 0F90h ;# 
  1653  0000                     # 2268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1654                           PR5H equ 0F91h ;# 
  1655  0000                     # 2275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1656                           TRISA equ 0F92h ;# 
  1657  0000                     # 2280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1658                           DDRA equ 0F92h ;# 
  1659  0000                     # 2497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1660                           TRISB equ 0F93h ;# 
  1661  0000                     # 2502 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1662                           DDRB equ 0F93h ;# 
  1663  0000                     # 2719 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1664                           TRISC equ 0F94h ;# 
  1665  0000                     # 2724 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1666                           DDRC equ 0F94h ;# 
  1667  0000                     # 2941 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1668                           TRISD equ 0F95h ;# 
  1669  0000                     # 2946 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1670                           DDRD equ 0F95h ;# 
  1671  0000                     # 3163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1672                           TRISE equ 0F96h ;# 
  1673  0000                     # 3168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1674                           DDRE equ 0F96h ;# 
  1675  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1676                           ADCHS equ 0F99h ;# 
  1677  0000                     # 3403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1678                           ADCON3 equ 0F9Ah ;# 
  1679  0000                     # 3475 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1680                           OSCTUNE equ 0F9Bh ;# 
  1681  0000                     # 3533 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1682                           PIE1 equ 0F9Dh ;# 
  1683  0000                     # 3613 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1684                           PIR1 equ 0F9Eh ;# 
  1685  0000                     # 3693 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1686                           IPR1 equ 0F9Fh ;# 
  1687  0000                     # 3773 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1688                           PIE2 equ 0FA0h ;# 
  1689  0000                     # 3814 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1690                           PIR2 equ 0FA1h ;# 
  1691  0000                     # 3855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1692                           IPR2 equ 0FA2h ;# 
  1693  0000                     # 3896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1694                           PIE3 equ 0FA3h ;# 
  1695  0000                     # 3988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1696                           PIR3 equ 0FA4h ;# 
  1697  0000                     # 4048 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1698                           IPR3 equ 0FA5h ;# 
  1699  0000                     # 4108 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1700                           EECON1 equ 0FA6h ;# 
  1701  0000                     # 4174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1702                           EECON2 equ 0FA7h ;# 
  1703  0000                     # 4181 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1704                           EEDATA equ 0FA8h ;# 
  1705  0000                     # 4188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1706                           EEADR equ 0FA9h ;# 
  1707  0000                     # 4195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1708                           BAUDCON equ 0FAAh ;# 
  1709  0000                     # 4200 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1710                           BAUDCTL equ 0FAAh ;# 
  1711  0000                     # 4375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1712                           RCSTA equ 0FABh ;# 
  1713  0000                     # 4380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1714                           RCSTA1 equ 0FABh ;# 
  1715  0000                     # 4585 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1716                           TXSTA equ 0FACh ;# 
  1717  0000                     # 4590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1718                           TXSTA1 equ 0FACh ;# 
  1719  0000                     # 4841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1720                           TXREG equ 0FADh ;# 
  1721  0000                     # 4846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1722                           TXREG1 equ 0FADh ;# 
  1723  0000                     # 4853 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1724                           RCREG equ 0FAEh ;# 
  1725  0000                     # 4858 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1726                           RCREG1 equ 0FAEh ;# 
  1727  0000                     # 4865 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1728                           SPBRG equ 0FAFh ;# 
  1729  0000                     # 4870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1730                           SPBRG1 equ 0FAFh ;# 
  1731  0000                     # 4877 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1732                           SPBRGH equ 0FB0h ;# 
  1733  0000                     # 4884 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1734                           QEICON equ 0FB6h ;# 
  1735  0000                     # 5036 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1736                           T5CON equ 0FB7h ;# 
  1737  0000                     # 5154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1738                           ANSEL0 equ 0FB8h ;# 
  1739  0000                     # 5216 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1740                           ANSEL1 equ 0FB9h ;# 
  1741  0000                     # 5236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1742                           CCP2CON equ 0FBAh ;# 
  1743  0000                     # 5315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1744                           CCPR2 equ 0FBBh ;# 
  1745  0000                     # 5322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1746                           CCPR2L equ 0FBBh ;# 
  1747  0000                     # 5329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1748                           CCPR2H equ 0FBCh ;# 
  1749  0000                     # 5336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1750                           CCP1CON equ 0FBDh ;# 
  1751  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1752                           CCPR1 equ 0FBEh ;# 
  1753  0000                     # 5422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1754                           CCPR1L equ 0FBEh ;# 
  1755  0000                     # 5429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1756                           CCPR1H equ 0FBFh ;# 
  1757  0000                     # 5436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1758                           ADCON2 equ 0FC0h ;# 
  1759  0000                     # 5512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1760                           ADCON1 equ 0FC1h ;# 
  1761  0000                     # 5608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1762                           ADCON0 equ 0FC2h ;# 
  1763  0000                     # 5727 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1764                           ADRES equ 0FC3h ;# 
  1765  0000                     # 5734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1766                           ADRESL equ 0FC3h ;# 
  1767  0000                     # 5741 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1768                           ADRESH equ 0FC4h ;# 
  1769  0000                     # 5748 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1770                           SSPCON equ 0FC6h ;# 
  1771  0000                     # 5753 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1772                           SSPCON1 equ 0FC6h ;# 
  1773  0000                     # 5886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1774                           SSPSTAT equ 0FC7h ;# 
  1775  0000                     # 6107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1776                           SSPADD equ 0FC8h ;# 
  1777  0000                     # 6114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1778                           SSPBUF equ 0FC9h ;# 
  1779  0000                     # 6121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1780                           T2CON equ 0FCAh ;# 
  1781  0000                     # 6219 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1782                           PR2 equ 0FCBh ;# 
  1783  0000                     # 6224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1784                           MEMCON equ 0FCBh ;# 
  1785  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1786                           TMR2 equ 0FCCh ;# 
  1787  0000                     # 6336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1788                           T1CON equ 0FCDh ;# 
  1789  0000                     # 6448 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1790                           TMR1 equ 0FCEh ;# 
  1791  0000                     # 6455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1792                           TMR1L equ 0FCEh ;# 
  1793  0000                     # 6462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1794                           TMR1H equ 0FCFh ;# 
  1795  0000                     # 6469 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1796                           RCON equ 0FD0h ;# 
  1797  0000                     # 6612 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1798                           WDTCON equ 0FD1h ;# 
  1799  0000                     # 6639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1800                           LVDCON equ 0FD2h ;# 
  1801  0000                     # 6704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1802                           OSCCON equ 0FD3h ;# 
  1803  0000                     # 6790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1804                           T0CON equ 0FD5h ;# 
  1805  0000                     # 6866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1806                           TMR0 equ 0FD6h ;# 
  1807  0000                     # 6873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1808                           TMR0L equ 0FD6h ;# 
  1809  0000                     # 6880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1810                           TMR0H equ 0FD7h ;# 
  1811  0000                     # 6887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1812                           STATUS equ 0FD8h ;# 
  1813  0000                     # 6958 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1814                           FSR2 equ 0FD9h ;# 
  1815  0000                     # 6965 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1816                           FSR2L equ 0FD9h ;# 
  1817  0000                     # 6972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1818                           FSR2H equ 0FDAh ;# 
  1819  0000                     # 6979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1820                           PLUSW2 equ 0FDBh ;# 
  1821  0000                     # 6986 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1822                           PREINC2 equ 0FDCh ;# 
  1823  0000                     # 6993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1824                           POSTDEC2 equ 0FDDh ;# 
  1825  0000                     # 7000 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1826                           POSTINC2 equ 0FDEh ;# 
  1827  0000                     # 7007 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1828                           INDF2 equ 0FDFh ;# 
  1829  0000                     # 7014 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1830                           BSR equ 0FE0h ;# 
  1831  0000                     # 7021 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1832                           FSR1 equ 0FE1h ;# 
  1833  0000                     # 7028 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1834                           FSR1L equ 0FE1h ;# 
  1835  0000                     # 7035 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1836                           FSR1H equ 0FE2h ;# 
  1837  0000                     # 7042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1838                           PLUSW1 equ 0FE3h ;# 
  1839  0000                     # 7049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1840                           PREINC1 equ 0FE4h ;# 
  1841  0000                     # 7056 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1842                           POSTDEC1 equ 0FE5h ;# 
  1843  0000                     # 7063 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1844                           POSTINC1 equ 0FE6h ;# 
  1845  0000                     # 7070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1846                           INDF1 equ 0FE7h ;# 
  1847  0000                     # 7077 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1848                           WREG equ 0FE8h ;# 
  1849  0000                     # 7084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1850                           FSR0 equ 0FE9h ;# 
  1851  0000                     # 7091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1852                           FSR0L equ 0FE9h ;# 
  1853  0000                     # 7098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1854                           FSR0H equ 0FEAh ;# 
  1855  0000                     # 7105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1856                           PLUSW0 equ 0FEBh ;# 
  1857  0000                     # 7112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1858                           PREINC0 equ 0FECh ;# 
  1859  0000                     # 7119 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1860                           POSTDEC0 equ 0FEDh ;# 
  1861  0000                     # 7126 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1862                           POSTINC0 equ 0FEEh ;# 
  1863  0000                     # 7133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1864                           INDF0 equ 0FEFh ;# 
  1865  0000                     # 7140 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1866                           INTCON3 equ 0FF0h ;# 
  1867  0000                     # 7232 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1868                           INTCON2 equ 0FF1h ;# 
  1869  0000                     # 7309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1870                           INTCON equ 0FF2h ;# 
  1871  0000                     # 7426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1872                           PROD equ 0FF3h ;# 
  1873  0000                     # 7433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1874                           PRODL equ 0FF3h ;# 
  1875  0000                     # 7440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1876                           PRODH equ 0FF4h ;# 
  1877  0000                     # 7447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1878                           TABLAT equ 0FF5h ;# 
  1879  0000                     # 7456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1880                           TBLPTR equ 0FF6h ;# 
  1881  0000                     # 7463 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1882                           TBLPTRL equ 0FF6h ;# 
  1883  0000                     # 7470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1884                           TBLPTRH equ 0FF7h ;# 
  1885  0000                     # 7477 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1886                           TBLPTRU equ 0FF8h ;# 
  1887  0000                     # 7486 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1888                           PCLAT equ 0FF9h ;# 
  1889  0000                     # 7493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1890                           PC equ 0FF9h ;# 
  1891  0000                     # 7500 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1892                           PCL equ 0FF9h ;# 
  1893  0000                     # 7507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1894                           PCLATH equ 0FFAh ;# 
  1895  0000                     # 7514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1896                           PCLATU equ 0FFBh ;# 
  1897  0000                     # 7521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1898                           STKPTR equ 0FFCh ;# 
  1899  0000                     # 7595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1900                           TOS equ 0FFDh ;# 
  1901  0000                     # 7602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1902                           TOSL equ 0FFDh ;# 
  1903  0000                     # 7609 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1904                           TOSH equ 0FFEh ;# 
  1905  0000                     # 7616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1906                           TOSU equ 0FFFh ;# 
  1907  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1908                           DFLTCON equ 0F60h ;# 
  1909  0000                     # 118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1910                           CAP3CON equ 0F61h ;# 
  1911  0000                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1912                           CAP2CON equ 0F62h ;# 
  1913  0000                     # 236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1914                           CAP1CON equ 0F63h ;# 
  1915  0000                     # 295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1916                           CAP3BUFL equ 0F64h ;# 
  1917  0000                     # 300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1918                           MAXCNTL equ 0F64h ;# 
  1919  0000                     # 307 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1920                           CAP3BUFH equ 0F65h ;# 
  1921  0000                     # 312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1922                           MAXCNTH equ 0F65h ;# 
  1923  0000                     # 319 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1924                           CAP2BUFL equ 0F66h ;# 
  1925  0000                     # 324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1926                           POSCNTL equ 0F66h ;# 
  1927  0000                     # 331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1928                           CAP2BUFH equ 0F67h ;# 
  1929  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1930                           POSCNTH equ 0F67h ;# 
  1931  0000                     # 343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1932                           CAP1BUFL equ 0F68h ;# 
  1933  0000                     # 348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1934                           VELRL equ 0F68h ;# 
  1935  0000                     # 355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1936                           CAP1BUFH equ 0F69h ;# 
  1937  0000                     # 360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1938                           VELRH equ 0F69h ;# 
  1939  0000                     # 367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1940                           OVDCONS equ 0F6Ah ;# 
  1941  0000                     # 437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1942                           OVDCOND equ 0F6Bh ;# 
  1943  0000                     # 507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1944                           FLTCONFIG equ 0F6Ch ;# 
  1945  0000                     # 569 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1946                           DTCON equ 0F6Dh ;# 
  1947  0000                     # 695 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1948                           PWMCON1 equ 0F6Eh ;# 
  1949  0000                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1950                           PWMCON0 equ 0F6Fh ;# 
  1951  0000                     # 831 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1952                           SEVTCMPH equ 0F70h ;# 
  1953  0000                     # 838 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1954                           SEVTCMPL equ 0F71h ;# 
  1955  0000                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1956                           PDC3H equ 0F72h ;# 
  1957  0000                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1958                           PDC3L equ 0F73h ;# 
  1959  0000                     # 859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1960                           PDC2H equ 0F74h ;# 
  1961  0000                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1962                           PDC2L equ 0F75h ;# 
  1963  0000                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1964                           PDC1H equ 0F76h ;# 
  1965  0000                     # 880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1966                           PDC1L equ 0F77h ;# 
  1967  0000                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1968                           PDC0H equ 0F78h ;# 
  1969  0000                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1970                           PDC0L equ 0F79h ;# 
  1971  0000                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1972                           PTPERH equ 0F7Ah ;# 
  1973  0000                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1974                           PTPERL equ 0F7Bh ;# 
  1975  0000                     # 915 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1976                           PTMRH equ 0F7Ch ;# 
  1977  0000                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1978                           PTMRL equ 0F7Dh ;# 
  1979  0000                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1980                           PTCON1 equ 0F7Eh ;# 
  1981  0000                     # 956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1982                           PTCON0 equ 0F7Fh ;# 
  1983  0000                     # 1038 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1984                           PORTA equ 0F80h ;# 
  1985  0000                     # 1199 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1986                           PORTB equ 0F81h ;# 
  1987  0000                     # 1270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1988                           PORTC equ 0F82h ;# 
  1989  0000                     # 1536 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1990                           PORTD equ 0F83h ;# 
  1991  0000                     # 1607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1992                           PORTE equ 0F84h ;# 
  1993  0000                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1994                           TMR5 equ 0F87h ;# 
  1995  0000                     # 1740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1996                           TMR5L equ 0F87h ;# 
  1997  0000                     # 1747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1998                           TMR5H equ 0F88h ;# 
  1999  0000                     # 1754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2000                           LATA equ 0F89h ;# 
  2001  0000                     # 1866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2002                           LATB equ 0F8Ah ;# 
  2003  0000                     # 1978 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2004                           LATC equ 0F8Bh ;# 
  2005  0000                     # 2090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2006                           LATD equ 0F8Ch ;# 
  2007  0000                     # 2202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2008                           LATE equ 0F8Dh ;# 
  2009  0000                     # 2254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2010                           PR5 equ 0F90h ;# 
  2011  0000                     # 2261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2012                           PR5L equ 0F90h ;# 
  2013  0000                     # 2268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2014                           PR5H equ 0F91h ;# 
  2015  0000                     # 2275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2016                           TRISA equ 0F92h ;# 
  2017  0000                     # 2280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2018                           DDRA equ 0F92h ;# 
  2019  0000                     # 2497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2020                           TRISB equ 0F93h ;# 
  2021  0000                     # 2502 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2022                           DDRB equ 0F93h ;# 
  2023  0000                     # 2719 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2024                           TRISC equ 0F94h ;# 
  2025  0000                     # 2724 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2026                           DDRC equ 0F94h ;# 
  2027  0000                     # 2941 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2028                           TRISD equ 0F95h ;# 
  2029  0000                     # 2946 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2030                           DDRD equ 0F95h ;# 
  2031  0000                     # 3163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2032                           TRISE equ 0F96h ;# 
  2033  0000                     # 3168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2034                           DDRE equ 0F96h ;# 
  2035  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2036                           ADCHS equ 0F99h ;# 
  2037  0000                     # 3403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2038                           ADCON3 equ 0F9Ah ;# 
  2039  0000                     # 3475 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2040                           OSCTUNE equ 0F9Bh ;# 
  2041  0000                     # 3533 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2042                           PIE1 equ 0F9Dh ;# 
  2043  0000                     # 3613 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2044                           PIR1 equ 0F9Eh ;# 
  2045  0000                     # 3693 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2046                           IPR1 equ 0F9Fh ;# 
  2047  0000                     # 3773 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2048                           PIE2 equ 0FA0h ;# 
  2049  0000                     # 3814 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2050                           PIR2 equ 0FA1h ;# 
  2051  0000                     # 3855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2052                           IPR2 equ 0FA2h ;# 
  2053  0000                     # 3896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2054                           PIE3 equ 0FA3h ;# 
  2055  0000                     # 3988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2056                           PIR3 equ 0FA4h ;# 
  2057  0000                     # 4048 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2058                           IPR3 equ 0FA5h ;# 
  2059  0000                     # 4108 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2060                           EECON1 equ 0FA6h ;# 
  2061  0000                     # 4174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2062                           EECON2 equ 0FA7h ;# 
  2063  0000                     # 4181 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2064                           EEDATA equ 0FA8h ;# 
  2065  0000                     # 4188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2066                           EEADR equ 0FA9h ;# 
  2067  0000                     # 4195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2068                           BAUDCON equ 0FAAh ;# 
  2069  0000                     # 4200 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2070                           BAUDCTL equ 0FAAh ;# 
  2071  0000                     # 4375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2072                           RCSTA equ 0FABh ;# 
  2073  0000                     # 4380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2074                           RCSTA1 equ 0FABh ;# 
  2075  0000                     # 4585 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2076                           TXSTA equ 0FACh ;# 
  2077  0000                     # 4590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2078                           TXSTA1 equ 0FACh ;# 
  2079  0000                     # 4841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2080                           TXREG equ 0FADh ;# 
  2081  0000                     # 4846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2082                           TXREG1 equ 0FADh ;# 
  2083  0000                     # 4853 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2084                           RCREG equ 0FAEh ;# 
  2085  0000                     # 4858 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2086                           RCREG1 equ 0FAEh ;# 
  2087  0000                     # 4865 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2088                           SPBRG equ 0FAFh ;# 
  2089  0000                     # 4870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2090                           SPBRG1 equ 0FAFh ;# 
  2091  0000                     # 4877 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2092                           SPBRGH equ 0FB0h ;# 
  2093  0000                     # 4884 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2094                           QEICON equ 0FB6h ;# 
  2095  0000                     # 5036 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2096                           T5CON equ 0FB7h ;# 
  2097  0000                     # 5154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2098                           ANSEL0 equ 0FB8h ;# 
  2099  0000                     # 5216 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2100                           ANSEL1 equ 0FB9h ;# 
  2101  0000                     # 5236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2102                           CCP2CON equ 0FBAh ;# 
  2103  0000                     # 5315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2104                           CCPR2 equ 0FBBh ;# 
  2105  0000                     # 5322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2106                           CCPR2L equ 0FBBh ;# 
  2107  0000                     # 5329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2108                           CCPR2H equ 0FBCh ;# 
  2109  0000                     # 5336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2110                           CCP1CON equ 0FBDh ;# 
  2111  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2112                           CCPR1 equ 0FBEh ;# 
  2113  0000                     # 5422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2114                           CCPR1L equ 0FBEh ;# 
  2115  0000                     # 5429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2116                           CCPR1H equ 0FBFh ;# 
  2117  0000                     # 5436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2118                           ADCON2 equ 0FC0h ;# 
  2119  0000                     # 5512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2120                           ADCON1 equ 0FC1h ;# 
  2121  0000                     # 5608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2122                           ADCON0 equ 0FC2h ;# 
  2123  0000                     # 5727 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2124                           ADRES equ 0FC3h ;# 
  2125  0000                     # 5734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2126                           ADRESL equ 0FC3h ;# 
  2127  0000                     # 5741 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2128                           ADRESH equ 0FC4h ;# 
  2129  0000                     # 5748 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2130                           SSPCON equ 0FC6h ;# 
  2131  0000                     # 5753 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2132                           SSPCON1 equ 0FC6h ;# 
  2133  0000                     # 5886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2134                           SSPSTAT equ 0FC7h ;# 
  2135  0000                     # 6107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2136                           SSPADD equ 0FC8h ;# 
  2137  0000                     # 6114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2138                           SSPBUF equ 0FC9h ;# 
  2139  0000                     # 6121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2140                           T2CON equ 0FCAh ;# 
  2141  0000                     # 6219 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2142                           PR2 equ 0FCBh ;# 
  2143  0000                     # 6224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2144                           MEMCON equ 0FCBh ;# 
  2145  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2146                           TMR2 equ 0FCCh ;# 
  2147  0000                     # 6336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2148                           T1CON equ 0FCDh ;# 
  2149  0000                     # 6448 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2150                           TMR1 equ 0FCEh ;# 
  2151  0000                     # 6455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2152                           TMR1L equ 0FCEh ;# 
  2153  0000                     # 6462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2154                           TMR1H equ 0FCFh ;# 
  2155  0000                     # 6469 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2156                           RCON equ 0FD0h ;# 
  2157  0000                     # 6612 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2158                           WDTCON equ 0FD1h ;# 
  2159  0000                     # 6639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2160                           LVDCON equ 0FD2h ;# 
  2161  0000                     # 6704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2162                           OSCCON equ 0FD3h ;# 
  2163  0000                     # 6790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2164                           T0CON equ 0FD5h ;# 
  2165  0000                     # 6866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2166                           TMR0 equ 0FD6h ;# 
  2167  0000                     # 6873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2168                           TMR0L equ 0FD6h ;# 
  2169  0000                     # 6880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2170                           TMR0H equ 0FD7h ;# 
  2171  0000                     # 6887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2172                           STATUS equ 0FD8h ;# 
  2173  0000                     # 6958 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2174                           FSR2 equ 0FD9h ;# 
  2175  0000                     # 6965 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2176                           FSR2L equ 0FD9h ;# 
  2177  0000                     # 6972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2178                           FSR2H equ 0FDAh ;# 
  2179  0000                     # 6979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2180                           PLUSW2 equ 0FDBh ;# 
  2181  0000                     # 6986 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2182                           PREINC2 equ 0FDCh ;# 
  2183  0000                     # 6993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2184                           POSTDEC2 equ 0FDDh ;# 
  2185  0000                     # 7000 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2186                           POSTINC2 equ 0FDEh ;# 
  2187  0000                     # 7007 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2188                           INDF2 equ 0FDFh ;# 
  2189  0000                     # 7014 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2190                           BSR equ 0FE0h ;# 
  2191  0000                     # 7021 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2192                           FSR1 equ 0FE1h ;# 
  2193  0000                     # 7028 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2194                           FSR1L equ 0FE1h ;# 
  2195  0000                     # 7035 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2196                           FSR1H equ 0FE2h ;# 
  2197  0000                     # 7042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2198                           PLUSW1 equ 0FE3h ;# 
  2199  0000                     # 7049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2200                           PREINC1 equ 0FE4h ;# 
  2201  0000                     # 7056 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2202                           POSTDEC1 equ 0FE5h ;# 
  2203  0000                     # 7063 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2204                           POSTINC1 equ 0FE6h ;# 
  2205  0000                     # 7070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2206                           INDF1 equ 0FE7h ;# 
  2207  0000                     # 7077 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2208                           WREG equ 0FE8h ;# 
  2209  0000                     # 7084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2210                           FSR0 equ 0FE9h ;# 
  2211  0000                     # 7091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2212                           FSR0L equ 0FE9h ;# 
  2213  0000                     # 7098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2214                           FSR0H equ 0FEAh ;# 
  2215  0000                     # 7105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2216                           PLUSW0 equ 0FEBh ;# 
  2217  0000                     # 7112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2218                           PREINC0 equ 0FECh ;# 
  2219  0000                     # 7119 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2220                           POSTDEC0 equ 0FEDh ;# 
  2221  0000                     # 7126 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2222                           POSTINC0 equ 0FEEh ;# 
  2223  0000                     # 7133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2224                           INDF0 equ 0FEFh ;# 
  2225  0000                     # 7140 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2226                           INTCON3 equ 0FF0h ;# 
  2227  0000                     # 7232 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2228                           INTCON2 equ 0FF1h ;# 
  2229  0000                     # 7309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2230                           INTCON equ 0FF2h ;# 
  2231  0000                     # 7426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2232                           PROD equ 0FF3h ;# 
  2233  0000                     # 7433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2234                           PRODL equ 0FF3h ;# 
  2235  0000                     # 7440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2236                           PRODH equ 0FF4h ;# 
  2237  0000                     # 7447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2238                           TABLAT equ 0FF5h ;# 
  2239  0000                     # 7456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2240                           TBLPTR equ 0FF6h ;# 
  2241  0000                     # 7463 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2242                           TBLPTRL equ 0FF6h ;# 
  2243  0000                     # 7470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2244                           TBLPTRH equ 0FF7h ;# 
  2245  0000                     # 7477 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2246                           TBLPTRU equ 0FF8h ;# 
  2247  0000                     # 7486 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2248                           PCLAT equ 0FF9h ;# 
  2249  0000                     # 7493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2250                           PC equ 0FF9h ;# 
  2251  0000                     # 7500 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2252                           PCL equ 0FF9h ;# 
  2253  0000                     # 7507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2254                           PCLATH equ 0FFAh ;# 
  2255  0000                     # 7514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2256                           PCLATU equ 0FFBh ;# 
  2257  0000                     # 7521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2258                           STKPTR equ 0FFCh ;# 
  2259  0000                     # 7595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2260                           TOS equ 0FFDh ;# 
  2261  0000                     # 7602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2262                           TOSL equ 0FFDh ;# 
  2263  0000                     # 7609 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2264                           TOSH equ 0FFEh ;# 
  2265  0000                     # 7616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2266                           TOSU equ 0FFFh ;# 
  2267  0000                     	FNCALL	_main,_findStrengths
  2268                           	FNCALL	_main,_initEusart
  2269                           	FNCALL	_main,_initIR
  2270                           	FNCALL	_main,_initLCD
  2271                           	FNCALL	_main,_initPWM
  2272                           	FNCALL	_main,_move
  2273                           	FNCALL	_main,_setMotorPWM
  2274                           	FNCALL	_main,_stop
  2275                           	FNCALL	_move,_setMotorsFullSpeed
  2276                           	FNCALL	_move,_stop
  2277                           	FNCALL	_stop,_setMotorPWM
  2278                           	FNCALL	_setMotorsFullSpeed,_setMotorPWM
  2279                           	FNCALL	_setMotorPWM,___wmul
  2280                           	FNCALL	_initLCD,_LCDout
  2281                           	FNCALL	_initLCD,_SendLCD
  2282                           	FNCALL	_SendLCD,_LCDout
  2283                           	FNCALL	_LCDout,_E_TOG
  2284                           	FNROOT	_main
  2285                           	FNCALL	_my_lp_isr,_sendRFID
  2286                           	FNCALL	_sendRFID,_LCD_String
  2287                           	FNCALL	_sendRFID,_SetLine
  2288                           	FNCALL	_sendRFID,_getCharSerial
  2289                           	FNCALL	_sendRFID,i1_SendLCD
  2290                           	FNCALL	_SetLine,i1_SendLCD
  2291                           	FNCALL	_LCD_String,i1_SendLCD
  2292                           	FNCALL	i1_SendLCD,i1_LCDout
  2293                           	FNCALL	i1_LCDout,i1_E_TOG
  2294                           	FNCALL	intlevel1,_my_lp_isr
  2295                           	global	intlevel1
  2296                           	FNROOT	intlevel1
  2297                           	FNCALL	intlevel2,_my_hp_isr
  2298                           	global	intlevel2
  2299                           	FNROOT	intlevel2
  2300                           	global	_index
  2301                           	global	_reset
  2302                           psect	idataCOMRAM,class=CODE,space=0,delta=1,noexec
  2303                           global __pidataCOMRAM
  2304                           __pidataCOMRAM:
  2305  000FDC                     	file	"RFID.c"
  2306                           	line	13
  2307                           
  2308                           ;initializer for _index
  2309                           	db	low(01h)
  2310  000FDC  01                 psect	idataBANK1,class=CODE,space=0,delta=1,noexec
  2311                           global __pidataBANK1
  2312                           __pidataBANK1:
  2313  000FDD                     	file	"main.c"
  2314                           	line	40
  2315                           
  2316                           ;initializer for _reset
  2317                           	db	low(01h)
  2318  000FDD  01                 	global	_a
  2319                           	global	_checkSum
  2320                           	global	_currentVal
  2321                           	global	_debouncer
  2322                           	global	_IRsource
  2323                           	global	_RFIDread
  2324                           	global	_robotOn
  2325                           	global	_motorR
  2326                           	global	_motorL
  2327                           	global	_CAP3BUFH
  2328                           _CAP3BUFH	set	0xF65
  2329  0000                     	global	_CAP3BUFL
  2330                           _CAP3BUFL	set	0xF64
  2331  0000                     	global	_CAP2BUFH
  2332                           _CAP2BUFH	set	0xF67
  2333  0000                     	global	_CAP2BUFL
  2334                           _CAP2BUFL	set	0xF66
  2335  0000                     	global	_T5CON
  2336                           _T5CON	set	0xFB7
  2337  0000                     	global	_CAP3CON
  2338                           _CAP3CON	set	0xF61
  2339  0000                     	global	_CAP2CON
  2340                           _CAP2CON	set	0xF62
  2341  0000                     	global	_ANSEL1
  2342                           _ANSEL1	set	0xFB9
  2343  0000                     	global	_ANSEL0
  2344                           _ANSEL0	set	0xFB8
  2345  0000                     	global	_TRISAbits
  2346                           _TRISAbits	set	0xF92
  2347  0000                     	global	_LATAbits
  2348                           _LATAbits	set	0xF89
  2349  0000                     	global	_LATD
  2350                           _LATD	set	0xF8C
  2351  0000                     	global	_LATC
  2352                           _LATC	set	0xF8B
  2353  0000                     	global	_LATB
  2354                           _LATB	set	0xF8A
  2355  0000                     	global	_PDC3H
  2356                           _PDC3H	set	0xF72
  2357  0000                     	global	_PDC3L
  2358                           _PDC3L	set	0xF73
  2359  0000                     	global	_PDC2H
  2360                           _PDC2H	set	0xF74
  2361  0000                     	global	_PDC2L
  2362                           _PDC2L	set	0xF75
  2363  0000                     	global	_PTPERH
  2364                           _PTPERH	set	0xF7A
  2365  0000                     	global	_PTPERL
  2366                           _PTPERL	set	0xF7B
  2367  0000                     	global	_PWMCON1
  2368                           _PWMCON1	set	0xF6E
  2369  0000                     	global	_PWMCON0
  2370                           _PWMCON0	set	0xF6F
  2371  0000                     	global	_PTCON1
  2372                           _PTCON1	set	0xF7E
  2373  0000                     	global	_PTCON0
  2374                           _PTCON0	set	0xF7F
  2375  0000                     	global	_TRISBbits
  2376                           _TRISBbits	set	0xF93
  2377  0000                     	global	_LATBbits
  2378                           _LATBbits	set	0xF8A
  2379  0000                     	global	_TXREG
  2380                           _TXREG	set	0xFAD
  2381  0000                     	global	_RCREG
  2382                           _RCREG	set	0xFAE
  2383  0000                     	global	_PIR1bits
  2384                           _PIR1bits	set	0xF9E
  2385  0000                     	global	_RCSTAbits
  2386                           _RCSTAbits	set	0xFAB
  2387  0000                     	global	_TXSTAbits
  2388                           _TXSTAbits	set	0xFAC
  2389  0000                     	global	_BAUDCONbits
  2390                           _BAUDCONbits	set	0xFAA
  2391  0000                     	global	_SPBRGH
  2392                           _SPBRGH	set	0xFB0
  2393  0000                     	global	_SPBRG
  2394                           _SPBRG	set	0xFAF
  2395  0000                     	global	_INTCON2bits
  2396                           _INTCON2bits	set	0xFF1
  2397  0000                     	global	_INTCON3bits
  2398                           _INTCON3bits	set	0xFF0
  2399  0000                     	global	_RCONbits
  2400                           _RCONbits	set	0xFD0
  2401  0000                     	global	_INTCONbits
  2402                           _INTCONbits	set	0xFF2
  2403  0000                     	global	_PIR1
  2404                           _PIR1	set	0xF9E
  2405  0000                     	global	_TRISDbits
  2406                           _TRISDbits	set	0xF95
  2407  0000                     	global	_LATDbits
  2408                           _LATDbits	set	0xF8C
  2409  0000                     	global	_TRISCbits
  2410                           _TRISCbits	set	0xF94
  2411  0000                     	global	_LATCbits
  2412                           _LATCbits	set	0xF8B
  2413  0000                     	global	_OSCCONbits
  2414                           _OSCCONbits	set	0xFD3
  2415  0000                     	global	_OSCCON
  2416                           _OSCCON	set	0xFD3
  2417  0000                     	global	_PDC1H
  2418                           _PDC1H	set	0xF76
  2419  0000                     	global	_PDC1L
  2420                           _PDC1L	set	0xF77
  2421  0000                     	global	_PDC0H
  2422                           _PDC0H	set	0xF78
  2423  0000                     	global	_PDC0L
  2424                           _PDC0L	set	0xF79
  2425  0000                     psect	smallconst,class=SMALLCONST,space=0,reloc=2,noexec
  2426                           global __psmallconst
  2427                           __psmallconst:
  2428  000300                     	db	0
  2429  000300  00                 	
  2430                           STR_2:
  2431  000301                     	db	78	;'N'
  2432  000301  4E                 	db	111	;'o'
  2433  000302  6F                 	db	32
  2434  000303  20                 	db	77	;'M'
  2435  000304  4D                 	db	97	;'a'
  2436  000305  61                 	db	116	;'t'
  2437  000306  74                 	db	99	;'c'
  2438  000307  63                 	db	104	;'h'
  2439  000308  68                 	db	0
  2440  000309  00                 STR_1	equ	STR_2+3
  2441  0000                     ; #config settings
  2442                           global __CFG_OSC$IRCIO
  2443                           __CFG_OSC$IRCIO equ 0x0
  2444  0000                     global __CFG_WDTEN$OFF
  2445                           __CFG_WDTEN$OFF equ 0x0
  2446  0000                     global __CFG_MCLRE$OFF
  2447                           __CFG_MCLRE$OFF equ 0x0
  2448  0000                     global __CFG_LVP$OFF
  2449                           __CFG_LVP$OFF equ 0x0
  2450  0000                     	file	"C:\Users\mfb4217\AppData\Local\Temp\s1is."
  2451                           	line	#
  2452                           psect	cinit,class=CODE,delta=1,reloc=2
  2453                           global __pcinit
  2454                           __pcinit:
  2455  000DC6                     global start_initialization
  2456                           start_initialization:
  2457  000DC6                     
  2458                           global __initialization
  2459                           __initialization:
  2460  000DC6                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
  2461                           global __pbssCOMRAM
  2462                           __pbssCOMRAM:
  2463  00002E                     	global	_a
  2464                           _a:
  2465  00002E                            ds      1
  2466  00002E                     	global	_checkSum
  2467                           _checkSum:
  2468  00002F                            ds      1
  2469  00002F                     	global	_currentVal
  2470                           _currentVal:
  2471  000030                            ds      1
  2472  000030                     	global	_debouncer
  2473                           _debouncer:
  2474  000031                            ds      1
  2475  000031                     psect	dataCOMRAM,class=COMRAM,space=1,noexec
  2476                           global __pdataCOMRAM
  2477                           __pdataCOMRAM:
  2478  000032                     	file	"RFID.c"
  2479                           	line	13
  2480                           	global	_index
  2481                           _index:
  2482  000032                            ds      1
  2483  000032                     psect	bssBANK1,class=BANK1,space=1,noexec,lowdata
  2484                           global __pbssBANK1
  2485                           __pbssBANK1:
  2486  0001CE                     	global	_IRsource
  2487                           _IRsource:
  2488  0001CE                            ds      1
  2489  0001CE                     	global	_RFIDread
  2490                           _RFIDread:
  2491  0001CF                            ds      1
  2492  0001CF                     	global	_robotOn
  2493                           _robotOn:
  2494  0001D0                            ds      1
  2495  0001D0                     	global	_motorR
  2496                           _motorR:
  2497  0001D1                            ds      9
  2498  0001D1                     	global	_motorL
  2499                           _motorL:
  2500  0001DA                            ds      9
  2501  0001DA                     psect	dataBANK1,class=BANK1,space=1,noexec,lowdata
  2502                           global __pdataBANK1
  2503                           __pdataBANK1:
  2504  0001E3                     	file	"main.c"
  2505                           	line	40
  2506                           	global	_reset
  2507                           _reset:
  2508  0001E3                            ds      1
  2509  0001E3                     	file	"C:\Users\mfb4217\AppData\Local\Temp\s1is."
  2510                           	line	#
  2511                           psect	cinit
  2512                           ; Initialize objects allocated to BANK1 (1 bytes)
  2513                           	global __pidataBANK1
  2514                           	; load TBLPTR registers with __pidataBANK1
  2515                           	movlw	low (__pidataBANK1)
  2516  000DC6  0EDD               	movwf	tblptrl
  2517  000DC8  6EF6               	movlw	high(__pidataBANK1)
  2518  000DCA  0E0F               	movwf	tblptrh
  2519  000DCC  6EF7               	movlw	low highword(__pidataBANK1)
  2520  000DCE  0E00               	movwf	tblptru
  2521  000DD0  6EF8               	tblrd*+ ;fetch initializer
  2522  000DD2  0009               	movff	tablat, __pdataBANK1+0		
  2523  000DD4  CFF5 F1E3          ; Initialize objects allocated to COMRAM (1 bytes)
  2524                           	global __pidataCOMRAM
  2525                           	; load TBLPTR registers with __pidataCOMRAM
  2526                           	movlw	low (__pidataCOMRAM)
  2527  000DD8  0EDC               	movwf	tblptrl
  2528  000DDA  6EF6               	movlw	high(__pidataCOMRAM)
  2529  000DDC  0E0F               	movwf	tblptrh
  2530  000DDE  6EF7               	movlw	low highword(__pidataCOMRAM)
  2531  000DE0  0E00               	movwf	tblptru
  2532  000DE2  6EF8               	tblrd*+ ;fetch initializer
  2533  000DE4  0009               	movff	tablat, __pdataCOMRAM+0		
  2534  000DE6  CFF5 F032          	line	#
  2535                           ; Clear objects allocated to BANK1 (21 bytes)
  2536                           	global __pbssBANK1
  2537                           lfsr	0,__pbssBANK1
  2538  000DEA  EE01  F0CE         movlw	21
  2539  000DEE  0E15               clear_0:
  2540  000DF0                     clrf	postinc0,c
  2541  000DF0  6AEE               decf	wreg
  2542  000DF2  06E8               bnz	clear_0
  2543  000DF4  E1FD               ; Clear objects allocated to COMRAM (4 bytes)
  2544                           	global __pbssCOMRAM
  2545                           clrf	(__pbssCOMRAM+3)&0xffh,c
  2546  000DF6  6A31               clrf	(__pbssCOMRAM+2)&0xffh,c
  2547  000DF8  6A30               clrf	(__pbssCOMRAM+1)&0xffh,c
  2548  000DFA  6A2F               clrf	(__pbssCOMRAM+0)&0xffh,c
  2549  000DFC  6A2E               psect cinit,class=CODE,delta=1
  2550                           global end_of_initialization,__end_of__initialization
  2551                           
  2552                           ;End of C runtime variable initialization code
  2553                           
  2554                           end_of_initialization:
  2555  000DFE                     __end_of__initialization:
  2556  000DFE                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
  2557  000DFE  9033               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  2558  000E00  9233               	GLOBAL	__Lsmallconst
  2559                           	movlw	low highword(__Lsmallconst)
  2560  000E02  0E00               	movwf	tblptru
  2561  000E04  6EF8               	movlw	high(__Lsmallconst)
  2562  000E06  0E03               	movwf	tblptrh
  2563  000E08  6EF7               movlb 0
  2564  000E0A  0100               goto _main	;jump to C main() function
  2565  000E0C  EF86  F001         psect	cstackBANK1,class=BANK1,space=1,noexec
  2566                           global __pcstackBANK1
  2567                           __pcstackBANK1:
  2568  000100                     	global	main@path
  2569                           main@path:	; 200 bytes @ 0x0
  2570  000100                     	ds   200
  2571  000100                     	global	main@c
  2572                           main@c:	; 1 bytes @ 0xC8
  2573  0001C8                     	ds   1
  2574  0001C8                     	global	main@leftIR
  2575                           main@leftIR:	; 2 bytes @ 0xC9
  2576  0001C9                     	ds   2
  2577  0001C9                     	global	main@rightIR
  2578                           main@rightIR:	; 2 bytes @ 0xCB
  2579  0001CB                     	ds   2
  2580  0001CB                     	global	main@i
  2581                           main@i:	; 1 bytes @ 0xCD
  2582  0001CD                     	ds   1
  2583  0001CD                     psect	cstackCOMRAM,class=COMRAM,space=1,noexec
  2584                           global __pcstackCOMRAM
  2585                           __pcstackCOMRAM:
  2586  000001                     ?_initEusart:	; 1 bytes @ 0x0
  2587  000001                     ?_initPWM:	; 1 bytes @ 0x0
  2588  000001                     ?_initLCD:	; 1 bytes @ 0x0
  2589  000001                     ?_initIR:	; 1 bytes @ 0x0
  2590  000001                     ?_sendRFID:	; 1 bytes @ 0x0
  2591  000001                     ?_main:	; 1 bytes @ 0x0
  2592  000001                     ?_my_hp_isr:	; 1 bytes @ 0x0
  2593  000001                     ??_my_hp_isr:	; 1 bytes @ 0x0
  2594  000001                     ?_my_lp_isr:	; 1 bytes @ 0x0
  2595  000001                     ?_getCharSerial:	; 1 bytes @ 0x0
  2596  000001                     ?_E_TOG:	; 1 bytes @ 0x0
  2597  000001                     ?_LCDout:	; 1 bytes @ 0x0
  2598  000001                     ?_SetLine:	; 1 bytes @ 0x0
  2599  000001                     ?i1_E_TOG:	; 1 bytes @ 0x0
  2600  000001                     ?i1_LCDout:	; 1 bytes @ 0x0
  2601  000001                     	ds   1
  2602  000001                     ??_getCharSerial:	; 1 bytes @ 0x1
  2603  000002                     ??i1_E_TOG:	; 1 bytes @ 0x1
  2604  000002                     ??i1_LCDout:	; 1 bytes @ 0x1
  2605  000002                     	ds   2
  2606  000002                     	global	i1LCDout@number
  2607                           i1LCDout@number:	; 1 bytes @ 0x3
  2608  000004                     	ds   1
  2609  000004                     ?i1_SendLCD:	; 1 bytes @ 0x4
  2610  000005                     	global	i1SendLCD@type
  2611                           i1SendLCD@type:	; 1 bytes @ 0x4
  2612  000005                     	ds   1
  2613  000005                     ??i1_SendLCD:	; 1 bytes @ 0x5
  2614  000006                     	global	i1SendLCD@HighBits
  2615                           i1SendLCD@HighBits:	; 1 bytes @ 0x5
  2616  000006                     	ds   1
  2617  000006                     	global	i1SendLCD@LowBits
  2618                           i1SendLCD@LowBits:	; 1 bytes @ 0x6
  2619  000007                     	ds   1
  2620  000007                     	global	i1SendLCD@Byte
  2621                           i1SendLCD@Byte:	; 1 bytes @ 0x7
  2622  000008                     	ds   1
  2623  000008                     ??_SetLine:	; 1 bytes @ 0x8
  2624  000009                     ?_LCD_String:	; 1 bytes @ 0x8
  2625  000009                     	global	SetLine@line
  2626                           SetLine@line:	; 1 bytes @ 0x8
  2627  000009                     	global	LCD_String@string
  2628                           LCD_String@string:	; 2 bytes @ 0x8
  2629  000009                     	ds   2
  2630  000009                     ??_LCD_String:	; 1 bytes @ 0xA
  2631  00000B                     	ds   1
  2632  00000B                     ??_sendRFID:	; 1 bytes @ 0xB
  2633  00000C                     ??_my_lp_isr:	; 1 bytes @ 0xB
  2634  00000C                     	ds   7
  2635  00000C                     ??_initEusart:	; 1 bytes @ 0x12
  2636  000013                     ??_initPWM:	; 1 bytes @ 0x12
  2637  000013                     ??_initIR:	; 1 bytes @ 0x12
  2638  000013                     ?_findStrengths:	; 1 bytes @ 0x12
  2639  000013                     ??_E_TOG:	; 1 bytes @ 0x12
  2640  000013                     ??_LCDout:	; 1 bytes @ 0x12
  2641  000013                     	global	?___wmul
  2642                           ?___wmul:	; 2 bytes @ 0x12
  2643  000013                     	global	findStrengths@leftIR
  2644                           findStrengths@leftIR:	; 2 bytes @ 0x12
  2645  000013                     	global	___wmul@multiplier
  2646                           ___wmul@multiplier:	; 2 bytes @ 0x12
  2647  000013                     	ds   2
  2648  000013                     	global	LCDout@number
  2649                           LCDout@number:	; 1 bytes @ 0x14
  2650  000015                     	global	findStrengths@rightIR
  2651                           findStrengths@rightIR:	; 2 bytes @ 0x14
  2652  000015                     	global	___wmul@multiplicand
  2653                           ___wmul@multiplicand:	; 2 bytes @ 0x14
  2654  000015                     	ds   1
  2655  000015                     ?_SendLCD:	; 1 bytes @ 0x15
  2656  000016                     	global	SendLCD@type
  2657                           SendLCD@type:	; 1 bytes @ 0x15
  2658  000016                     	ds   1
  2659  000016                     ??_findStrengths:	; 1 bytes @ 0x16
  2660  000017                     ??_SendLCD:	; 1 bytes @ 0x16
  2661  000017                     ??___wmul:	; 1 bytes @ 0x16
  2662  000017                     	global	SendLCD@HighBits
  2663                           SendLCD@HighBits:	; 1 bytes @ 0x16
  2664  000017                     	global	___wmul@product
  2665                           ___wmul@product:	; 2 bytes @ 0x16
  2666  000017                     	ds   1
  2667  000017                     	global	SendLCD@LowBits
  2668                           SendLCD@LowBits:	; 1 bytes @ 0x17
  2669  000018                     	ds   1
  2670  000018                     ?_setMotorPWM:	; 1 bytes @ 0x18
  2671  000019                     	global	SendLCD@Byte
  2672                           SendLCD@Byte:	; 1 bytes @ 0x18
  2673  000019                     	global	setMotorPWM@m
  2674                           setMotorPWM@m:	; 2 bytes @ 0x18
  2675  000019                     	ds   1
  2676  000019                     ??_initLCD:	; 1 bytes @ 0x19
  2677  00001A                     	ds   1
  2678  00001A                     ??_setMotorPWM:	; 1 bytes @ 0x1A
  2679  00001B                     	ds   4
  2680  00001B                     	global	setMotorPWM@PWMduty
  2681                           setMotorPWM@PWMduty:	; 2 bytes @ 0x1E
  2682  00001F                     	ds   2
  2683  00001F                     ?_stop:	; 1 bytes @ 0x20
  2684  000021                     ?_setMotorsFullSpeed:	; 1 bytes @ 0x20
  2685  000021                     	global	setMotorsFullSpeed@mL
  2686                           setMotorsFullSpeed@mL:	; 2 bytes @ 0x20
  2687  000021                     	global	stop@mL
  2688                           stop@mL:	; 2 bytes @ 0x20
  2689  000021                     	ds   2
  2690  000021                     	global	setMotorsFullSpeed@mR
  2691                           setMotorsFullSpeed@mR:	; 2 bytes @ 0x22
  2692  000023                     	global	stop@mR
  2693                           stop@mR:	; 2 bytes @ 0x22
  2694  000023                     	ds   2
  2695  000023                     ??_stop:	; 1 bytes @ 0x24
  2696  000025                     ??_setMotorsFullSpeed:	; 1 bytes @ 0x24
  2697  000025                     	ds   1
  2698  000025                     ?_move:	; 1 bytes @ 0x25
  2699  000026                     	global	move@mL
  2700                           move@mL:	; 2 bytes @ 0x25
  2701  000026                     	ds   2
  2702  000026                     	global	move@mR
  2703                           move@mR:	; 2 bytes @ 0x27
  2704  000028                     	ds   2
  2705  000028                     	global	move@dir
  2706                           move@dir:	; 1 bytes @ 0x29
  2707  00002A                     	ds   1
  2708  00002A                     ??_move:	; 1 bytes @ 0x2A
  2709  00002B                     ??_main:	; 1 bytes @ 0x2A
  2710  00002B                     	ds   3
  2711  00002B                     ;!
  2712                           ;!Data Sizes:
  2713                           ;!    Strings     9
  2714                           ;!    Constant    0
  2715                           ;!    Data        2
  2716                           ;!    BSS         25
  2717                           ;!    Persistent  0
  2718                           ;!    Stack       0
  2719                           ;!
  2720                           ;!Auto Spaces:
  2721                           ;!    Space          Size  Autos    Used
  2722                           ;!    COMRAM           94     45      50
  2723                           ;!    BANK0           160      0       0
  2724                           ;!    BANK1           256    206     228
  2725                           ;!    BANK2           256      0       0
  2726                           
  2727                           ;!
  2728                           ;!Pointer List with Targets:
  2729                           ;!
  2730                           ;!    findStrengths@rightIR	PTR int  size(2) Largest target is 2
  2731                           ;!		 -> main@rightIR(BANK1[2]), 
  2732                           ;!
  2733                           ;!    findStrengths@leftIR	PTR int  size(2) Largest target is 2
  2734                           ;!		 -> main@leftIR(BANK1[2]), 
  2735                           ;!
  2736                           ;!    LCD_String@string	PTR unsigned char  size(2) Largest target is 9
  2737                           ;!		 -> STR_2(CODE[9]), STR_1(CODE[6]), 
  2738                           ;!
  2739                           ;!    move@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
  2740                           ;!		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 
  2741                           ;!
  2742                           ;!    move@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
  2743                           ;!		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 
  2744                           ;!
  2745                           ;!    move@mR	PTR struct DC_motor size(2) Largest target is 11
  2746                           ;!		 -> motorR(BANK1[9]), 
  2747                           ;!
  2748                           ;!    move@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
  2749                           ;!		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 
  2750                           ;!
  2751                           ;!    move@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
  2752                           ;!		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 
  2753                           ;!
  2754                           ;!    move@mL	PTR struct DC_motor size(2) Largest target is 11
  2755                           ;!		 -> motorL(BANK1[9]), 
  2756                           ;!
  2757                           ;!    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
  2758                           ;!		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 
  2759                           ;!
  2760                           ;!    stop@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
  2761                           ;!		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 
  2762                           ;!
  2763                           ;!    stop@mR	PTR struct DC_motor size(2) Largest target is 11
  2764                           ;!		 -> motorR(BANK1[9]), 
  2765                           ;!
  2766                           ;!    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
  2767                           ;!		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 
  2768                           ;!
  2769                           ;!    stop@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
  2770                           ;!		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 
  2771                           ;!
  2772                           ;!    stop@mL	PTR struct DC_motor size(2) Largest target is 11
  2773                           ;!		 -> motorL(BANK1[9]), 
  2774                           ;!
  2775                           ;!    setMotorsFullSpeed@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1

  2776                           ;!		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 
  2777                           ;!
  2778                           ;!    setMotorsFullSpeed@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
  2779                           ;!		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 
  2780                           ;!
  2781                           ;!    setMotorsFullSpeed@mR	PTR struct DC_motor size(2) Largest target is 11
  2782                           ;!		 -> motorR(BANK1[9]), 
  2783                           ;!
  2784                           ;!    setMotorsFullSpeed@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1

  2785                           ;!		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 
  2786                           ;!
  2787                           ;!    setMotorsFullSpeed@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
  2788                           ;!		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 
  2789                           ;!
  2790                           ;!    setMotorsFullSpeed@mL	PTR struct DC_motor size(2) Largest target is 11
  2791                           ;!		 -> motorL(BANK1[9]), 
  2792                           ;!
  2793                           ;!    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
  2794                           ;!		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 
  2795                           ;!
  2796                           ;!    setMotorPWM@m.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
  2797                           ;!		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 
  2798                           ;!
  2799                           ;!    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
  2800                           ;!		 -> motorL(BANK1[9]), motorR(BANK1[9]), 
  2801                           ;!
  2802                           ;!    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
  2803                           ;!		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 
  2804                           ;!
  2805                           ;!    motorR.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
  2806                           ;!		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 
  2807                           ;!
  2808                           ;!    S24DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
  2809                           ;!		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 
  2810                           ;!
  2811                           ;!    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
  2812                           ;!		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 
  2813                           ;!
  2814                           ;!    S24DC_motor$dutyLowByte	PTR unsigned char  size(2) Largest target is 1
  2815                           ;!		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 
  2816                           ;!
  2817                           ;!    motorL.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
  2818                           ;!		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 
  2819                           ;!
  2820                           
  2821                           
  2822                           ;!
  2823                           ;!Critical Paths under _main in COMRAM
  2824                           ;!
  2825                           ;!    _main->_move
  2826                           ;!    _move->_setMotorsFullSpeed
  2827                           ;!    _move->_stop
  2828                           ;!    _stop->_setMotorPWM
  2829                           ;!    _setMotorsFullSpeed->_setMotorPWM
  2830                           ;!    _setMotorPWM->___wmul
  2831                           ;!    _initLCD->_SendLCD
  2832                           ;!    _SendLCD->_LCDout
  2833                           ;!
  2834                           ;!Critical Paths under _my_lp_isr in COMRAM
  2835                           ;!
  2836                           ;!    _sendRFID->_LCD_String
  2837                           ;!    _SetLine->i1_SendLCD
  2838                           ;!    _LCD_String->i1_SendLCD
  2839                           ;!    i1_SendLCD->i1_LCDout
  2840                           ;!
  2841                           ;!Critical Paths under _my_hp_isr in COMRAM
  2842                           ;!
  2843                           ;!    None.
  2844                           ;!
  2845                           ;!Critical Paths under _main in BANK0
  2846                           ;!
  2847                           ;!    None.
  2848                           ;!
  2849                           ;!Critical Paths under _my_lp_isr in BANK0
  2850                           ;!
  2851                           ;!    None.
  2852                           ;!
  2853                           ;!Critical Paths under _my_hp_isr in BANK0
  2854                           ;!
  2855                           ;!    None.
  2856                           ;!
  2857                           ;!Critical Paths under _main in BANK1
  2858                           ;!
  2859                           ;!    None.
  2860                           ;!
  2861                           ;!Critical Paths under _my_lp_isr in BANK1
  2862                           ;!
  2863                           ;!    None.
  2864                           ;!
  2865                           ;!Critical Paths under _my_hp_isr in BANK1
  2866                           ;!
  2867                           ;!    None.
  2868                           ;!
  2869                           ;!Critical Paths under _main in BANK2
  2870                           ;!
  2871                           ;!    None.
  2872                           ;!
  2873                           ;!Critical Paths under _my_lp_isr in BANK2
  2874                           ;!
  2875                           ;!    None.
  2876                           ;!
  2877                           ;!Critical Paths under _my_hp_isr in BANK2
  2878                           ;!
  2879                           ;!    None.
  2880                           
  2881 ;;
  2882 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2883 ;;
  2884                           
  2885                           ;!
  2886                           ;!Call Graph Tables:
  2887                           ;!
  2888                           ;! ---------------------------------------------------------------------------------
  2889                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2890                           ;! ---------------------------------------------------------------------------------
  2891                           ;! (0) _main                                               209   209      0    9941
  2892                           ;!                                             42 COMRAM     3     3      0
  2893                           ;!                                              0 BANK1    206   206      0
  2894                           ;!                      _findStrengths
  2895                           ;!                         _initEusart
  2896                           ;!                             _initIR
  2897                           ;!                            _initLCD
  2898                           ;!                            _initPWM
  2899                           ;!                               _move
  2900                           ;!                        _setMotorPWM
  2901                           ;!                               _stop
  2902                           ;! ---------------------------------------------------------------------------------
  2903                           ;! (1) _move                                                 5     0      5    4632
  2904                           ;!                                             37 COMRAM     5     0      5
  2905                           ;!                 _setMotorsFullSpeed
  2906                           ;!                               _stop
  2907                           ;! ---------------------------------------------------------------------------------
  2908                           ;! (1) _stop                                                 5     1      4    1810
  2909                           ;!                                             32 COMRAM     5     1      4
  2910                           ;!                        _setMotorPWM
  2911                           ;! ---------------------------------------------------------------------------------
  2912                           ;! (2) _setMotorsFullSpeed                                   5     1      4    1506
  2913                           ;!                                             32 COMRAM     5     1      4
  2914                           ;!                        _setMotorPWM
  2915                           ;! ---------------------------------------------------------------------------------
  2916                           ;! (2) _setMotorPWM                                          8     6      2    1244
  2917                           ;!                                             24 COMRAM     8     6      2
  2918                           ;!                             ___wmul
  2919                           ;! ---------------------------------------------------------------------------------
  2920                           ;! (3) ___wmul                                               6     2      4     257
  2921                           ;!                                             18 COMRAM     6     2      4
  2922                           ;! ---------------------------------------------------------------------------------
  2923                           ;! (1) _initPWM                                              0     0      0       0
  2924                           ;! ---------------------------------------------------------------------------------
  2925                           ;! (1) _initLCD                                              1     1      0     780
  2926                           ;!                                             25 COMRAM     1     1      0
  2927                           ;!                             _LCDout
  2928                           ;!                            _SendLCD
  2929                           ;! ---------------------------------------------------------------------------------
  2930                           ;! (2) _SendLCD                                              4     3      1     736
  2931                           ;!                                             21 COMRAM     4     3      1
  2932                           ;!                             _LCDout
  2933                           ;! ---------------------------------------------------------------------------------
  2934                           ;! (3) _LCDout                                               3     3      0      44
  2935                           ;!                                             18 COMRAM     3     3      0
  2936                           ;!                              _E_TOG
  2937                           ;! ---------------------------------------------------------------------------------
  2938                           ;! (4) _E_TOG                                                0     0      0       0
  2939                           ;! ---------------------------------------------------------------------------------
  2940                           ;! (1) _initIR                                               0     0      0       0
  2941                           ;! ---------------------------------------------------------------------------------
  2942                           ;! (1) _initEusart                                           0     0      0       0
  2943                           ;! ---------------------------------------------------------------------------------
  2944                           ;! (1) _findStrengths                                        8     4      4     652
  2945                           ;!                                             18 COMRAM     8     4      4
  2946                           ;! ---------------------------------------------------------------------------------
  2947                           ;! Estimated maximum stack depth 4
  2948                           ;! ---------------------------------------------------------------------------------
  2949                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2950                           ;! ---------------------------------------------------------------------------------
  2951                           ;! (5) _my_lp_isr                                            7     7      0    1021
  2952                           ;!                                             11 COMRAM     7     7      0
  2953                           ;!                           _sendRFID
  2954                           ;! ---------------------------------------------------------------------------------
  2955                           ;! (6) _sendRFID                                             0     0      0    1021
  2956                           ;!                         _LCD_String
  2957                           ;!                            _SetLine
  2958                           ;!                      _getCharSerial
  2959                           ;!                          i1_SendLCD
  2960                           ;! ---------------------------------------------------------------------------------
  2961                           ;! (7) _getCharSerial                                        0     0      0       0
  2962                           ;! ---------------------------------------------------------------------------------
  2963                           ;! (7) _SetLine                                              1     1      0     304
  2964                           ;!                                              8 COMRAM     1     1      0
  2965                           ;!                          i1_SendLCD
  2966                           ;! ---------------------------------------------------------------------------------
  2967                           ;! (7) _LCD_String                                           3     1      2     457
  2968                           ;!                                              8 COMRAM     3     1      2
  2969                           ;!                          i1_SendLCD
  2970                           ;! ---------------------------------------------------------------------------------
  2971                           ;! (7) i1_SendLCD                                            4     3      1     260
  2972                           ;!                                              4 COMRAM     4     3      1
  2973                           ;!                           i1_LCDout
  2974                           ;! ---------------------------------------------------------------------------------
  2975                           ;! (8) i1_LCDout                                             3     3      0      44
  2976                           ;!                                              1 COMRAM     3     3      0
  2977                           ;!                            i1_E_TOG
  2978                           ;! ---------------------------------------------------------------------------------
  2979                           ;! (9) i1_E_TOG                                              0     0      0       0
  2980                           ;! ---------------------------------------------------------------------------------
  2981                           ;! Estimated maximum stack depth 9
  2982                           ;! ---------------------------------------------------------------------------------
  2983                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2984                           ;! ---------------------------------------------------------------------------------
  2985                           ;! (11) _my_hp_isr                                           1     1      0       0
  2986                           ;!                                              0 COMRAM     1     1      0
  2987                           ;! ---------------------------------------------------------------------------------
  2988                           ;! Estimated maximum stack depth 11
  2989                           ;! ---------------------------------------------------------------------------------
  2990                           ;!
  2991                           ;! Call Graph Graphs:
  2992                           ;!
  2993                           ;! _main (ROOT)
  2994                           ;!   _findStrengths
  2995                           ;!   _initEusart
  2996                           ;!   _initIR
  2997                           ;!   _initLCD
  2998                           ;!     _LCDout
  2999                           ;!       _E_TOG
  3000                           ;!     _SendLCD
  3001                           ;!       _LCDout
  3002                           ;!         _E_TOG
  3003                           ;!   _initPWM
  3004                           ;!   _move
  3005                           ;!     _setMotorsFullSpeed
  3006                           ;!       _setMotorPWM
  3007                           ;!         ___wmul
  3008                           ;!     _stop
  3009                           ;!       _setMotorPWM
  3010                           ;!         ___wmul
  3011                           ;!   _setMotorPWM
  3012                           ;!     ___wmul
  3013                           ;!   _stop
  3014                           ;!     _setMotorPWM
  3015                           ;!       ___wmul
  3016                           ;!
  3017                           ;! _my_lp_isr (ROOT)
  3018                           ;!   _sendRFID
  3019                           ;!     _LCD_String
  3020                           ;!       i1_SendLCD
  3021                           ;!         i1_LCDout
  3022                           ;!           i1_E_TOG
  3023                           ;!     _SetLine
  3024                           ;!       i1_SendLCD
  3025                           ;!         i1_LCDout
  3026                           ;!           i1_E_TOG
  3027                           ;!     _getCharSerial
  3028                           ;!     i1_SendLCD
  3029                           ;!       i1_LCDout
  3030                           ;!         i1_E_TOG
  3031                           ;!
  3032                           ;! _my_hp_isr (ROOT)
  3033                           ;!
  3034                           
  3035                           ;! Address spaces:
  3036                           
  3037                           ;!Name               Size   Autos  Total    Cost      Usage
  3038                           ;!BIGRAM             2FF      0       0      10        0.0%
  3039                           ;!EEDATA             100      0       0       0        0.0%
  3040                           ;!BITBANK2           100      0       0       8        0.0%
  3041                           ;!BANK2              100      0       0       9        0.0%
  3042                           ;!BITBANK1           100      0       0       6        0.0%
  3043                           ;!BANK1              100     CE      E4       7       89.1%
  3044                           ;!BITBANK0            A0      0       0       4        0.0%
  3045                           ;!BANK0               A0      0       0       5        0.0%
  3046                           ;!BITCOMRAM           5E      0       0       0        0.0%
  3047                           ;!COMRAM              5E     2D      32       1       53.2%
  3048                           ;!BITSFR               0      0       0     200        0.0%
  3049                           ;!SFR                  0      0       0     200        0.0%
  3050                           ;!STACK                0      0       0       2        0.0%
  3051                           ;!NULL                 0      0       0       0        0.0%
  3052                           ;!ABS                  0      0     116       3        0.0%
  3053                           ;!DATA                 0      0     116      11        0.0%
  3054                           ;!CODE                 0      0       0       0        0.0%
  3055                           
  3056                           	global	_main
  3057                           
  3058 ;; *************** function _main *****************
  3059 ;; Defined at:
  3060 ;;		line 51 in file "main.c"
  3061 ;; Parameters:    Size  Location     Type
  3062 ;;		None
  3063 ;; Auto vars:     Size  Location     Type
  3064 ;;  path          200    0[BANK1 ] unsigned char [200]
  3065 ;;  rightIR         2  203[BANK1 ] int 
  3066 ;;  leftIR          2  201[BANK1 ] int 
  3067 ;;  i               1  205[BANK1 ] unsigned char 
  3068 ;;  c               1  200[BANK1 ] unsigned char 
  3069 ;; Return value:  Size  Location     Type
  3070 ;;                  1    wreg      void 
  3071 ;; Registers used:
  3072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3078 ;;      Params:         0       0       0       0
  3079 ;;      Locals:         0       0     206       0
  3080 ;;      Temps:          3       0       0       0
  3081 ;;      Totals:         3       0     206       0
  3082 ;;Total ram usage:      209 bytes
  3083 ;; Hardware stack levels required when called:   11
  3084 ;; This function calls:
  3085 ;;		_findStrengths
  3086 ;;		_initEusart
  3087 ;;		_initIR
  3088 ;;		_initLCD
  3089 ;;		_initPWM
  3090 ;;		_move
  3091 ;;		_setMotorPWM
  3092 ;;		_stop
  3093 ;; This function is called by:
  3094 ;;		Startup code after reset
  3095 ;; This function uses a non-reentrant model
  3096 ;;
  3097                           psect	text0,class=CODE,space=0,reloc=2,group=0
  3098                           	file	"main.c"
  3099                           	line	51
  3100                           global __ptext0
  3101                           __ptext0:
  3102  00030C                     psect	text0
  3103                           	file	"main.c"
  3104                           	line	51
  3105                           	global	__size_of_main
  3106                           	__size_of_main	equ	__end_of_main-_main
  3107  0000                     	
  3108                           _main:
  3109  00030C                     ;incstack = 0
  3110                           	opt	stack 20
  3111                           	line	54
  3112                           	
  3113                           l1650:
  3114  00030C                     ;main.c: 54: 
  3115                           	movlw	low(072h)
  3116  00030C  0E72               	movwf	((c:4051)),c	;volatile
  3117  00030E  6ED3               	line	55
  3118                           ;main.c: 55: 
  3119                           	goto	l67
  3120  000310  EF8A  F001         	
  3121                           l68:
  3122  000314                     	
  3123                           l67:
  3124  000314                     	btfss	((c:4051)),c,2	;volatile
  3125  000314  A4D3               	goto	u751
  3126  000316  EF8F  F001         	goto	u750
  3127  00031A  EF91  F001         u751:
  3128  00031E                     	goto	l67
  3129  00031E  EF8A  F001         u750:
  3130  000322                     	
  3131                           l69:
  3132  000322                     	line	59
  3133                           ;main.c: 59: 
  3134                           	bcf	((c:3979)),c,3	;volatile
  3135  000322  968B               	line	60
  3136                           ;main.c: 60:     initLCD();
  3137                           	bsf	((c:3988)),c,3	;volatile
  3138  000324  8694               	line	62
  3139                           	bcf	((c:3979)),c,5	;volatile
  3140  000326  9A8B               	line	63
  3141                           	bsf	((c:3988)),c,5	;volatile
  3142  000328  8A94               	line	65
  3143                           	bcf	((c:3979)),c,4	;volatile
  3144  00032A  988B               	line	66
  3145                           	bcf	((c:3988)),c,4	;volatile
  3146  00032C  9894               	line	70
  3147                           	bcf	((c:3980)),c,2	;volatile
  3148  00032E  948C               	line	71
  3149                           	bcf	((c:3989)),c,2	;volatile
  3150  000330  9495               	line	73
  3151                           	bcf	((c:3980)),c,3	;volatile
  3152  000332  968C               	line	74
  3153                           	bcf	((c:3989)),c,3	;volatile
  3154  000334  9695               	line	78
  3155                           	
  3156                           l1652:
  3157  000336                     	movlw	low(0)
  3158  000336  0E00               	movwf	((c:3998)),c	;volatile
  3159  000338  6E9E               	line	80
  3160                           	
  3161                           l1654:
  3162  00033A                     	bsf	((c:4082)),c,7	;volatile
  3163  00033A  8EF2               	line	81
  3164                           	
  3165                           l1656:
  3166  00033C                     	bsf	((c:4082)),c,6	;volatile
  3167  00033C  8CF2               	line	82
  3168                           	
  3169                           l1658:
  3170  00033E                     	bsf	((c:4048)),c,7	;volatile
  3171  00033E  8ED0               	line	84
  3172                           	
  3173                           l1660:
  3174  000340                     	bsf	((c:4082)),c,4	;volatile
  3175  000340  88F2               	line	86
  3176                           	
  3177                           l1662:
  3178  000342                     	bsf	((c:4080)),c,4	;volatile
  3179  000342  88F0               	line	87
  3180                           	
  3181                           l1664:
  3182  000344                     	bcf	((c:4080)),c,7	;volatile
  3183  000344  9EF0               	line	88
  3184                           	
  3185                           l1666:
  3186  000346                     	bcf	((c:4081)),c,4	;volatile
  3187  000346  98F1               	line	93
  3188                           	
  3189                           l1668:
  3190  000348                     	call	_initEusart	;wreg free
  3191  000348  ECD4  F007         	line	94
  3192                           	
  3193                           l1670:
  3194  00034C                     	call	_initPWM	;wreg free
  3195  00034C  EC3F  F006         	line	96
  3196                           	
  3197                           l1672:
  3198  000350                     	call	_initLCD	;wreg free
  3199  000350  EC40  F005         	line	97
  3200                           	
  3201                           l1674:
  3202  000354                     	call	_initIR	;wreg free
  3203  000354  ECB6  F007         	line	106
  3204                           	
  3205                           l1676:
  3206  000358                     ;main.c: 106:     motorR.power = 0;
  3207                           	movlw	low(0)
  3208  000358  0E00               	movlb	1	; () banked
  3209  00035A  0101               	movwf	((_motorR))&0ffh
  3210  00035C  6FD1               	line	107
  3211                           	
  3212                           l1678:; BSR set to: 1
  3213  00035E                     
  3214                           ;main.c: 107:     motorR.direction = 0;
  3215                           	movlw	low(0)
  3216  00035E  0E00               	movwf	(0+(_motorR+01h))&0ffh
  3217  000360  6FD2               	line	108
  3218                           ;main.c: 108:     motorR.dutyLowByte = (unsigned char *) (&PDC0L);
  3219                           		movlw	low(3961)
  3220  000362  0E79               	movwf	(0+(_motorR+02h))&0ffh
  3221  000364  6FD3               	movlw	high(3961)
  3222  000366  0E0F               	movwf	(1+(_motorR+02h))&0ffh
  3223  000368  6FD4               
  3224                           	line	109
  3225                           ;main.c: 109:     motorR.dutyHighByte = (unsigned char *) (&PDC0H);
  3226                           		movlw	low(3960)
  3227  00036A  0E78               	movwf	(0+(_motorR+04h))&0ffh
  3228  00036C  6FD5               	movlw	high(3960)
  3229  00036E  0E0F               	movwf	(1+(_motorR+04h))&0ffh
  3230  000370  6FD6               
  3231                           	line	110
  3232                           	
  3233                           l1680:; BSR set to: 1
  3234  000372                     
  3235                           ;main.c: 110:     motorR.dir_pin = 0;
  3236                           	movlw	low(0)
  3237  000372  0E00               	movwf	(0+(_motorR+06h))&0ffh
  3238  000374  6FD7               	line	111
  3239                           	
  3240                           l1682:; BSR set to: 1
  3241  000376                     
  3242                           ;main.c: 111:     motorR.PWMperiod = 199;
  3243                           	movlw	high(0C7h)
  3244  000376  0E00               	movwf	(1+(_motorR+07h))&0ffh
  3245  000378  6FD9               	movlw	low(0C7h)
  3246  00037A  0EC7               	movwf	(0+(_motorR+07h))&0ffh
  3247  00037C  6FD8               	line	114
  3248                           	
  3249                           l1684:; BSR set to: 1
  3250  00037E                     
  3251                           ;main.c: 114:     motorL.power = 0;
  3252                           	movlw	low(0)
  3253  00037E  0E00               	movwf	((_motorL))&0ffh
  3254  000380  6FDA               	line	115
  3255                           	
  3256                           l1686:; BSR set to: 1
  3257  000382                     
  3258                           ;main.c: 115:     motorL.direction = 0;
  3259                           	movlw	low(0)
  3260  000382  0E00               	movwf	(0+(_motorL+01h))&0ffh
  3261  000384  6FDB               	line	116
  3262                           ;main.c: 116:     motorL.dutyLowByte = (unsigned char *) (&PDC1L);
  3263                           		movlw	low(3959)
  3264  000386  0E77               	movwf	(0+(_motorL+02h))&0ffh
  3265  000388  6FDC               	movlw	high(3959)
  3266  00038A  0E0F               	movwf	(1+(_motorL+02h))&0ffh
  3267  00038C  6FDD               
  3268                           	line	117
  3269                           ;main.c: 117:     motorL.dutyHighByte = (unsigned char *) (&PDC1H);
  3270                           		movlw	low(3958)
  3271  00038E  0E76               	movwf	(0+(_motorL+04h))&0ffh
  3272  000390  6FDE               	movlw	high(3958)
  3273  000392  0E0F               	movwf	(1+(_motorL+04h))&0ffh
  3274  000394  6FDF               
  3275                           	line	118
  3276                           	
  3277                           l1688:; BSR set to: 1
  3278  000396                     
  3279                           ;main.c: 118:     motorL.dir_pin = 2;
  3280                           	movlw	low(02h)
  3281  000396  0E02               	movwf	(0+(_motorL+06h))&0ffh
  3282  000398  6FE0               	line	119
  3283                           	
  3284                           l1690:; BSR set to: 1
  3285  00039A                     
  3286                           ;main.c: 119:     motorL.PWMperiod = 199;
  3287                           	movlw	high(0C7h)
  3288  00039A  0E00               	movwf	(1+(_motorL+07h))&0ffh
  3289  00039C  6FE2               	movlw	low(0C7h)
  3290  00039E  0EC7               	movwf	(0+(_motorL+07h))&0ffh
  3291  0003A0  6FE1               	line	123
  3292                           	
  3293                           l1692:; BSR set to: 1
  3294  0003A2                     
  3295                           ;main.c: 123:     setMotorPWM(&motorL);
  3296                           		movlw	low(_motorL)
  3297  0003A2  0EDA               	movwf	((c:setMotorPWM@m)),c
  3298  0003A4  6E19               	movlw	high(_motorL)
  3299  0003A6  0E01               	movwf	((c:setMotorPWM@m+1)),c
  3300  0003A8  6E1A               
  3301                           	call	_setMotorPWM	;wreg free
  3302  0003AA  ECD3  F003         	line	124
  3303                           	
  3304                           l1694:
  3305  0003AE                     ;main.c: 124:     setMotorPWM(&motorR);
  3306                           		movlw	low(_motorR)
  3307  0003AE  0ED1               	movwf	((c:setMotorPWM@m)),c
  3308  0003B0  6E19               	movlw	high(_motorR)
  3309  0003B2  0E01               	movwf	((c:setMotorPWM@m+1)),c
  3310  0003B4  6E1A               
  3311                           	call	_setMotorPWM	;wreg free
  3312  0003B6  ECD3  F003         	line	130
  3313                           	
  3314                           l1696:
  3315  0003BA                     ;main.c: 127:     int leftIR;;main.c: 128:     int rightIR;;main.c: 130:     char i = 0;
                                 
  3316                           	movlw	low(0)
  3317  0003BA  0E00               	movlb	1	; () banked
  3318  0003BC  0101               	movwf	((main@i))&0ffh
  3319  0003BE  6FCD               	line	134
  3320                           	
  3321                           l1698:; BSR set to: 1
  3322  0003C0                     
  3323                           ;main.c: 131:     char path[200];;main.c: 134:     char c = 0;
  3324                           	movlw	low(0)
  3325  0003C0  0E00               	movwf	((main@c))&0ffh
  3326  0003C2  6FC8               	line	137
  3327                           ;main.c: 137:     while (1) {
  3328                           	
  3329                           l70:
  3330  0003C4                     	line	138
  3331                           ;main.c: 138:         if (robotOn == 1) {
  3332                           	movlb	1	; () banked
  3333  0003C4  0101               		decf	((_robotOn))&0ffh,w
  3334  0003C6  05D0               	btfss	status,2
  3335  0003C8  A4D8               	goto	u761
  3336  0003CA  EFE9  F001         	goto	u760
  3337  0003CE  EFEB  F001         
  3338                           u761:
  3339  0003D2                     	goto	l1784
  3340  0003D2  EF86  F003         u760:
  3341  0003D6                     	goto	l1710
  3342  0003D6  EF13  F002         	line	142
  3343                           	
  3344                           l1700:; BSR set to: 1
  3345  0003DA                     
  3346                           ;main.c: 142:             while ((leftIR < 2000 && rightIR < 2000) && robotOn==1 && IRso
                                 urce==0) {
  3347                           	goto	l1710
  3348  0003DA  EF13  F002         	
  3349                           l73:; BSR set to: 1
  3350  0003DE                     
  3351                           	line	144
  3352                           	
  3353                           l1702:; BSR set to: 1
  3354  0003DE                     
  3355                           ;main.c: 144:                 move(&motorL, &motorR, 0b10);
  3356                           		movlw	low(_motorL)
  3357  0003DE  0EDA               	movwf	((c:move@mL)),c
  3358  0003E0  6E26               	movlw	high(_motorL)
  3359  0003E2  0E01               	movwf	((c:move@mL+1)),c
  3360  0003E4  6E27               
  3361                           		movlw	low(_motorR)
  3362  0003E6  0ED1               	movwf	((c:move@mR)),c
  3363  0003E8  6E28               	movlw	high(_motorR)
  3364  0003EA  0E01               	movwf	((c:move@mR+1)),c
  3365  0003EC  6E29               
  3366                           	movlw	low(02h)
  3367  0003EE  0E02               	movwf	((c:move@dir)),c
  3368  0003F0  6E2A               	call	_move	;wreg free
  3369  0003F2  EC6C  F006         	line	146
  3370                           	
  3371                           l1704:
  3372  0003F6                     ;main.c: 146:                 path[i] = 0b10;
  3373                           	movlb	1	; () banked
  3374  0003F6  0101               	movf	((main@i))&0ffh,w
  3375  0003F8  51CD               	mullw	01h
  3376  0003FA  0D01               	movlw	low(main@path)
  3377  0003FC  0E00               	addwf	(prodl),c,w
  3378  0003FE  24F3               	movwf	c:fsr2l
  3379  000400  6ED9               	movlw	high(main@path)
  3380  000402  0E01               	addwfc	prod+1,w
  3381  000404  20F4               	movwf	1+c:fsr2l
  3382  000406  6EDA               	movlw	low(02h)
  3383  000408  0E02               	movwf	indf2
  3384  00040A  6EDF               	line	147
  3385                           	
  3386                           l1706:; BSR set to: 1
  3387  00040C                     
  3388                           ;main.c: 147:                 i+=1;
  3389                           	incf	((main@i))&0ffh
  3390  00040C  2BCD               	line	148
  3391                           	
  3392                           l1708:; BSR set to: 1
  3393  00040E                     
  3394                           ;main.c: 148:                 findStrengths(&leftIR, &rightIR);
  3395                           		movlw	low(main@leftIR)
  3396  00040E  0EC9               	movwf	((c:findStrengths@leftIR)),c
  3397  000410  6E13               	movlw	high(main@leftIR)
  3398  000412  0E01               	movwf	((c:findStrengths@leftIR+1)),c
  3399  000414  6E14               
  3400                           		movlw	low(main@rightIR)
  3401  000416  0ECB               	movwf	((c:findStrengths@rightIR)),c
  3402  000418  6E15               	movlw	high(main@rightIR)
  3403  00041A  0E01               	movwf	((c:findStrengths@rightIR+1)),c
  3404  00041C  6E16               
  3405                           	call	_findStrengths	;wreg free
  3406  00041E  EC08  F007         	goto	l1710
  3407  000422  EF13  F002         	line	150
  3408                           ;main.c: 150:             }
  3409                           	
  3410                           l72:
  3411  000426                     	line	142
  3412                           	
  3413                           l1710:
  3414  000426                     ;main.c: 142:             while ((leftIR < 2000 && rightIR < 2000) && robotOn==1 && IRso
                                 urce==0) {
  3415                           	movlb	1	; () banked
  3416  000426  0101               	btfsc	((main@leftIR+1))&0ffh,7
  3417  000428  BFCA               	goto	u770
  3418  00042A  EF22  F002         	movlw	208
  3419  00042E  0ED0               	subwf	 ((main@leftIR))&0ffh,w
  3420  000430  5DC9               	movlw	7
  3421  000432  0E07               	subwfb	((main@leftIR+1))&0ffh,w
  3422  000434  59CA               	btfsc	status,0
  3423  000436  B0D8               	goto	u771
  3424  000438  EF20  F002         	goto	u770
  3425  00043C  EF22  F002         
  3426                           u771:
  3427  000440                     	goto	l1718
  3428  000440  EF44  F002         u770:
  3429  000444                     	
  3430                           l1712:; BSR set to: 1
  3431  000444                     
  3432                           	btfsc	((main@rightIR+1))&0ffh,7
  3433  000444  BFCC               	goto	u780
  3434  000446  EF30  F002         	movlw	208
  3435  00044A  0ED0               	subwf	 ((main@rightIR))&0ffh,w
  3436  00044C  5DCB               	movlw	7
  3437  00044E  0E07               	subwfb	((main@rightIR+1))&0ffh,w
  3438  000450  59CC               	btfsc	status,0
  3439  000452  B0D8               	goto	u781
  3440  000454  EF2E  F002         	goto	u780
  3441  000458  EF30  F002         
  3442                           u781:
  3443  00045C                     	goto	l1718
  3444  00045C  EF44  F002         u780:
  3445  000460                     	
  3446                           l1714:; BSR set to: 1
  3447  000460                     
  3448                           		decf	((_robotOn))&0ffh,w
  3449  000460  05D0               	btfss	status,2
  3450  000462  A4D8               	goto	u791
  3451  000464  EF36  F002         	goto	u790
  3452  000468  EF38  F002         
  3453                           u791:
  3454  00046C                     	goto	l1718
  3455  00046C  EF44  F002         u790:
  3456  000470                     	
  3457                           l1716:; BSR set to: 1
  3458  000470                     
  3459                           	movf	((_IRsource))&0ffh,w
  3460  000470  51CE               	btfsc	status,2
  3461  000472  B4D8               	goto	u801
  3462  000474  EF3E  F002         	goto	u800
  3463  000478  EF40  F002         u801:
  3464  00047C                     	goto	l1702
  3465  00047C  EFEF  F001         u800:
  3466  000480                     	goto	l1718
  3467  000480  EF44  F002         	
  3468                           l75:; BSR set to: 1
  3469  000484                     
  3470                           	goto	l1718
  3471  000484  EF44  F002         	
  3472                           l76:; BSR set to: 1
  3473  000488                     
  3474                           	line	161
  3475                           	
  3476                           l1718:; BSR set to: 1
  3477  000488                     
  3478                           ;main.c: 161:             IRsource = 1;
  3479                           	movlw	low(01h)
  3480  000488  0E01               	movwf	((_IRsource))&0ffh
  3481  00048A  6FCE               	line	164
  3482                           	
  3483                           l1720:; BSR set to: 1
  3484  00048C                     
  3485                           ;main.c: 164:             if (RFIDread == 1) {
  3486                           		decf	((_RFIDread))&0ffh,w
  3487  00048C  05CF               	btfss	status,2
  3488  00048E  A4D8               	goto	u811
  3489  000490  EF4C  F002         	goto	u810
  3490  000494  EF4E  F002         
  3491                           u811:
  3492  000498                     	goto	l1732
  3493  000498  EF81  F002         u810:
  3494  00049C                     	goto	l1728
  3495  00049C  EF6A  F002         	line	167
  3496                           	
  3497                           l1722:; BSR set to: 1
  3498  0004A0                     
  3499                           ;main.c: 167:                 while (i > 0) {
  3500                           	goto	l1728
  3501  0004A0  EF6A  F002         	
  3502                           l79:; BSR set to: 1
  3503  0004A4                     
  3504                           	line	168
  3505                           	
  3506                           l1724:; BSR set to: 1
  3507  0004A4                     
  3508                           ;main.c: 168:                     --i;
  3509                           	decf	((main@i))&0ffh
  3510  0004A4  07CD               	line	169
  3511                           	
  3512                           l1726:; BSR set to: 1
  3513  0004A6                     
  3514                           ;main.c: 169:                     move(&motorL,&motorR,~(path[i]));
  3515                           		movlw	low(_motorL)
  3516  0004A6  0EDA               	movwf	((c:move@mL)),c
  3517  0004A8  6E26               	movlw	high(_motorL)
  3518  0004AA  0E01               	movwf	((c:move@mL+1)),c
  3519  0004AC  6E27               
  3520                           		movlw	low(_motorR)
  3521  0004AE  0ED1               	movwf	((c:move@mR)),c
  3522  0004B0  6E28               	movlw	high(_motorR)
  3523  0004B2  0E01               	movwf	((c:move@mR+1)),c
  3524  0004B4  6E29               
  3525                           	movf	((main@i))&0ffh,w
  3526  0004B6  51CD               	mullw	01h
  3527  0004B8  0D01               	movlw	low(main@path)
  3528  0004BA  0E00               	addwf	(prodl),c,w
  3529  0004BC  24F3               	movwf	c:fsr2l
  3530  0004BE  6ED9               	movlw	high(main@path)
  3531  0004C0  0E01               	addwfc	prod+1,w
  3532  0004C2  20F4               	movwf	1+c:fsr2l
  3533  0004C4  6EDA               	movf	indf2,w
  3534  0004C6  50DF               	xorlw	0ffh
  3535  0004C8  0AFF               	movwf	((c:move@dir)),c
  3536  0004CA  6E2A               	call	_move	;wreg free
  3537  0004CC  EC6C  F006         	goto	l1728
  3538  0004D0  EF6A  F002         	line	170
  3539                           ;main.c: 170:                 }
  3540                           	
  3541                           l78:
  3542  0004D4                     	line	167
  3543                           	
  3544                           l1728:
  3545  0004D4                     ;main.c: 167:                 while (i > 0) {
  3546                           	movlb	1	; () banked
  3547  0004D4  0101               	movf	((main@i))&0ffh,w
  3548  0004D6  51CD               	btfss	status,2
  3549  0004D8  A4D8               	goto	u821
  3550  0004DA  EF71  F002         	goto	u820
  3551  0004DE  EF73  F002         u821:
  3552  0004E2                     	goto	l1724
  3553  0004E2  EF52  F002         u820:
  3554  0004E6                     	goto	l1730
  3555  0004E6  EF75  F002         	
  3556                           l80:; BSR set to: 1
  3557  0004EA                     
  3558                           	line	171
  3559                           	
  3560                           l1730:; BSR set to: 1
  3561  0004EA                     
  3562                           ;main.c: 171:                 stop(&motorL, &motorR);
  3563                           		movlw	low(_motorL)
  3564  0004EA  0EDA               	movwf	((c:stop@mL)),c
  3565  0004EC  6E21               	movlw	high(_motorL)
  3566  0004EE  0E01               	movwf	((c:stop@mL+1)),c
  3567  0004F0  6E22               
  3568                           		movlw	low(_motorR)
  3569  0004F2  0ED1               	movwf	((c:stop@mR)),c
  3570  0004F4  6E23               	movlw	high(_motorR)
  3571  0004F6  0E01               	movwf	((c:stop@mR+1)),c
  3572  0004F8  6E24               
  3573                           	call	_stop	;wreg free
  3574  0004FA  ECDF  F005         	line	174
  3575                           ;main.c: 174:             } else {
  3576                           	goto	l70
  3577  0004FE  EFE2  F001         	
  3578                           l77:
  3579  000502                     	line	176
  3580                           	
  3581                           l1732:
  3582  000502                     ;main.c: 176:                 move(&motorL, &motorR, 0b00);
  3583                           		movlw	low(_motorL)
  3584  000502  0EDA               	movwf	((c:move@mL)),c
  3585  000504  6E26               	movlw	high(_motorL)
  3586  000506  0E01               	movwf	((c:move@mL+1)),c
  3587  000508  6E27               
  3588                           		movlw	low(_motorR)
  3589  00050A  0ED1               	movwf	((c:move@mR)),c
  3590  00050C  6E28               	movlw	high(_motorR)
  3591  00050E  0E01               	movwf	((c:move@mR+1)),c
  3592  000510  6E29               
  3593                           	movlw	low(0)
  3594  000512  0E00               	movwf	((c:move@dir)),c
  3595  000514  6E2A               	call	_move	;wreg free
  3596  000516  EC6C  F006         	line	178
  3597                           	
  3598                           l1734:
  3599  00051A                     ;main.c: 178:                 path[i] = 0b00;
  3600                           	movlb	1	; () banked
  3601  00051A  0101               	movf	((main@i))&0ffh,w
  3602  00051C  51CD               	mullw	01h
  3603  00051E  0D01               	movlw	low(main@path)
  3604  000520  0E00               	addwf	(prodl),c,w
  3605  000522  24F3               	movwf	c:fsr2l
  3606  000524  6ED9               	movlw	high(main@path)
  3607  000526  0E01               	addwfc	prod+1,w
  3608  000528  20F4               	movwf	1+c:fsr2l
  3609  00052A  6EDA               	movlw	low(0)
  3610  00052C  0E00               	movwf	indf2
  3611  00052E  6EDF               	line	179
  3612                           	
  3613                           l1736:; BSR set to: 1
  3614  000530                     
  3615                           ;main.c: 179:                 i += 1;
  3616                           	incf	((main@i))&0ffh
  3617  000530  2BCD               	line	180
  3618                           	
  3619                           l1738:; BSR set to: 1
  3620  000532                     
  3621                           ;main.c: 180:                 findStrengths(&leftIR,&rightIR);
  3622                           		movlw	low(main@leftIR)
  3623  000532  0EC9               	movwf	((c:findStrengths@leftIR)),c
  3624  000534  6E13               	movlw	high(main@leftIR)
  3625  000536  0E01               	movwf	((c:findStrengths@leftIR+1)),c
  3626  000538  6E14               
  3627                           		movlw	low(main@rightIR)
  3628  00053A  0ECB               	movwf	((c:findStrengths@rightIR)),c
  3629  00053C  6E15               	movlw	high(main@rightIR)
  3630  00053E  0E01               	movwf	((c:findStrengths@rightIR+1)),c
  3631  000540  6E16               
  3632                           	call	_findStrengths	;wreg free
  3633  000542  EC08  F007         	line	183
  3634                           	
  3635                           l1740:
  3636  000546                     ;main.c: 183:                 if (leftIR > (rightIR + 200)) {
  3637                           	movlw	0C8h
  3638  000546  0EC8               	movlb	1	; () banked
  3639  000548  0101               	addwf	((main@rightIR))&0ffh,w
  3640  00054A  25CB               	movwf	(??_main+0+0)&0ffh,c
  3641  00054C  6E2B               	movlw	0
  3642  00054E  0E00               	addwfc	((main@rightIR+1))&0ffh,w
  3643  000550  21CC               	movwf	(??_main+0+0+1)&0ffh,c
  3644  000552  6E2C               		movf	((main@leftIR))&0ffh,w
  3645  000554  51C9               	subwf	(??_main+0+0),c,w
  3646  000556  5C2B               	movf	(??_main+0+1),c,w
  3647  000558  502C               	xorlw	80h
  3648  00055A  0A80               	movwf	(??_main+2+0)&0ffh,c
  3649  00055C  6E2D               	movf	((main@leftIR+1))&0ffh,w
  3650  00055E  51CA               	xorlw	80h
  3651  000560  0A80               	subwfb	(??_main+2+0)&0ffh,c,w
  3652  000562  582D               	btfsc	status,0
  3653  000564  B0D8               	goto	u831
  3654  000566  EFB7  F002         	goto	u830
  3655  00056A  EFB9  F002         
  3656                           u831:
  3657  00056E                     	goto	l1762
  3658  00056E  EF12  F003         u830:
  3659  000572                     	line	185
  3660                           	
  3661                           l1742:; BSR set to: 1
  3662  000572                     
  3663                           ;main.c: 185:                     c+=1;
  3664                           	incf	((main@c))&0ffh
  3665  000572  2BC8               	line	187
  3666                           ;main.c: 187:                     while (leftIR > (rightIR+200) && c<4){
  3667                           	goto	l1756
  3668  000574  EFED  F002         	
  3669                           l84:; BSR set to: 1
  3670  000578                     
  3671                           	line	189
  3672                           	
  3673                           l1744:; BSR set to: 1
  3674  000578                     
  3675                           ;main.c: 189:                         findStrengths(&leftIR,&rightIR);
  3676                           		movlw	low(main@leftIR)
  3677  000578  0EC9               	movwf	((c:findStrengths@leftIR)),c
  3678  00057A  6E13               	movlw	high(main@leftIR)
  3679  00057C  0E01               	movwf	((c:findStrengths@leftIR+1)),c
  3680  00057E  6E14               
  3681                           		movlw	low(main@rightIR)
  3682  000580  0ECB               	movwf	((c:findStrengths@rightIR)),c
  3683  000582  6E15               	movlw	high(main@rightIR)
  3684  000584  0E01               	movwf	((c:findStrengths@rightIR+1)),c
  3685  000586  6E16               
  3686                           	call	_findStrengths	;wreg free
  3687  000588  EC08  F007         	line	191
  3688                           	
  3689                           l1746:
  3690  00058C                     ;main.c: 191:                         if (c==3){
  3691                           		movlw	3
  3692  00058C  0E03               	movlb	1	; () banked
  3693  00058E  0101               	xorwf	((main@c))&0ffh,w
  3694  000590  19C8               	btfss	status,2
  3695  000592  A4D8               	goto	u841
  3696  000594  EFCE  F002         	goto	u840
  3697  000598  EFD0  F002         
  3698                           u841:
  3699  00059C                     	goto	l1754
  3700  00059C  EFEA  F002         u840:
  3701  0005A0                     	line	193
  3702                           	
  3703                           l1748:; BSR set to: 1
  3704  0005A0                     
  3705                           ;main.c: 193:                             move(&motorL,&motorR,0b10);
  3706                           		movlw	low(_motorL)
  3707  0005A0  0EDA               	movwf	((c:move@mL)),c
  3708  0005A2  6E26               	movlw	high(_motorL)
  3709  0005A4  0E01               	movwf	((c:move@mL+1)),c
  3710  0005A6  6E27               
  3711                           		movlw	low(_motorR)
  3712  0005A8  0ED1               	movwf	((c:move@mR)),c
  3713  0005AA  6E28               	movlw	high(_motorR)
  3714  0005AC  0E01               	movwf	((c:move@mR+1)),c
  3715  0005AE  6E29               
  3716                           	movlw	low(02h)
  3717  0005B0  0E02               	movwf	((c:move@dir)),c
  3718  0005B2  6E2A               	call	_move	;wreg free
  3719  0005B4  EC6C  F006         	line	194
  3720                           	
  3721                           l1750:
  3722  0005B8                     ;main.c: 194:                             path[i] = 0b10;
  3723                           	movlb	1	; () banked
  3724  0005B8  0101               	movf	((main@i))&0ffh,w
  3725  0005BA  51CD               	mullw	01h
  3726  0005BC  0D01               	movlw	low(main@path)
  3727  0005BE  0E00               	addwf	(prodl),c,w
  3728  0005C0  24F3               	movwf	c:fsr2l
  3729  0005C2  6ED9               	movlw	high(main@path)
  3730  0005C4  0E01               	addwfc	prod+1,w
  3731  0005C6  20F4               	movwf	1+c:fsr2l
  3732  0005C8  6EDA               	movlw	low(02h)
  3733  0005CA  0E02               	movwf	indf2
  3734  0005CC  6EDF               	line	195
  3735                           	
  3736                           l1752:; BSR set to: 1
  3737  0005CE                     
  3738                           ;main.c: 195:                             i +=1;
  3739                           	incf	((main@i))&0ffh
  3740  0005CE  2BCD               	goto	l1754
  3741  0005D0  EFEA  F002         	line	196
  3742                           ;main.c: 196:                         }
  3743                           	
  3744                           l85:; BSR set to: 1
  3745  0005D4                     
  3746                           	line	199
  3747                           	
  3748                           l1754:; BSR set to: 1
  3749  0005D4                     
  3750                           ;main.c: 199:                         c+=1;
  3751                           	incf	((main@c))&0ffh
  3752  0005D4  2BC8               	goto	l1756
  3753  0005D6  EFED  F002         	line	200
  3754                           ;main.c: 200:                     }
  3755                           	
  3756                           l83:; BSR set to: 1
  3757  0005DA                     
  3758                           	line	187
  3759                           	
  3760                           l1756:; BSR set to: 1
  3761  0005DA                     
  3762                           ;main.c: 187:                     while (leftIR > (rightIR+200) && c<4){
  3763                           	movlw	0C8h
  3764  0005DA  0EC8               	addwf	((main@rightIR))&0ffh,w
  3765  0005DC  25CB               	movwf	(??_main+0+0)&0ffh,c
  3766  0005DE  6E2B               	movlw	0
  3767  0005E0  0E00               	addwfc	((main@rightIR+1))&0ffh,w
  3768  0005E2  21CC               	movwf	(??_main+0+0+1)&0ffh,c
  3769  0005E4  6E2C               		movf	((main@leftIR))&0ffh,w
  3770  0005E6  51C9               	subwf	(??_main+0+0),c,w
  3771  0005E8  5C2B               	movf	(??_main+0+1),c,w
  3772  0005EA  502C               	xorlw	80h
  3773  0005EC  0A80               	movwf	(??_main+2+0)&0ffh,c
  3774  0005EE  6E2D               	movf	((main@leftIR+1))&0ffh,w
  3775  0005F0  51CA               	xorlw	80h
  3776  0005F2  0A80               	subwfb	(??_main+2+0)&0ffh,c,w
  3777  0005F4  582D               	btfsc	status,0
  3778  0005F6  B0D8               	goto	u851
  3779  0005F8  EF00  F003         	goto	u850
  3780  0005FC  EF02  F003         
  3781                           u851:
  3782  000600                     	goto	l1760
  3783  000600  EF0E  F003         u850:
  3784  000604                     	
  3785                           l1758:; BSR set to: 1
  3786  000604                     
  3787                           		movlw	04h-1
  3788  000604  0E03               	cpfsgt	((main@c))&0ffh
  3789  000606  65C8               	goto	u861
  3790  000608  EF08  F003         	goto	u860
  3791  00060C  EF0A  F003         
  3792                           u861:
  3793  000610                     	goto	l1744
  3794  000610  EFBC  F002         u860:
  3795  000614                     	goto	l1760
  3796  000614  EF0E  F003         	
  3797                           l87:; BSR set to: 1
  3798  000618                     
  3799                           	goto	l1760
  3800  000618  EF0E  F003         	
  3801                           l88:; BSR set to: 1
  3802  00061C                     
  3803                           	line	202
  3804                           	
  3805                           l1760:; BSR set to: 1
  3806  00061C                     
  3807                           ;main.c: 202:                     c=0;
  3808                           	movlw	low(0)
  3809  00061C  0E00               	movwf	((main@c))&0ffh
  3810  00061E  6FC8               	line	204
  3811                           ;main.c: 204:                 } else if ((leftIR+200) < rightIR) {
  3812                           	goto	l70
  3813  000620  EFE2  F001         	
  3814                           l82:; BSR set to: 1
  3815  000624                     
  3816                           	
  3817                           l1762:; BSR set to: 1
  3818  000624                     
  3819                           	movlw	0C8h
  3820  000624  0EC8               	addwf	((main@leftIR))&0ffh,w
  3821  000626  25C9               	movwf	(??_main+0+0)&0ffh,c
  3822  000628  6E2B               	movlw	0
  3823  00062A  0E00               	addwfc	((main@leftIR+1))&0ffh,w
  3824  00062C  21CA               	movwf	(??_main+0+0+1)&0ffh,c
  3825  00062E  6E2C               		movf	((main@rightIR))&0ffh,w
  3826  000630  51CB               	subwf	(??_main+0+0),c,w
  3827  000632  5C2B               	movf	(??_main+0+1),c,w
  3828  000634  502C               	xorlw	80h
  3829  000636  0A80               	movwf	(??_main+2+0)&0ffh,c
  3830  000638  6E2D               	movf	((main@rightIR+1))&0ffh,w
  3831  00063A  51CC               	xorlw	80h
  3832  00063C  0A80               	subwfb	(??_main+2+0)&0ffh,c,w
  3833  00063E  582D               	btfsc	status,0
  3834  000640  B0D8               	goto	u871
  3835  000642  EF25  F003         	goto	u870
  3836  000646  EF27  F003         
  3837                           u871:
  3838  00064A                     	goto	l70
  3839  00064A  EFE2  F001         u870:
  3840  00064E                     	line	206
  3841                           	
  3842                           l1764:; BSR set to: 1
  3843  00064E                     
  3844                           ;main.c: 206:                     c+=1;
  3845                           	incf	((main@c))&0ffh
  3846  00064E  2BC8               	line	207
  3847                           ;main.c: 207:                     while ((leftIR+200)<rightIR && c<4){
  3848                           	goto	l1778
  3849  000650  EF5B  F003         	
  3850                           l92:; BSR set to: 1
  3851  000654                     
  3852                           	line	208
  3853                           	
  3854                           l1766:; BSR set to: 1
  3855  000654                     
  3856                           ;main.c: 208:                         findStrengths(&leftIR, &rightIR);
  3857                           		movlw	low(main@leftIR)
  3858  000654  0EC9               	movwf	((c:findStrengths@leftIR)),c
  3859  000656  6E13               	movlw	high(main@leftIR)
  3860  000658  0E01               	movwf	((c:findStrengths@leftIR+1)),c
  3861  00065A  6E14               
  3862                           		movlw	low(main@rightIR)
  3863  00065C  0ECB               	movwf	((c:findStrengths@rightIR)),c
  3864  00065E  6E15               	movlw	high(main@rightIR)
  3865  000660  0E01               	movwf	((c:findStrengths@rightIR+1)),c
  3866  000662  6E16               
  3867                           	call	_findStrengths	;wreg free
  3868  000664  EC08  F007         	line	209
  3869                           	
  3870                           l1768:
  3871  000668                     ;main.c: 209:                         if (c==3){
  3872                           		movlw	3
  3873  000668  0E03               	movlb	1	; () banked
  3874  00066A  0101               	xorwf	((main@c))&0ffh,w
  3875  00066C  19C8               	btfss	status,2
  3876  00066E  A4D8               	goto	u881
  3877  000670  EF3C  F003         	goto	u880
  3878  000674  EF3E  F003         
  3879                           u881:
  3880  000678                     	goto	l1776
  3881  000678  EF58  F003         u880:
  3882  00067C                     	line	210
  3883                           	
  3884                           l1770:; BSR set to: 1
  3885  00067C                     
  3886                           ;main.c: 210:                             move(&motorL,&motorR,0b01);
  3887                           		movlw	low(_motorL)
  3888  00067C  0EDA               	movwf	((c:move@mL)),c
  3889  00067E  6E26               	movlw	high(_motorL)
  3890  000680  0E01               	movwf	((c:move@mL+1)),c
  3891  000682  6E27               
  3892                           		movlw	low(_motorR)
  3893  000684  0ED1               	movwf	((c:move@mR)),c
  3894  000686  6E28               	movlw	high(_motorR)
  3895  000688  0E01               	movwf	((c:move@mR+1)),c
  3896  00068A  6E29               
  3897                           	movlw	low(01h)
  3898  00068C  0E01               	movwf	((c:move@dir)),c
  3899  00068E  6E2A               	call	_move	;wreg free
  3900  000690  EC6C  F006         	line	211
  3901                           	
  3902                           l1772:
  3903  000694                     ;main.c: 211:                             path[i] = 0b01;
  3904                           	movlb	1	; () banked
  3905  000694  0101               	movf	((main@i))&0ffh,w
  3906  000696  51CD               	mullw	01h
  3907  000698  0D01               	movlw	low(main@path)
  3908  00069A  0E00               	addwf	(prodl),c,w
  3909  00069C  24F3               	movwf	c:fsr2l
  3910  00069E  6ED9               	movlw	high(main@path)
  3911  0006A0  0E01               	addwfc	prod+1,w
  3912  0006A2  20F4               	movwf	1+c:fsr2l
  3913  0006A4  6EDA               	movlw	low(01h)
  3914  0006A6  0E01               	movwf	indf2
  3915  0006A8  6EDF               	line	212
  3916                           	
  3917                           l1774:; BSR set to: 1
  3918  0006AA                     
  3919                           ;main.c: 212:                             i+=1;
  3920                           	incf	((main@i))&0ffh
  3921  0006AA  2BCD               	goto	l1776
  3922  0006AC  EF58  F003         	line	213
  3923                           ;main.c: 213:                         }
  3924                           	
  3925                           l93:; BSR set to: 1
  3926  0006B0                     
  3927                           	line	214
  3928                           	
  3929                           l1776:; BSR set to: 1
  3930  0006B0                     
  3931                           ;main.c: 214:                         c+=1;
  3932                           	incf	((main@c))&0ffh
  3933  0006B0  2BC8               	goto	l1778
  3934  0006B2  EF5B  F003         	line	215
  3935                           ;main.c: 215:                     }
  3936                           	
  3937                           l91:; BSR set to: 1
  3938  0006B6                     
  3939                           	line	207
  3940                           	
  3941                           l1778:; BSR set to: 1
  3942  0006B6                     
  3943                           ;main.c: 207:                     while ((leftIR+200)<rightIR && c<4){
  3944                           	movlw	0C8h
  3945  0006B6  0EC8               	addwf	((main@leftIR))&0ffh,w
  3946  0006B8  25C9               	movwf	(??_main+0+0)&0ffh,c
  3947  0006BA  6E2B               	movlw	0
  3948  0006BC  0E00               	addwfc	((main@leftIR+1))&0ffh,w
  3949  0006BE  21CA               	movwf	(??_main+0+0+1)&0ffh,c
  3950  0006C0  6E2C               		movf	((main@rightIR))&0ffh,w
  3951  0006C2  51CB               	subwf	(??_main+0+0),c,w
  3952  0006C4  5C2B               	movf	(??_main+0+1),c,w
  3953  0006C6  502C               	xorlw	80h
  3954  0006C8  0A80               	movwf	(??_main+2+0)&0ffh,c
  3955  0006CA  6E2D               	movf	((main@rightIR+1))&0ffh,w
  3956  0006CC  51CC               	xorlw	80h
  3957  0006CE  0A80               	subwfb	(??_main+2+0)&0ffh,c,w
  3958  0006D0  582D               	btfsc	status,0
  3959  0006D2  B0D8               	goto	u891
  3960  0006D4  EF6E  F003         	goto	u890
  3961  0006D8  EF70  F003         
  3962                           u891:
  3963  0006DC                     	goto	l1782
  3964  0006DC  EF7C  F003         u890:
  3965  0006E0                     	
  3966                           l1780:; BSR set to: 1
  3967  0006E0                     
  3968                           		movlw	04h-1
  3969  0006E0  0E03               	cpfsgt	((main@c))&0ffh
  3970  0006E2  65C8               	goto	u901
  3971  0006E4  EF76  F003         	goto	u900
  3972  0006E8  EF78  F003         
  3973                           u901:
  3974  0006EC                     	goto	l1766
  3975  0006EC  EF2A  F003         u900:
  3976  0006F0                     	goto	l1782
  3977  0006F0  EF7C  F003         	
  3978                           l95:; BSR set to: 1
  3979  0006F4                     
  3980                           	goto	l1782
  3981  0006F4  EF7C  F003         	
  3982                           l96:; BSR set to: 1
  3983  0006F8                     
  3984                           	line	216
  3985                           	
  3986                           l1782:; BSR set to: 1
  3987  0006F8                     
  3988                           ;main.c: 216:                     c=0;
  3989                           	movlw	low(0)
  3990  0006F8  0E00               	movwf	((main@c))&0ffh
  3991  0006FA  6FC8               	goto	l70
  3992  0006FC  EFE2  F001         	line	217
  3993                           ;main.c: 217:                 }
  3994                           	
  3995                           l90:; BSR set to: 1
  3996  000700                     
  3997                           	goto	l70
  3998  000700  EFE2  F001         	
  3999                           l89:; BSR set to: 1
  4000  000704                     
  4001                           	goto	l70
  4002  000704  EFE2  F001         	line	220
  4003                           ;main.c: 220:             }
  4004                           	
  4005                           l81:; BSR set to: 1
  4006  000708                     
  4007                           	line	225
  4008                           ;main.c: 225:         } else {
  4009                           	goto	l70
  4010  000708  EFE2  F001         	
  4011                           l71:; BSR set to: 1
  4012  00070C                     
  4013                           	line	230
  4014                           	
  4015                           l1784:; BSR set to: 1
  4016  00070C                     
  4017                           ;main.c: 230:         if (reset ==1){
  4018                           		decf	((_reset))&0ffh,w
  4019  00070C  05E3               	btfss	status,2
  4020  00070E  A4D8               	goto	u911
  4021  000710  EF8C  F003         	goto	u910
  4022  000714  EF8E  F003         
  4023                           u911:
  4024  000718                     	goto	l70
  4025  000718  EFE2  F001         u910:
  4026  00071C                     	line	231
  4027                           	
  4028                           l1786:; BSR set to: 1
  4029  00071C                     
  4030                           ;main.c: 231:                 stop(&motorL, &motorR);
  4031                           		movlw	low(_motorL)
  4032  00071C  0EDA               	movwf	((c:stop@mL)),c
  4033  00071E  6E21               	movlw	high(_motorL)
  4034  000720  0E01               	movwf	((c:stop@mL+1)),c
  4035  000722  6E22               
  4036                           		movlw	low(_motorR)
  4037  000724  0ED1               	movwf	((c:stop@mR)),c
  4038  000726  6E23               	movlw	high(_motorR)
  4039  000728  0E01               	movwf	((c:stop@mR+1)),c
  4040  00072A  6E24               
  4041                           	call	_stop	;wreg free
  4042  00072C  ECDF  F005         	line	232
  4043                           	
  4044                           l1788:
  4045  000730                     ;main.c: 232:                 reset=0;
  4046                           	movlw	low(0)
  4047  000730  0E00               	movlb	1	; () banked
  4048  000732  0101               	movwf	((_reset))&0ffh
  4049  000734  6FE3               	line	233
  4050                           	
  4051                           l1790:; BSR set to: 1
  4052  000736                     
  4053                           ;main.c: 233:                 LATDbits.LATD2=0;
  4054                           	bcf	((c:3980)),c,2	;volatile
  4055  000736  948C               	line	235
  4056                           ;main.c: 235:                 while (i>0){
  4057                           	goto	l1796
  4058  000738  EFAB  F003         	
  4059                           l100:; BSR set to: 1
  4060  00073C                     
  4061                           	line	236
  4062                           	
  4063                           l1792:; BSR set to: 1
  4064  00073C                     
  4065                           ;main.c: 236:                     --i;
  4066                           	decf	((main@i))&0ffh
  4067  00073C  07CD               	line	237
  4068                           	
  4069                           l1794:; BSR set to: 1
  4070  00073E                     
  4071                           ;main.c: 237:                     path[i]=0;
  4072                           	movf	((main@i))&0ffh,w
  4073  00073E  51CD               	mullw	01h
  4074  000740  0D01               	movlw	low(main@path)
  4075  000742  0E00               	addwf	(prodl),c,w
  4076  000744  24F3               	movwf	c:fsr2l
  4077  000746  6ED9               	movlw	high(main@path)
  4078  000748  0E01               	addwfc	prod+1,w
  4079  00074A  20F4               	movwf	1+c:fsr2l
  4080  00074C  6EDA               	movlw	low(0)
  4081  00074E  0E00               	movwf	indf2
  4082  000750  6EDF               	goto	l1796
  4083  000752  EFAB  F003         	line	238
  4084                           ;main.c: 238:                 }
  4085                           	
  4086                           l99:; BSR set to: 1
  4087  000756                     
  4088                           	line	235
  4089                           	
  4090                           l1796:; BSR set to: 1
  4091  000756                     
  4092                           ;main.c: 235:                 while (i>0){
  4093                           	movf	((main@i))&0ffh,w
  4094  000756  51CD               	btfss	status,2
  4095  000758  A4D8               	goto	u921
  4096  00075A  EFB1  F003         	goto	u920
  4097  00075E  EFB3  F003         u921:
  4098  000762                     	goto	l1792
  4099  000762  EF9E  F003         u920:
  4100  000766                     	goto	l1798
  4101  000766  EFB5  F003         	
  4102                           l101:; BSR set to: 1
  4103  00076A                     
  4104                           	line	239
  4105                           	
  4106                           l1798:; BSR set to: 1
  4107  00076A                     
  4108                           ;main.c: 239:                 leftIR=0;
  4109                           	movlw	high(0)
  4110  00076A  0E00               	movwf	((main@leftIR+1))&0ffh
  4111  00076C  6FCA               	movlw	low(0)
  4112  00076E  0E00               	movwf	((main@leftIR))&0ffh
  4113  000770  6FC9               	line	240
  4114                           ;main.c: 240:                 rightIR=0;
  4115                           	movlw	high(0)
  4116  000772  0E00               	movwf	((main@rightIR+1))&0ffh
  4117  000774  6FCC               	movlw	low(0)
  4118  000776  0E00               	movwf	((main@rightIR))&0ffh
  4119  000778  6FCB               	line	248
  4120                           	
  4121                           l1800:; BSR set to: 1
  4122  00077A                     
  4123                           ;main.c: 248:                 setMotorPWM(&motorL);
  4124                           		movlw	low(_motorL)
  4125  00077A  0EDA               	movwf	((c:setMotorPWM@m)),c
  4126  00077C  6E19               	movlw	high(_motorL)
  4127  00077E  0E01               	movwf	((c:setMotorPWM@m+1)),c
  4128  000780  6E1A               
  4129                           	call	_setMotorPWM	;wreg free
  4130  000782  ECD3  F003         	line	249
  4131                           	
  4132                           l1802:
  4133  000786                     ;main.c: 249:                 setMotorPWM(&motorR);
  4134                           		movlw	low(_motorR)
  4135  000786  0ED1               	movwf	((c:setMotorPWM@m)),c
  4136  000788  6E19               	movlw	high(_motorR)
  4137  00078A  0E01               	movwf	((c:setMotorPWM@m+1)),c
  4138  00078C  6E1A               
  4139                           	call	_setMotorPWM	;wreg free
  4140  00078E  ECD3  F003         	goto	l70
  4141  000792  EFE2  F001         	line	251
  4142                           ;main.c: 251:         }
  4143                           	
  4144                           l98:
  4145  000796                     	goto	l70
  4146  000796  EFE2  F001         	line	253
  4147                           ;main.c: 253:         }
  4148                           	
  4149                           l97:
  4150  00079A                     	goto	l70
  4151  00079A  EFE2  F001         	line	255
  4152                           ;main.c: 255:     }
  4153                           	
  4154                           l102:
  4155  00079E                     	goto	l70
  4156  00079E  EFE2  F001         	
  4157                           l103:
  4158  0007A2                     	line	256
  4159                           	
  4160                           l104:
  4161  0007A2                     	global	start
  4162                           	goto	start
  4163  0007A2  EF48  F000         	opt stack 0
  4164                           GLOBAL	__end_of_main
  4165                           	__end_of_main:
  4166  0007A6                     	signat	_main,89
  4167                           	global	_move
  4168                           
  4169 ;; *************** function _move *****************
  4170 ;; Defined at:
  4171 ;;		line 138 in file "PWM.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;  mL              2   37[COMRAM] PTR struct DC_motor
  4174 ;;		 -> motorL(9), 
  4175 ;;  mR              2   39[COMRAM] PTR struct DC_motor
  4176 ;;		 -> motorR(9), 
  4177 ;;  dir             1   41[COMRAM] unsigned char 
  4178 ;; Auto vars:     Size  Location     Type
  4179 ;;		None
  4180 ;; Return value:  Size  Location     Type
  4181 ;;                  1    wreg      void 
  4182 ;; Registers used:
  4183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4184 ;; Tracked objects:
  4185 ;;		On entry : 0/0
  4186 ;;		On exit  : 0/0
  4187 ;;		Unchanged: 0/0
  4188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4189 ;;      Params:         5       0       0       0
  4190 ;;      Locals:         0       0       0       0
  4191 ;;      Temps:          0       0       0       0
  4192 ;;      Totals:         5       0       0       0
  4193 ;;Total ram usage:        5 bytes
  4194 ;; Hardware stack levels used:    1
  4195 ;; Hardware stack levels required when called:   10
  4196 ;; This function calls:
  4197 ;;		_setMotorsFullSpeed
  4198 ;;		_stop
  4199 ;; This function is called by:
  4200 ;;		_main
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           psect	text1,class=CODE,space=0,reloc=2,group=0
  4204                           	file	"PWM.c"
  4205                           	line	138
  4206                           global __ptext1
  4207                           __ptext1:
  4208  000CD8                     psect	text1
  4209                           	file	"PWM.c"
  4210                           	line	138
  4211                           	global	__size_of_move
  4212                           	__size_of_move	equ	__end_of_move-_move
  4213  0000                     	
  4214                           _move:
  4215  000CD8                     ;incstack = 0
  4216                           	opt	stack 20
  4217                           	line	139
  4218                           	
  4219                           l1600:
  4220  000CD8                     	lfsr	2,01h
  4221  000CD8  EE20 F001          	movf	((c:move@mL)),c,w
  4222  000CDC  5026               	addwf	fsr2l
  4223  000CDE  26D9               	movf	((c:move@mL+1)),c,w
  4224  000CE0  5027               	addwfc	fsr2h
  4225  000CE2  22DA               	bcf	status,0
  4226  000CE4  90D8               	rrcf	((c:move@dir)),c,w
  4227  000CE6  302A               	andlw	low(01h)
  4228  000CE8  0B01               	movwf	indf2,c
  4229  000CEA  6EDF               
  4230                           	line	140
  4231                           	lfsr	2,01h
  4232  000CEC  EE20 F001          	movf	((c:move@mR)),c,w
  4233  000CF0  5028               	addwf	fsr2l
  4234  000CF2  26D9               	movf	((c:move@mR+1)),c,w
  4235  000CF4  5029               	addwfc	fsr2h
  4236  000CF6  22DA               	movf	((c:move@dir)),c,w
  4237  000CF8  502A               	andlw	low(01h)
  4238  000CFA  0B01               	movwf	indf2,c
  4239  000CFC  6EDF               
  4240                           	line	141
  4241                           	
  4242                           l1602:
  4243  000CFE                     		movff	(c:move@mL),(c:setMotorsFullSpeed@mL)
  4244  000CFE  C026  F021         	movff	(c:move@mL+1),(c:setMotorsFullSpeed@mL+1)
  4245  000D02  C027  F022         
  4246                           		movff	(c:move@mR),(c:setMotorsFullSpeed@mR)
  4247  000D06  C028  F023         	movff	(c:move@mR+1),(c:setMotorsFullSpeed@mR+1)
  4248  000D0A  C029  F024         
  4249                           	call	_setMotorsFullSpeed	;wreg free
  4250  000D0E  EC0F  F006         	line	142
  4251                           	
  4252                           l1604:
  4253  000D12                     		movff	(c:move@mL),(c:stop@mL)
  4254  000D12  C026  F021         	movff	(c:move@mL+1),(c:stop@mL+1)
  4255  000D16  C027  F022         
  4256                           		movff	(c:move@mR),(c:stop@mR)
  4257  000D1A  C028  F023         	movff	(c:move@mR+1),(c:stop@mR+1)
  4258  000D1E  C029  F024         
  4259                           	call	_stop	;wreg free
  4260  000D22  ECDF  F005         	line	143
  4261                           	
  4262                           l220:
  4263  000D26                     	return	;funcret
  4264  000D26  0012               	opt stack 0
  4265                           GLOBAL	__end_of_move
  4266                           	__end_of_move:
  4267  000D28                     	signat	_move,12409
  4268                           	global	_stop
  4269                           
  4270 ;; *************** function _stop *****************
  4271 ;; Defined at:
  4272 ;;		line 124 in file "PWM.c"
  4273 ;; Parameters:    Size  Location     Type
  4274 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  4275 ;;		 -> motorL(9), 
  4276 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  4277 ;;		 -> motorR(9), 
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;		None
  4280 ;; Return value:  Size  Location     Type
  4281 ;;                  1    wreg      void 
  4282 ;; Registers used:
  4283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4289 ;;      Params:         4       0       0       0
  4290 ;;      Locals:         0       0       0       0
  4291 ;;      Temps:          1       0       0       0
  4292 ;;      Totals:         5       0       0       0
  4293 ;;Total ram usage:        5 bytes
  4294 ;; Hardware stack levels used:    1
  4295 ;; Hardware stack levels required when called:    9
  4296 ;; This function calls:
  4297 ;;		_setMotorPWM
  4298 ;; This function is called by:
  4299 ;;		_main
  4300 ;;		_move
  4301 ;; This function uses a non-reentrant model
  4302 ;;
  4303                           psect	text2,class=CODE,space=0,reloc=2,group=0
  4304                           	line	124
  4305                           global __ptext2
  4306                           __ptext2:
  4307  000BBE                     psect	text2
  4308                           	file	"PWM.c"
  4309                           	line	124
  4310                           	global	__size_of_stop
  4311                           	__size_of_stop	equ	__end_of_stop-_stop
  4312  0000                     	
  4313                           _stop:
  4314  000BBE                     ;incstack = 0
  4315                           	opt	stack 21
  4316                           	line	126
  4317                           	
  4318                           l1482:
  4319  000BBE                     	goto	l1492
  4320  000BBE  EF00  F006         	
  4321                           l215:
  4322  000BC2                     	line	127
  4323                           	
  4324                           l1484:
  4325  000BC2                     		movff	(c:stop@mL),(c:setMotorPWM@m)
  4326  000BC2  C021  F019         	movff	(c:stop@mL+1),(c:setMotorPWM@m+1)
  4327  000BC6  C022  F01A         
  4328                           	call	_setMotorPWM	;wreg free
  4329  000BCA  ECD3  F003         	line	128
  4330                           		movff	(c:stop@mR),(c:setMotorPWM@m)
  4331  000BCE  C023  F019         	movff	(c:stop@mR+1),(c:setMotorPWM@m+1)
  4332  000BD2  C024  F01A         
  4333                           	call	_setMotorPWM	;wreg free
  4334  000BD6  ECD3  F003         	line	129
  4335                           	
  4336                           l1486:
  4337  000BDA                     	movff	(c:stop@mR),fsr2l
  4338  000BDA  C023  FFD9         	movff	(c:stop@mR+1),fsr2h
  4339  000BDE  C024  FFDA         	decf	indf2
  4340  000BE2  06DF               
  4341                           	line	130
  4342                           	
  4343                           l1488:
  4344  000BE4                     	opt asmopt_push
  4345                           opt asmopt_off
  4346                           movlw	13
  4347  000BE4  0E0D               movwf	(??_stop+0+0)&0ffh,c,f
  4348  000BE6  6E25               	movlw	252
  4349  000BE8  0EFC               u1017:
  4350  000BEA                     decfsz	wreg,f
  4351  000BEA  2EE8               	bra	u1017
  4352  000BEC  D7FE               	decfsz	(??_stop+0+0)&0ffh,c,f
  4353  000BEE  2E25               	bra	u1017
  4354  000BF0  D7FC               opt asmopt_pop
  4355                           
  4356                           	line	131
  4357                           	
  4358                           l1490:
  4359  000BF2                     	movff	(c:stop@mL),fsr2l
  4360  000BF2  C021  FFD9         	movff	(c:stop@mL+1),fsr2h
  4361  000BF6  C022  FFDA         	decf	indf2
  4362  000BFA  06DF               
  4363                           	goto	l1492
  4364  000BFC  EF00  F006         	
  4365                           l214:
  4366  000C00                     	
  4367                           l1492:
  4368  000C00                     	movff	(c:stop@mL),fsr2l
  4369  000C00  C021  FFD9         	movff	(c:stop@mL+1),fsr2h
  4370  000C04  C022  FFDA         	movf	indf2,w
  4371  000C08  50DF               	btfss	status,2
  4372  000C0A  A4D8               	goto	u611
  4373  000C0C  EF0A  F006         	goto	u610
  4374  000C10  EF0C  F006         u611:
  4375  000C14                     	goto	l1484
  4376  000C14  EFE1  F005         u610:
  4377  000C18                     	goto	l217
  4378  000C18  EF0E  F006         	
  4379                           l216:
  4380  000C1C                     	line	132
  4381                           	
  4382                           l217:
  4383  000C1C                     	return	;funcret
  4384  000C1C  0012               	opt stack 0
  4385                           GLOBAL	__end_of_stop
  4386                           	__end_of_stop:
  4387  000C1E                     	signat	_stop,8313
  4388                           	global	_setMotorsFullSpeed
  4389                           
  4390 ;; *************** function _setMotorsFullSpeed *****************
  4391 ;; Defined at:
  4392 ;;		line 110 in file "PWM.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  4395 ;;		 -> motorL(9), 
  4396 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  4397 ;;		 -> motorR(9), 
  4398 ;; Auto vars:     Size  Location     Type
  4399 ;;		None
  4400 ;; Return value:  Size  Location     Type
  4401 ;;                  1    wreg      void 
  4402 ;; Registers used:
  4403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4404 ;; Tracked objects:
  4405 ;;		On entry : 0/0
  4406 ;;		On exit  : 0/0
  4407 ;;		Unchanged: 0/0
  4408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4409 ;;      Params:         4       0       0       0
  4410 ;;      Locals:         0       0       0       0
  4411 ;;      Temps:          1       0       0       0
  4412 ;;      Totals:         5       0       0       0
  4413 ;;Total ram usage:        5 bytes
  4414 ;; Hardware stack levels used:    1
  4415 ;; Hardware stack levels required when called:    9
  4416 ;; This function calls:
  4417 ;;		_setMotorPWM
  4418 ;; This function is called by:
  4419 ;;		_move
  4420 ;; This function uses a non-reentrant model
  4421 ;;
  4422                           psect	text3,class=CODE,space=0,reloc=2,group=0
  4423                           	line	110
  4424                           global __ptext3
  4425                           __ptext3:
  4426  000C1E                     psect	text3
  4427                           	file	"PWM.c"
  4428                           	line	110
  4429                           	global	__size_of_setMotorsFullSpeed
  4430                           	__size_of_setMotorsFullSpeed	equ	__end_of_setMotorsFullSpeed-_setMotorsFullSpeed
  4431  0000                     	
  4432                           _setMotorsFullSpeed:
  4433  000C1E                     ;incstack = 0
  4434                           	opt	stack 20
  4435                           	line	112
  4436                           	
  4437                           l1500:
  4438  000C1E                     	goto	l1510
  4439  000C1E  EF30  F006         	
  4440                           l209:
  4441  000C22                     	line	113
  4442                           	
  4443                           l1502:
  4444  000C22                     ;PWM.c: 113: 
  4445                           		movff	(c:setMotorsFullSpeed@mL),(c:setMotorPWM@m)
  4446  000C22  C021  F019         	movff	(c:setMotorsFullSpeed@mL+1),(c:setMotorPWM@m+1)
  4447  000C26  C022  F01A         
  4448                           	call	_setMotorPWM	;wreg free
  4449  000C2A  ECD3  F003         	line	114
  4450                           ;PWM.c: 114:     void move(struct DC_motor *mL,struct DC_motor *mR, char dir){
  4451                           		movff	(c:setMotorsFullSpeed@mR),(c:setMotorPWM@m)
  4452  000C2E  C023  F019         	movff	(c:setMotorsFullSpeed@mR+1),(c:setMotorPWM@m+1)
  4453  000C32  C024  F01A         
  4454                           	call	_setMotorPWM	;wreg free
  4455  000C36  ECD3  F003         	line	115
  4456                           	
  4457                           l1504:
  4458  000C3A                     ;PWM.c: 115:         mL->direction=(dir>>1)&(0b01);
  4459                           	movff	(c:setMotorsFullSpeed@mR),fsr2l
  4460  000C3A  C023  FFD9         	movff	(c:setMotorsFullSpeed@mR+1),fsr2h
  4461  000C3E  C024  FFDA         	incf	indf2
  4462  000C42  2ADF               
  4463                           	line	116
  4464                           	
  4465                           l1506:
  4466  000C44                     ;PWM.c: 116:         mR->direction=(dir)&(0b01);
  4467                           	opt asmopt_push
  4468                           opt asmopt_off
  4469                           movlw	13
  4470  000C44  0E0D               movwf	(??_setMotorsFullSpeed+0+0)&0ffh,c,f
  4471  000C46  6E25               	movlw	252
  4472  000C48  0EFC               u1027:
  4473  000C4A                     decfsz	wreg,f
  4474  000C4A  2EE8               	bra	u1027
  4475  000C4C  D7FE               	decfsz	(??_setMotorsFullSpeed+0+0)&0ffh,c,f
  4476  000C4E  2E25               	bra	u1027
  4477  000C50  D7FC               opt asmopt_pop
  4478                           
  4479                           	line	117
  4480                           	
  4481                           l1508:
  4482  000C52                     ;PWM.c: 117:         setMotorsFullSpeed(mL,mR);
  4483                           	movff	(c:setMotorsFullSpeed@mL),fsr2l
  4484  000C52  C021  FFD9         	movff	(c:setMotorsFullSpeed@mL+1),fsr2h
  4485  000C56  C022  FFDA         	incf	indf2
  4486  000C5A  2ADF               
  4487                           	goto	l1510
  4488  000C5C  EF30  F006         	
  4489                           l208:
  4490  000C60                     	
  4491                           l1510:
  4492  000C60                     	movff	(c:setMotorsFullSpeed@mL),fsr2l
  4493  000C60  C021  FFD9         	movff	(c:setMotorsFullSpeed@mL+1),fsr2h
  4494  000C64  C022  FFDA         		movlw	051h-1
  4495  000C68  0E50               	cpfsgt	indf2
  4496  000C6A  64DF               	goto	u631
  4497  000C6C  EF3A  F006         	goto	u630
  4498  000C70  EF3C  F006         
  4499                           u631:
  4500  000C74                     	goto	l1502
  4501  000C74  EF11  F006         u630:
  4502  000C78                     	goto	l211
  4503  000C78  EF3E  F006         	
  4504                           l210:
  4505  000C7C                     	line	118
  4506                           	
  4507                           l211:
  4508  000C7C                     	return	;funcret
  4509  000C7C  0012               	opt stack 0
  4510                           GLOBAL	__end_of_setMotorsFullSpeed
  4511                           	__end_of_setMotorsFullSpeed:
  4512  000C7E                     	signat	_setMotorsFullSpeed,8313
  4513                           	global	_setMotorPWM
  4514                           
  4515 ;; *************** function _setMotorPWM *****************
  4516 ;; Defined at:
  4517 ;;		line 81 in file "PWM.c"
  4518 ;; Parameters:    Size  Location     Type
  4519 ;;  m               2   24[COMRAM] PTR struct DC_motor
  4520 ;;		 -> motorL(9), motorR(9), 
  4521 ;; Auto vars:     Size  Location     Type
  4522 ;;  PWMduty         2   30[COMRAM] int 
  4523 ;; Return value:  Size  Location     Type
  4524 ;;                  1    wreg      void 
  4525 ;; Registers used:
  4526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4527 ;; Tracked objects:
  4528 ;;		On entry : 0/0
  4529 ;;		On exit  : 0/0
  4530 ;;		Unchanged: 0/0
  4531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4532 ;;      Params:         2       0       0       0
  4533 ;;      Locals:         2       0       0       0
  4534 ;;      Temps:          4       0       0       0
  4535 ;;      Totals:         8       0       0       0
  4536 ;;Total ram usage:        8 bytes
  4537 ;; Hardware stack levels used:    1
  4538 ;; Hardware stack levels required when called:    8
  4539 ;; This function calls:
  4540 ;;		___wmul
  4541 ;; This function is called by:
  4542 ;;		_main
  4543 ;;		_setMotorsFullSpeed
  4544 ;;		_stop
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547                           psect	text4,class=CODE,space=0,reloc=2,group=0
  4548                           	line	81
  4549                           global __ptext4
  4550                           __ptext4:
  4551  0007A6                     psect	text4
  4552                           	file	"PWM.c"
  4553                           	line	81
  4554                           	global	__size_of_setMotorPWM
  4555                           	__size_of_setMotorPWM	equ	__end_of_setMotorPWM-_setMotorPWM
  4556  0000                     	
  4557                           _setMotorPWM:
  4558  0007A6                     ;incstack = 0
  4559                           	opt	stack 21
  4560                           	line	83
  4561                           	
  4562                           l1442:
  4563  0007A6                     ;PWM.c: 83: 
  4564                           	movff	(c:setMotorPWM@m),fsr2l
  4565  0007A6  C019  FFD9         	movff	(c:setMotorPWM@m+1),fsr2h
  4566  0007AA  C01A  FFDA         	movf	indf2,w
  4567  0007AE  50DF               	movwf	(??_setMotorPWM+0+0)&0ffh,c
  4568  0007B0  6E1B               	movf	((??_setMotorPWM+0+0)),c,w
  4569  0007B2  501B               	movwf	((c:___wmul@multiplier)),c
  4570  0007B4  6E13               	clrf	((c:___wmul@multiplier+1)),c
  4571  0007B6  6A14               	lfsr	2,07h
  4572  0007B8  EE20 F007          	movf	((c:setMotorPWM@m)),c,w
  4573  0007BC  5019               	addwf	fsr2l
  4574  0007BE  26D9               	movf	((c:setMotorPWM@m+1)),c,w
  4575  0007C0  501A               	addwfc	fsr2h
  4576  0007C2  22DA               	movff	postinc2,(c:___wmul@multiplicand)
  4577  0007C4  CFDE F015          	movff	postdec2,(c:___wmul@multiplicand+1)
  4578  0007C8  CFDD F016          	call	___wmul	;wreg free
  4579  0007CC  ECA1  F007         	movff	0+?___wmul,(c:setMotorPWM@PWMduty)
  4580  0007D0  C013  F01F         	movff	1+?___wmul,(c:setMotorPWM@PWMduty+1)
  4581  0007D4  C014  F020         	line	85
  4582                           	
  4583                           l1444:
  4584  0007D8                     ;PWM.c: 85: 
  4585                           	lfsr	2,01h
  4586  0007D8  EE20 F001          	movf	((c:setMotorPWM@m)),c,w
  4587  0007DC  5019               	addwf	fsr2l
  4588  0007DE  26D9               	movf	((c:setMotorPWM@m+1)),c,w
  4589  0007E0  501A               	addwfc	fsr2h
  4590  0007E2  22DA               	movf	indf2,w
  4591  0007E4  50DF               	btfsc	status,2
  4592  0007E6  B4D8               	goto	u521
  4593  0007E8  EFF8  F003         	goto	u520
  4594  0007EC  EFFA  F003         u521:
  4595  0007F0                     	goto	l1450
  4596  0007F0  EF30  F004         u520:
  4597  0007F4                     	line	87
  4598                           	
  4599                           l1446:
  4600  0007F4                     ;PWM.c: 87: 
  4601                           	movff	(c:setMotorPWM@PWMduty),??_setMotorPWM+0+0
  4602  0007F4  C01F  F01B         	movff	(c:setMotorPWM@PWMduty+1),??_setMotorPWM+0+0+1
  4603  0007F8  C020  F01C         	movlw	09h
  4604  0007FC  0E09               	movwf	(??_setMotorPWM+2+0)&0ffh,c
  4605  0007FE  6E1D               u535:
  4606  000800                     	rlcf	(??_setMotorPWM+0+1),c,w
  4607  000800  341C               	rrcf	(??_setMotorPWM+0+1),c
  4608  000802  321C               	rrcf	(??_setMotorPWM+0+0),c
  4609  000804  321B               	decfsz	(??_setMotorPWM+2+0)&0ffh,c
  4610  000806  2E1D               	goto	u535
  4611  000808  EF00  F004         	movf	((c:setMotorPWM@PWMduty)),c,w
  4612  00080C  501F               	addwf	(??_setMotorPWM+0+0),c
  4613  00080E  261B               	movf	((c:setMotorPWM@PWMduty+1)),c,w
  4614  000810  5020               	addwfc	(??_setMotorPWM+0+1),c
  4615  000812  221C               	movlw	07h
  4616  000814  0E07               	movwf	(??_setMotorPWM+3+0)&0ffh,c
  4617  000816  6E1E               u545:
  4618  000818                     	rlcf	(??_setMotorPWM+0+1),c,w
  4619  000818  341C               	rrcf	(??_setMotorPWM+0+1),c
  4620  00081A  321C               	rrcf	(??_setMotorPWM+0+0),c
  4621  00081C  321B               	decfsz	(??_setMotorPWM+3+0)&0ffh,c
  4622  00081E  2E1E               	goto	u545
  4623  000820  EF0C  F004         	movff	??_setMotorPWM+0+0,(c:setMotorPWM@PWMduty)
  4624  000824  C01B  F01F         	movff	??_setMotorPWM+0+1,(c:setMotorPWM@PWMduty+1)
  4625  000828  C01C  F020         	line	88
  4626                           	
  4627                           l1448:
  4628  00082C                     ;PWM.c: 88:     for (mL->power; (mL->power)<=80;(mL->power)++) {
  4629                           	lfsr	2,07h
  4630  00082C  EE20 F007          	movf	((c:setMotorPWM@m)),c,w
  4631  000830  5019               	addwf	fsr2l
  4632  000832  26D9               	movf	((c:setMotorPWM@m+1)),c,w
  4633  000834  501A               	addwfc	fsr2h
  4634  000836  22DA               	movff	postinc2,??_setMotorPWM+0+0
  4635  000838  CFDE F01B          	movff	postdec2,??_setMotorPWM+0+0+1
  4636  00083C  CFDD F01C          	movff	(c:setMotorPWM@PWMduty),??_setMotorPWM+2+0
  4637  000840  C01F  F01D         	movff	(c:setMotorPWM@PWMduty+1),??_setMotorPWM+2+0+1
  4638  000844  C020  F01E         	comf	(??_setMotorPWM+2+0),c
  4639  000848  1E1D               	comf	(??_setMotorPWM+2+1),c
  4640  00084A  1E1E               	infsnz	(??_setMotorPWM+2+0),c
  4641  00084C  4A1D               	incf	(??_setMotorPWM+2+1),c
  4642  00084E  2A1E               	movf	(??_setMotorPWM+0+0),c,w
  4643  000850  501B               	addwf	(??_setMotorPWM+2+0),c,w
  4644  000852  241D               	movwf	((c:setMotorPWM@PWMduty)),c
  4645  000854  6E1F               	movf	(??_setMotorPWM+0+1),c,w
  4646  000856  501C               	addwfc	(??_setMotorPWM+2+1),c,w
  4647  000858  201E               	movwf	1+((c:setMotorPWM@PWMduty)),c
  4648  00085A  6E20               	line	89
  4649                           ;PWM.c: 89:         setMotorPWM(mL);
  4650                           	goto	l1452
  4651  00085C  EF4E  F004         	line	90
  4652                           ;PWM.c: 90:         setMotorPWM(mR);
  4653                           	
  4654                           l201:
  4655  000860                     	line	92
  4656                           	
  4657                           l1450:
  4658  000860                     ;PWM.c: 92:        _delay((unsigned long)((5)*(8000000/4000.0)));
  4659                           	movff	(c:setMotorPWM@PWMduty),??_setMotorPWM+0+0
  4660  000860  C01F  F01B         	movff	(c:setMotorPWM@PWMduty+1),??_setMotorPWM+0+0+1
  4661  000864  C020  F01C         	movlw	09h
  4662  000868  0E09               	movwf	(??_setMotorPWM+2+0)&0ffh,c
  4663  00086A  6E1D               u555:
  4664  00086C                     	rlcf	(??_setMotorPWM+0+1),c,w
  4665  00086C  341C               	rrcf	(??_setMotorPWM+0+1),c
  4666  00086E  321C               	rrcf	(??_setMotorPWM+0+0),c
  4667  000870  321B               	decfsz	(??_setMotorPWM+2+0)&0ffh,c
  4668  000872  2E1D               	goto	u555
  4669  000874  EF36  F004         	movf	((c:setMotorPWM@PWMduty)),c,w
  4670  000878  501F               	addwf	(??_setMotorPWM+0+0),c
  4671  00087A  261B               	movf	((c:setMotorPWM@PWMduty+1)),c,w
  4672  00087C  5020               	addwfc	(??_setMotorPWM+0+1),c
  4673  00087E  221C               	movlw	07h
  4674  000880  0E07               	movwf	(??_setMotorPWM+3+0)&0ffh,c
  4675  000882  6E1E               u565:
  4676  000884                     	rlcf	(??_setMotorPWM+0+1),c,w
  4677  000884  341C               	rrcf	(??_setMotorPWM+0+1),c
  4678  000886  321C               	rrcf	(??_setMotorPWM+0+0),c
  4679  000888  321B               	decfsz	(??_setMotorPWM+3+0)&0ffh,c
  4680  00088A  2E1E               	goto	u565
  4681  00088C  EF42  F004         	movff	??_setMotorPWM+0+0,(c:setMotorPWM@PWMduty)
  4682  000890  C01B  F01F         	movff	??_setMotorPWM+0+1,(c:setMotorPWM@PWMduty+1)
  4683  000894  C01C  F020         	goto	l1452
  4684  000898  EF4E  F004         	line	93
  4685                           ;PWM.c: 93:     }
  4686                           	
  4687                           l202:
  4688  00089C                     	line	95
  4689                           	
  4690                           l1452:
  4691  00089C                     ;PWM.c: 95: 
  4692                           	movff	(c:setMotorPWM@PWMduty),??_setMotorPWM+0+0
  4693  00089C  C01F  F01B         	movff	(c:setMotorPWM@PWMduty+1),??_setMotorPWM+0+0+1
  4694  0008A0  C020  F01C         	bcf	status,0
  4695  0008A4  90D8               	rlcf	(??_setMotorPWM+0+0),c
  4696  0008A6  361B               	rlcf	(??_setMotorPWM+0+1),c
  4697  0008A8  361C               	bcf	status,0
  4698  0008AA  90D8               	rlcf	(??_setMotorPWM+0+0),c
  4699  0008AC  361B               	rlcf	(??_setMotorPWM+0+1),c
  4700  0008AE  361C               	movff	??_setMotorPWM+0+0,(c:setMotorPWM@PWMduty)
  4701  0008B0  C01B  F01F         	movff	??_setMotorPWM+0+1,(c:setMotorPWM@PWMduty+1)
  4702  0008B4  C01C  F020         	line	96
  4703                           	
  4704                           l1454:
  4705  0008B8                     ;PWM.c: 96: 
  4706                           	lfsr	2,02h
  4707  0008B8  EE20 F002          	movf	((c:setMotorPWM@m)),c,w
  4708  0008BC  5019               	addwf	fsr2l
  4709  0008BE  26D9               	movf	((c:setMotorPWM@m+1)),c,w
  4710  0008C0  501A               	addwfc	fsr2h
  4711  0008C2  22DA               	movff	postinc2,??_setMotorPWM+0+0
  4712  0008C4  CFDE F01B          	movff	postdec2,??_setMotorPWM+0+0+1
  4713  0008C8  CFDD F01C          	movff	??_setMotorPWM+0+0,fsr2l
  4714  0008CC  C01B  FFD9         	movff	??_setMotorPWM+0+1,fsr2h
  4715  0008D0  C01C  FFDA         	movff	(c:setMotorPWM@PWMduty),indf2
  4716  0008D4  C01F  FFDF         
  4717                           	line	97
  4718                           	
  4719                           l1456:
  4720  0008D8                     ;PWM.c: 97: 
  4721                           	lfsr	2,04h
  4722  0008D8  EE20 F004          	movf	((c:setMotorPWM@m)),c,w
  4723  0008DC  5019               	addwf	fsr2l
  4724  0008DE  26D9               	movf	((c:setMotorPWM@m+1)),c,w
  4725  0008E0  501A               	addwfc	fsr2h
  4726  0008E2  22DA               	movff	postinc2,??_setMotorPWM+0+0
  4727  0008E4  CFDE F01B          	movff	postdec2,??_setMotorPWM+0+0+1
  4728  0008E8  CFDD F01C          	movff	??_setMotorPWM+0+0,fsr2l
  4729  0008EC  C01B  FFD9         	movff	??_setMotorPWM+0+1,fsr2h
  4730  0008F0  C01C  FFDA         	movf	((c:setMotorPWM@PWMduty+1)),c,w
  4731  0008F4  5020               	andlw	low(03Fh)
  4732  0008F6  0B3F               	movwf	indf2,c
  4733  0008F8  6EDF               
  4734                           	line	99
  4735                           	
  4736                           l1458:
  4737  0008FA                     ;PWM.c: 99: 
  4738                           	lfsr	2,01h
  4739  0008FA  EE20 F001          	movf	((c:setMotorPWM@m)),c,w
  4740  0008FE  5019               	addwf	fsr2l
  4741  000900  26D9               	movf	((c:setMotorPWM@m+1)),c,w
  4742  000902  501A               	addwfc	fsr2h
  4743  000904  22DA               	movf	indf2,w
  4744  000906  50DF               	btfsc	status,2
  4745  000908  B4D8               	goto	u571
  4746  00090A  EF89  F004         	goto	u570
  4747  00090E  EF8B  F004         u571:
  4748  000912                     	goto	l1462
  4749  000912  EFA2  F004         u570:
  4750  000916                     	line	100
  4751                           	
  4752                           l1460:
  4753  000916                     ;PWM.c: 100: void stop(struct DC_motor *mL, struct DC_motor *mR) {
  4754                           	lfsr	2,06h
  4755  000916  EE20 F006          	movf	((c:setMotorPWM@m)),c,w
  4756  00091A  5019               	addwf	fsr2l
  4757  00091C  26D9               	movf	((c:setMotorPWM@m+1)),c,w
  4758  00091E  501A               	addwfc	fsr2h
  4759  000920  22DA               	movf	indf2,w
  4760  000922  50DF               	movwf	(??_setMotorPWM+0+0)&0ffh,c
  4761  000924  6E1B               	movlw	(01h)&0ffh
  4762  000926  0E01               	movwf	(??_setMotorPWM+1+0)&0ffh,c
  4763  000928  6E1C               	incf	((??_setMotorPWM+0+0)),c
  4764  00092A  2A1B               	goto	u584
  4765  00092C  EF9A  F004         u585:
  4766  000930                     	bcf	status,0
  4767  000930  90D8               	rlcf	((??_setMotorPWM+1+0)),c
  4768  000932  361C               u584:
  4769  000934                     	decfsz	((??_setMotorPWM+0+0)),c
  4770  000934  2E1B               	goto	u585
  4771  000936  EF98  F004         	movf	((??_setMotorPWM+1+0)),c,w
  4772  00093A  501C               	iorwf	((c:3978)),c,w	;volatile
  4773  00093C  108A               	movwf	((c:3978)),c	;volatile
  4774  00093E  6E8A               	line	101
  4775                           ;PWM.c: 101: 
  4776                           	goto	l205
  4777  000940  EFBA  F004         	
  4778                           l203:
  4779  000944                     	line	102
  4780                           	
  4781                           l1462:
  4782  000944                     ;PWM.c: 102:         for (mL->power; (mL->power)>0;(mL->power)--) {
  4783                           	lfsr	2,06h
  4784  000944  EE20 F006          	movf	((c:setMotorPWM@m)),c,w
  4785  000948  5019               	addwf	fsr2l
  4786  00094A  26D9               	movf	((c:setMotorPWM@m+1)),c,w
  4787  00094C  501A               	addwfc	fsr2h
  4788  00094E  22DA               	movf	indf2,w
  4789  000950  50DF               	movwf	(??_setMotorPWM+0+0)&0ffh,c
  4790  000952  6E1B               	movlw	(01h)&0ffh
  4791  000954  0E01               	movwf	(??_setMotorPWM+1+0)&0ffh,c
  4792  000956  6E1C               	incf	((??_setMotorPWM+0+0)),c
  4793  000958  2A1B               	goto	u594
  4794  00095A  EFB1  F004         u595:
  4795  00095E                     	bcf	status,0
  4796  00095E  90D8               	rlcf	((??_setMotorPWM+1+0)),c
  4797  000960  361C               u594:
  4798  000962                     	decfsz	((??_setMotorPWM+0+0)),c
  4799  000962  2E1B               	goto	u595
  4800  000964  EFAF  F004         	movf	((??_setMotorPWM+1+0)),c,w
  4801  000968  501C               	xorlw	0ffh
  4802  00096A  0AFF               	andwf	((c:3978)),c,w	;volatile
  4803  00096C  148A               	movwf	((c:3978)),c	;volatile
  4804  00096E  6E8A               	goto	l205
  4805  000970  EFBA  F004         	line	103
  4806                           ;PWM.c: 103:         setMotorPWM(mL);
  4807                           	
  4808                           l204:
  4809  000974                     	line	105
  4810                           	
  4811                           l205:
  4812  000974                     	return	;funcret
  4813  000974  0012               	opt stack 0
  4814                           GLOBAL	__end_of_setMotorPWM
  4815                           	__end_of_setMotorPWM:
  4816  000976                     	signat	_setMotorPWM,4217
  4817                           	global	___wmul
  4818                           
  4819 ;; *************** function ___wmul *****************
  4820 ;; Defined at:
  4821 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;  multiplier      2   18[COMRAM] unsigned int 
  4824 ;;  multiplicand    2   20[COMRAM] unsigned int 
  4825 ;; Auto vars:     Size  Location     Type
  4826 ;;  product         2   22[COMRAM] unsigned int 
  4827 ;; Return value:  Size  Location     Type
  4828 ;;                  2   18[COMRAM] unsigned int 
  4829 ;; Registers used:
  4830 ;;		wreg, status,2, status,0, prodl, prodh
  4831 ;; Tracked objects:
  4832 ;;		On entry : 0/0
  4833 ;;		On exit  : 0/0
  4834 ;;		Unchanged: 0/0
  4835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4836 ;;      Params:         4       0       0       0
  4837 ;;      Locals:         2       0       0       0
  4838 ;;      Temps:          0       0       0       0
  4839 ;;      Totals:         6       0       0       0
  4840 ;;Total ram usage:        6 bytes
  4841 ;; Hardware stack levels used:    1
  4842 ;; Hardware stack levels required when called:    7
  4843 ;; This function calls:
  4844 ;;		Nothing
  4845 ;; This function is called by:
  4846 ;;		_setMotorPWM
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           psect	text5,class=CODE,space=0,reloc=2,group=1
  4850                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
  4851                           	line	15
  4852                           global __ptext5
  4853                           __ptext5:
  4854  000F42                     psect	text5
  4855                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
  4856                           	line	15
  4857                           	global	__size_of___wmul
  4858                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  4859  0000                     	
  4860                           ___wmul:
  4861  000F42                     ;incstack = 0
  4862                           	opt	stack 21
  4863                           	line	37
  4864                           	
  4865                           l1430:
  4866  000F42                     	movf	((c:___wmul@multiplier)),c,w
  4867  000F42  5013               	mulwf	((c:___wmul@multiplicand)),c
  4868  000F44  0215               	movff	prodl,(c:___wmul@product)
  4869  000F46  CFF3 F017          	movff	prodh,(c:___wmul@product+1)
  4870  000F4A  CFF4 F018          	line	38
  4871                           	movf	((c:___wmul@multiplier)),c,w
  4872  000F4E  5013               	mulwf	(0+((c:___wmul@multiplicand)+01h)),c
  4873  000F50  0216               	movf	(prodl),c,w
  4874  000F52  50F3               	addwf	((c:___wmul@product+1)),c
  4875  000F54  2618               
  4876                           	line	39
  4877                           	movf	(0+((c:___wmul@multiplier)+01h)),c,w
  4878  000F56  5014               	mulwf	((c:___wmul@multiplicand)),c
  4879  000F58  0215               	movf	(prodl),c,w
  4880  000F5A  50F3               	addwf	((c:___wmul@product+1)),c
  4881  000F5C  2618               
  4882                           	line	52
  4883                           	
  4884                           l1432:
  4885  000F5E                     	movff	(c:___wmul@product),(c:?___wmul)
  4886  000F5E  C017  F013         	movff	(c:___wmul@product+1),(c:?___wmul+1)
  4887  000F62  C018  F014         	goto	l325
  4888  000F66  EFB5  F007         	
  4889                           l1434:
  4890  000F6A                     	line	53
  4891                           	
  4892                           l325:
  4893  000F6A                     	return	;funcret
  4894  000F6A  0012               	opt stack 0
  4895                           GLOBAL	__end_of___wmul
  4896                           	__end_of___wmul:
  4897  000F6C                     	signat	___wmul,8314
  4898                           	global	_initPWM
  4899                           
  4900 ;; *************** function _initPWM *****************
  4901 ;; Defined at:
  4902 ;;		line 30 in file "PWM.c"
  4903 ;; Parameters:    Size  Location     Type
  4904 ;;		None
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;		None
  4907 ;; Return value:  Size  Location     Type
  4908 ;;                  1    wreg      void 
  4909 ;; Registers used:
  4910 ;;		wreg, status,2
  4911 ;; Tracked objects:
  4912 ;;		On entry : 0/0
  4913 ;;		On exit  : 0/0
  4914 ;;		Unchanged: 0/0
  4915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4916 ;;      Params:         0       0       0       0
  4917 ;;      Locals:         0       0       0       0
  4918 ;;      Temps:          0       0       0       0
  4919 ;;      Totals:         0       0       0       0
  4920 ;;Total ram usage:        0 bytes
  4921 ;; Hardware stack levels used:    1
  4922 ;; Hardware stack levels required when called:    7
  4923 ;; This function calls:
  4924 ;;		Nothing
  4925 ;; This function is called by:
  4926 ;;		_main
  4927 ;; This function uses a non-reentrant model
  4928 ;;
  4929                           psect	text6,class=CODE,space=0,reloc=2,group=0
  4930                           	file	"PWM.c"
  4931                           	line	30
  4932                           global __ptext6
  4933                           __ptext6:
  4934  000C7E                     psect	text6
  4935                           	file	"PWM.c"
  4936                           	line	30
  4937                           	global	__size_of_initPWM
  4938                           	__size_of_initPWM	equ	__end_of_initPWM-_initPWM
  4939  0000                     	
  4940                           _initPWM:
  4941  000C7E                     ;incstack = 0
  4942                           	opt	stack 23
  4943                           	line	35
  4944                           	
  4945                           l1558:
  4946  000C7E                     ;PWM.c: 35:     PDC1L=0;
  4947                           	bcf	((c:3978)),c,0	;volatile
  4948  000C7E  908A               	line	36
  4949                           ;PWM.c: 36:     PDC1H=0;
  4950                           	bcf	((c:3987)),c,0	;volatile
  4951  000C80  9093               	line	37
  4952                           ;PWM.c: 37:     PDC2L=0;
  4953                           	bcf	((c:3978)),c,1	;volatile
  4954  000C82  928A               	line	38
  4955                           ;PWM.c: 38:     PDC2H=0;
  4956                           	bcf	((c:3987)),c,1	;volatile
  4957  000C84  9293               	line	39
  4958                           ;PWM.c: 39:     PDC3L=0;
  4959                           	bcf	((c:3978)),c,2	;volatile
  4960  000C86  948A               	line	40
  4961                           ;PWM.c: 40:     PDC3H=0;
  4962                           	bcf	((c:3987)),c,2	;volatile
  4963  000C88  9493               	line	41
  4964                           ;PWM.c: 41: 
  4965                           	bcf	((c:3978)),c,3	;volatile
  4966  000C8A  968A               	line	42
  4967                           ;PWM.c: 42: 
  4968                           	bcf	((c:3987)),c,3	;volatile
  4969  000C8C  9693               	line	45
  4970                           	
  4971                           l1560:
  4972  000C8E                     ;PWM.c: 45: 
  4973                           	movlw	low(0)
  4974  000C8E  0E00               	movwf	((c:3967)),c	;volatile
  4975  000C90  6E7F               	line	47
  4976                           ;PWM.c: 47:     PDC0H=0b1;
  4977                           	movlw	low(080h)
  4978  000C92  0E80               	movwf	((c:3966)),c	;volatile
  4979  000C94  6E7E               	line	50
  4980                           ;PWM.c: 50: 
  4981                           	movlw	low(06Fh)
  4982  000C96  0E6F               	movwf	((c:3951)),c	;volatile
  4983  000C98  6E6F               	line	51
  4984                           ;PWM.c: 51: };
  4985                           	movlw	low(0)
  4986  000C9A  0E00               	movwf	((c:3950)),c	;volatile
  4987  000C9C  6E6E               	line	53
  4988                           ;PWM.c: 53: 
  4989                           	movlw	low(0C7h)
  4990  000C9E  0EC7               	movwf	((c:3963)),c	;volatile
  4991  000CA0  6E7B               	line	54
  4992                           ;PWM.c: 54: 
  4993                           	movlw	low(0)
  4994  000CA2  0E00               	movwf	((c:3962)),c	;volatile
  4995  000CA4  6E7A               	line	57
  4996                           ;PWM.c: 57: void setMotorPWM(struct DC_motor *m){
  4997                           	movlw	low(0)
  4998  000CA6  0E00               	movwf	((c:3961)),c	;volatile
  4999  000CA8  6E79               	line	58
  5000                           ;PWM.c: 58: 
  5001                           	movlw	low(0)
  5002  000CAA  0E00               	movwf	((c:3960)),c	;volatile
  5003  000CAC  6E78               	line	59
  5004                           ;PWM.c: 59:     int PWMduty = ((int)m->power)*(m->PWMperiod);
  5005                           	movlw	low(0)
  5006  000CAE  0E00               	movwf	((c:3959)),c	;volatile
  5007  000CB0  6E77               	line	60
  5008                           ;PWM.c: 60: 
  5009                           	movlw	low(0)
  5010  000CB2  0E00               	movwf	((c:3958)),c	;volatile
  5011  000CB4  6E76               	line	61
  5012                           ;PWM.c: 61:     if (m->direction) {
  5013                           	movlw	low(0)
  5014  000CB6  0E00               	movwf	((c:3957)),c	;volatile
  5015  000CB8  6E75               	line	62
  5016                           ;PWM.c: 62: 
  5017                           	movlw	low(0)
  5018  000CBA  0E00               	movwf	((c:3956)),c	;volatile
  5019  000CBC  6E74               	line	63
  5020                           ;PWM.c: 63:         PWMduty = (PWMduty>>9)+PWMduty>>7;
  5021                           	movlw	low(0)
  5022  000CBE  0E00               	movwf	((c:3955)),c	;volatile
  5023  000CC0  6E73               	line	64
  5024                           ;PWM.c: 64:         PWMduty = m->PWMperiod - PWMduty;
  5025                           	movlw	low(0)
  5026  000CC2  0E00               	movwf	((c:3954)),c	;volatile
  5027  000CC4  6E72               	line	70
  5028                           ;PWM.c: 70: 
  5029                           	movlw	low(08Fh)
  5030  000CC6  0E8F               	movwf	((c:3961)),c	;volatile
  5031  000CC8  6E79               	line	71
  5032                           ;PWM.c: 71:     PWMduty=(PWMduty<<2);
  5033                           	movlw	low(01h)
  5034  000CCA  0E01               	movwf	((c:3960)),c	;volatile
  5035  000CCC  6E78               	line	72
  5036                           ;PWM.c: 72:     *(m->dutyLowByte)=PWMduty&0xFF;
  5037                           	movlw	low(08Fh)
  5038  000CCE  0E8F               	movwf	((c:3959)),c	;volatile
  5039  000CD0  6E77               	line	73
  5040                           ;PWM.c: 73:     *(m->dutyHighByte)=(PWMduty>>8)&0x3F;
  5041                           	movlw	low(01h)
  5042  000CD2  0E01               	movwf	((c:3958)),c	;volatile
  5043  000CD4  6E76               	line	75
  5044                           	
  5045                           l198:
  5046  000CD6                     	return	;funcret
  5047  000CD6  0012               	opt stack 0
  5048                           GLOBAL	__end_of_initPWM
  5049                           	__end_of_initPWM:
  5050  000CD8                     	signat	_initPWM,89
  5051                           	global	_initLCD
  5052                           
  5053 ;; *************** function _initLCD *****************
  5054 ;; Defined at:
  5055 ;;		line 70 in file "LCD.c"
  5056 ;; Parameters:    Size  Location     Type
  5057 ;;		None
  5058 ;; Auto vars:     Size  Location     Type
  5059 ;;		None
  5060 ;; Return value:  Size  Location     Type
  5061 ;;                  1    wreg      void 
  5062 ;; Registers used:
  5063 ;;		wreg, status,2, status,0, cstack
  5064 ;; Tracked objects:
  5065 ;;		On entry : 0/0
  5066 ;;		On exit  : 0/0
  5067 ;;		Unchanged: 0/0
  5068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5069 ;;      Params:         0       0       0       0
  5070 ;;      Locals:         0       0       0       0
  5071 ;;      Temps:          1       0       0       0
  5072 ;;      Totals:         1       0       0       0
  5073 ;;Total ram usage:        1 bytes
  5074 ;; Hardware stack levels used:    1
  5075 ;; Hardware stack levels required when called:   10
  5076 ;; This function calls:
  5077 ;;		_LCDout
  5078 ;;		_SendLCD
  5079 ;; This function is called by:
  5080 ;;		_main
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           psect	text7,class=CODE,space=0,reloc=2,group=0
  5084                           	file	"LCD.c"
  5085                           	line	70
  5086                           global __ptext7
  5087                           __ptext7:
  5088  000A80                     psect	text7
  5089                           	file	"LCD.c"
  5090                           	line	70
  5091                           	global	__size_of_initLCD
  5092                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  5093  0000                     	
  5094                           _initLCD:
  5095  000A80                     ;incstack = 0
  5096                           	opt	stack 20
  5097                           	line	73
  5098                           	
  5099                           l1562:
  5100  000A80                     ;LCD.c: 73: 
  5101                           	bcf	((c:3977)),c,6	;volatile
  5102  000A80  9C89               	line	74
  5103                           ;LCD.c: 74:     _delay((unsigned long)((20)*(8000000/4000.0)));
  5104                           	bcf	((c:3986)),c,6	;volatile
  5105  000A82  9C92               	line	76
  5106                           ;LCD.c: 76:     LCDout(0b0011);
  5107                           	bcf	((c:3979)),c,0	;volatile
  5108  000A84  908B               	line	77
  5109                           ;LCD.c: 77: 
  5110                           	bcf	((c:3988)),c,0	;volatile
  5111  000A86  9094               	line	79
  5112                           ;LCD.c: 79: 
  5113                           	bcf	((c:3979)),c,1	;volatile
  5114  000A88  928B               	line	80
  5115                           ;LCD.c: 80:     LCDout(0b0011);
  5116                           	bcf	((c:3988)),c,1	;volatile
  5117  000A8A  9294               	line	82
  5118                           ;LCD.c: 82:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  5119                           	bcf	((c:3979)),c,2	;volatile
  5120  000A8C  948B               	line	83
  5121                           ;LCD.c: 83: 
  5122                           	bcf	((c:3988)),c,2	;volatile
  5123  000A8E  9494               	line	85
  5124                           ;LCD.c: 85: 
  5125                           	bcf	((c:3980)),c,0	;volatile
  5126  000A90  908C               	line	86
  5127                           ;LCD.c: 86:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  5128                           	bcf	((c:3989)),c,0	;volatile
  5129  000A92  9095               	line	88
  5130                           ;LCD.c: 88:     LCDout(0b0010);
  5131                           	bcf	((c:3980)),c,1	;volatile
  5132  000A94  928C               	line	89
  5133                           ;LCD.c: 89: 
  5134                           	bcf	((c:3989)),c,1	;volatile
  5135  000A96  9295               	line	92
  5136                           	
  5137                           l1564:
  5138  000A98                     ;LCD.c: 92: 
  5139                           	opt asmopt_push
  5140                           opt asmopt_off
  5141                           movlw	52
  5142  000A98  0E34               movwf	(??_initLCD+0+0)&0ffh,c,f
  5143  000A9A  6E1A               	movlw	242
  5144  000A9C  0EF2               u1037:
  5145  000A9E                     decfsz	wreg,f
  5146  000A9E  2EE8               	bra	u1037
  5147  000AA0  D7FE               	decfsz	(??_initLCD+0+0)&0ffh,c,f
  5148  000AA2  2E1A               	bra	u1037
  5149  000AA4  D7FC               opt asmopt_pop
  5150                           
  5151                           	line	94
  5152                           	
  5153                           l1566:
  5154  000AA6                     ;LCD.c: 94:     SendLCD(0b00101000,0);
  5155                           	movlw	(03h)&0ffh
  5156  000AA6  0E03               	
  5157                           	call	_LCDout
  5158  000AA8  EC2D  F007         	line	96
  5159                           	
  5160                           l1568:
  5161  000AAC                     ;LCD.c: 96:     SendLCD(0b00001000,0);
  5162                           	opt asmopt_push
  5163                           opt asmopt_off
  5164                           movlw	13
  5165  000AAC  0E0D               movwf	(??_initLCD+0+0)&0ffh,c,f
  5166  000AAE  6E1A               	movlw	252
  5167  000AB0  0EFC               u1047:
  5168  000AB2                     decfsz	wreg,f
  5169  000AB2  2EE8               	bra	u1047
  5170  000AB4  D7FE               	decfsz	(??_initLCD+0+0)&0ffh,c,f
  5171  000AB6  2E1A               	bra	u1047
  5172  000AB8  D7FC               opt asmopt_pop
  5173                           
  5174                           	line	98
  5175                           ;LCD.c: 98:     SendLCD(0b00000001,0);
  5176                           	movlw	(03h)&0ffh
  5177  000ABA  0E03               	
  5178                           	call	_LCDout
  5179  000ABC  EC2D  F007         	line	100
  5180                           	
  5181                           l1570:
  5182  000AC0                     ;LCD.c: 100:     SendLCD(0b00000110,0);
  5183                           	opt asmopt_push
  5184                           opt asmopt_off
  5185                           	movlw	133
  5186  000AC0  0E85               u1057:
  5187  000AC2                     decfsz	wreg,f
  5188  000AC2  2EE8               	bra	u1057
  5189  000AC4  D7FE               	nop
  5190  000AC6  F000               opt asmopt_pop
  5191                           
  5192                           	line	102
  5193                           	
  5194                           l1572:
  5195  000AC8                     ;LCD.c: 102:     SendLCD(0b00001100,0);
  5196                           	movlw	(03h)&0ffh
  5197  000AC8  0E03               	
  5198                           	call	_LCDout
  5199  000ACA  EC2D  F007         	line	104
  5200                           ;LCD.c: 104: }
  5201                           	opt asmopt_push
  5202                           opt asmopt_off
  5203                           	movlw	33
  5204  000ACE  0E21               u1067:
  5205  000AD0                     decfsz	wreg,f
  5206  000AD0  2EE8               	bra	u1067
  5207  000AD2  D7FE               	nop
  5208  000AD4  F000               opt asmopt_pop
  5209                           
  5210                           	line	106
  5211                           	
  5212                           l1574:
  5213  000AD6                     ;LCD.c: 106: 
  5214                           	movlw	(02h)&0ffh
  5215  000AD6  0E02               	
  5216                           	call	_LCDout
  5217  000AD8  EC2D  F007         	line	108
  5218                           	
  5219                           l1576:
  5220  000ADC                     ;LCD.c: 108: 
  5221                           	opt asmopt_push
  5222                           opt asmopt_off
  5223                           	movlw	33
  5224  000ADC  0E21               u1077:
  5225  000ADE                     decfsz	wreg,f
  5226  000ADE  2EE8               	bra	u1077
  5227  000AE0  D7FE               	nop
  5228  000AE2  F000               opt asmopt_pop
  5229                           
  5230                           	line	112
  5231                           ;LCD.c: 112:     } else if (line==2){
  5232                           	movlw	low(0)
  5233  000AE4  0E00               	movwf	((c:SendLCD@type)),c
  5234  000AE6  6E16               	movlw	(028h)&0ffh
  5235  000AE8  0E28               	
  5236                           	call	_SendLCD
  5237  000AEA  EC69  F007         	line	113
  5238                           	
  5239                           l1578:
  5240  000AEE                     ;LCD.c: 113:         SendLCD(0xC0,0);
  5241                           	opt asmopt_push
  5242                           opt asmopt_off
  5243                           	movlw	33
  5244  000AEE  0E21               u1087:
  5245  000AF0                     decfsz	wreg,f
  5246  000AF0  2EE8               	bra	u1087
  5247  000AF2  D7FE               	nop
  5248  000AF4  F000               opt asmopt_pop
  5249                           
  5250                           	line	114
  5251                           	
  5252                           l1580:
  5253  000AF6                     ;LCD.c: 114:     }
  5254                           	movlw	low(0)
  5255  000AF6  0E00               	movwf	((c:SendLCD@type)),c
  5256  000AF8  6E16               	movlw	(08h)&0ffh
  5257  000AFA  0E08               	
  5258                           	call	_SendLCD
  5259  000AFC  EC69  F007         	line	115
  5260                           ;LCD.c: 115: 
  5261                           	opt asmopt_push
  5262                           opt asmopt_off
  5263                           	movlw	33
  5264  000B00  0E21               u1097:
  5265  000B02                     decfsz	wreg,f
  5266  000B02  2EE8               	bra	u1097
  5267  000B04  D7FE               	nop
  5268  000B06  F000               opt asmopt_pop
  5269                           
  5270                           	line	116
  5271                           	
  5272                           l1582:
  5273  000B08                     ;LCD.c: 116:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  5274                           	movlw	low(0)
  5275  000B08  0E00               	movwf	((c:SendLCD@type)),c
  5276  000B0A  6E16               	movlw	(01h)&0ffh
  5277  000B0C  0E01               	
  5278                           	call	_SendLCD
  5279  000B0E  EC69  F007         	line	117
  5280                           	
  5281                           l1584:
  5282  000B12                     ;LCD.c: 117: }
  5283                           	opt asmopt_push
  5284                           opt asmopt_off
  5285                           movlw	13
  5286  000B12  0E0D               movwf	(??_initLCD+0+0)&0ffh,c,f
  5287  000B14  6E1A               	movlw	252
  5288  000B16  0EFC               u1107:
  5289  000B18                     decfsz	wreg,f
  5290  000B18  2EE8               	bra	u1107
  5291  000B1A  D7FE               	decfsz	(??_initLCD+0+0)&0ffh,c,f
  5292  000B1C  2E1A               	bra	u1107
  5293  000B1E  D7FC               opt asmopt_pop
  5294                           
  5295                           	line	118
  5296                           ;LCD.c: 118: 
  5297                           	movlw	low(0)
  5298  000B20  0E00               	movwf	((c:SendLCD@type)),c
  5299  000B22  6E16               	movlw	(06h)&0ffh
  5300  000B24  0E06               	
  5301                           	call	_SendLCD
  5302  000B26  EC69  F007         	line	119
  5303                           	
  5304                           l1586:
  5305  000B2A                     ;LCD.c: 119: 
  5306                           	opt asmopt_push
  5307                           opt asmopt_off
  5308                           	movlw	33
  5309  000B2A  0E21               u1117:
  5310  000B2C                     decfsz	wreg,f
  5311  000B2C  2EE8               	bra	u1117
  5312  000B2E  D7FE               	nop
  5313  000B30  F000               opt asmopt_pop
  5314                           
  5315                           	line	120
  5316                           	
  5317                           l1588:
  5318  000B32                     ;LCD.c: 120: 
  5319                           	movlw	low(0)
  5320  000B32  0E00               	movwf	((c:SendLCD@type)),c
  5321  000B34  6E16               	movlw	(0Ch)&0ffh
  5322  000B36  0E0C               	
  5323                           	call	_SendLCD
  5324  000B38  EC69  F007         	line	121
  5325                           ;LCD.c: 121: 
  5326                           	opt asmopt_push
  5327                           opt asmopt_off
  5328                           	movlw	33
  5329  000B3C  0E21               u1127:
  5330  000B3E                     decfsz	wreg,f
  5331  000B3E  2EE8               	bra	u1127
  5332  000B40  D7FE               	nop
  5333  000B42  F000               opt asmopt_pop
  5334                           
  5335                           	line	122
  5336                           	
  5337                           l250:
  5338  000B44                     	return	;funcret
  5339  000B44  0012               	opt stack 0
  5340                           GLOBAL	__end_of_initLCD
  5341                           	__end_of_initLCD:
  5342  000B46                     	signat	_initLCD,89
  5343                           	global	_SendLCD
  5344                           
  5345 ;; *************** function _SendLCD *****************
  5346 ;; Defined at:
  5347 ;;		line 49 in file "LCD.c"
  5348 ;; Parameters:    Size  Location     Type
  5349 ;;  Byte            1    wreg     unsigned char 
  5350 ;;  type            1   21[COMRAM] unsigned char 
  5351 ;; Auto vars:     Size  Location     Type
  5352 ;;  Byte            1   24[COMRAM] unsigned char 
  5353 ;;  LowBits         1   23[COMRAM] unsigned char 
  5354 ;;  HighBits        1   22[COMRAM] unsigned char 
  5355 ;; Return value:  Size  Location     Type
  5356 ;;                  1    wreg      void 
  5357 ;; Registers used:
  5358 ;;		wreg, status,2, status,0, cstack
  5359 ;; Tracked objects:
  5360 ;;		On entry : 0/0
  5361 ;;		On exit  : 0/0
  5362 ;;		Unchanged: 0/0
  5363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5364 ;;      Params:         1       0       0       0
  5365 ;;      Locals:         3       0       0       0
  5366 ;;      Temps:          0       0       0       0
  5367 ;;      Totals:         4       0       0       0
  5368 ;;Total ram usage:        4 bytes
  5369 ;; Hardware stack levels used:    1
  5370 ;; Hardware stack levels required when called:    9
  5371 ;; This function calls:
  5372 ;;		_LCDout
  5373 ;; This function is called by:
  5374 ;;		_initLCD
  5375 ;; This function uses a non-reentrant model
  5376 ;;
  5377                           psect	text8,class=CODE,space=0,reloc=2,group=0
  5378                           	line	49
  5379                           global __ptext8
  5380                           __ptext8:
  5381  000ED2                     psect	text8
  5382                           	file	"LCD.c"
  5383                           	line	49
  5384                           	global	__size_of_SendLCD
  5385                           	__size_of_SendLCD	equ	__end_of_SendLCD-_SendLCD
  5386  0000                     	
  5387                           _SendLCD:
  5388  000ED2                     ;incstack = 0
  5389                           	opt	stack 20
  5390                           ;SendLCD@Byte stored from wreg
  5391                           	movwf	((c:SendLCD@Byte)),c
  5392  000ED2  6E19               	line	52
  5393                           	
  5394                           l1512:
  5395  000ED4                     ;LCD.c: 52: void initLCD(void){
  5396                           	btfsc	(c:SendLCD@type),c,0
  5397  000ED4  B016               	bra	u645
  5398  000ED6  D002               	bcf	((c:3977)),c,6	;volatile
  5399  000ED8  9C89               	bra	u646
  5400  000EDA  D001               	u645:
  5401  000EDC                     	bsf	((c:3977)),c,6	;volatile
  5402  000EDC  8C89               	u646:
  5403  000EDE                     
  5404                           	line	54
  5405                           	
  5406                           l1514:
  5407  000EDE                     ;LCD.c: 54: 
  5408                           	movf	((c:SendLCD@Byte)),c,w
  5409  000EDE  5019               	andlw	low(0F0h)
  5410  000EE0  0BF0               	movwf	((c:SendLCD@HighBits)),c
  5411  000EE2  6E17               	line	55
  5412                           ;LCD.c: 55:     LATAbits.LATA6=0;
  5413                           	movf	((c:SendLCD@Byte)),c,w
  5414  000EE4  5019               	andlw	low(0Fh)
  5415  000EE6  0B0F               	movwf	((c:SendLCD@LowBits)),c
  5416  000EE8  6E18               	line	58
  5417                           	
  5418                           l1516:
  5419  000EEA                     ;LCD.c: 58:     LATCbits.LATC0 =0;
  5420                           	swapf	((c:SendLCD@HighBits)),c,w
  5421  000EEA  3817               	andlw	(0ffh shr 4) & 0ffh
  5422  000EEC  0B0F               	
  5423                           	call	_LCDout
  5424  000EEE  EC2D  F007         	line	59
  5425                           	
  5426                           l1518:
  5427  000EF2                     ;LCD.c: 59:     TRISCbits.RC0=0;
  5428                           	opt asmopt_push
  5429                           opt asmopt_off
  5430                           	movlw	6
  5431  000EF2  0E06               u1137:
  5432  000EF4                     decfsz	wreg,f
  5433  000EF4  2EE8               	bra	u1137
  5434  000EF6  D7FE               	nop2
  5435  000EF8  D000               opt asmopt_pop
  5436                           
  5437                           	line	62
  5438                           	
  5439                           l1520:
  5440  000EFA                     ;LCD.c: 62:     TRISCbits.RC1=0;
  5441                           	movf	((c:SendLCD@LowBits)),c,w
  5442  000EFA  5018               	
  5443                           	call	_LCDout
  5444  000EFC  EC2D  F007         	line	63
  5445                           	
  5446                           l1522:
  5447  000F00                     ;LCD.c: 63: 
  5448                           	opt asmopt_push
  5449                           opt asmopt_off
  5450                           	movlw	6
  5451  000F00  0E06               u1147:
  5452  000F02                     decfsz	wreg,f
  5453  000F02  2EE8               	bra	u1147
  5454  000F04  D7FE               	nop2
  5455  000F06  D000               opt asmopt_pop
  5456                           
  5457                           	line	65
  5458                           	
  5459                           l247:
  5460  000F08                     	return	;funcret
  5461  000F08  0012               	opt stack 0
  5462                           GLOBAL	__end_of_SendLCD
  5463                           	__end_of_SendLCD:
  5464  000F0A                     	signat	_SendLCD,8313
  5465                           	global	_LCDout
  5466                           
  5467 ;; *************** function _LCDout *****************
  5468 ;; Defined at:
  5469 ;;		line 34 in file "LCD.c"
  5470 ;; Parameters:    Size  Location     Type
  5471 ;;  number          1    wreg     unsigned char 
  5472 ;; Auto vars:     Size  Location     Type
  5473 ;;  number          1   20[COMRAM] unsigned char 
  5474 ;; Return value:  Size  Location     Type
  5475 ;;                  1    wreg      void 
  5476 ;; Registers used:
  5477 ;;		wreg, status,2, status,0, cstack
  5478 ;; Tracked objects:
  5479 ;;		On entry : 0/0
  5480 ;;		On exit  : 0/0
  5481 ;;		Unchanged: 0/0
  5482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5483 ;;      Params:         0       0       0       0
  5484 ;;      Locals:         1       0       0       0
  5485 ;;      Temps:          2       0       0       0
  5486 ;;      Totals:         3       0       0       0
  5487 ;;Total ram usage:        3 bytes
  5488 ;; Hardware stack levels used:    1
  5489 ;; Hardware stack levels required when called:    8
  5490 ;; This function calls:
  5491 ;;		_E_TOG
  5492 ;; This function is called by:
  5493 ;;		_SendLCD
  5494 ;;		_initLCD
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           psect	text9,class=CODE,space=0,reloc=2,group=0
  5498                           	line	34
  5499                           global __ptext9
  5500                           __ptext9:
  5501  000E5A                     psect	text9
  5502                           	file	"LCD.c"
  5503                           	line	34
  5504                           	global	__size_of_LCDout
  5505                           	__size_of_LCDout	equ	__end_of_LCDout-_LCDout
  5506  0000                     	
  5507                           _LCDout:
  5508  000E5A                     ;incstack = 0
  5509                           	opt	stack 20
  5510                           ;LCDout@number stored from wreg
  5511                           	movwf	((c:LCDout@number)),c
  5512  000E5A  6E15               	line	39
  5513                           	
  5514                           l1464:
  5515  000E5C                     ;LCD.c: 39: 
  5516                           	movff	(c:3979),??_LCDout+0+0	;volatile
  5517  000E5C  CF8B F013          	movlw	0F9h
  5518  000E60  0EF9               	andwf	(??_LCDout+0+0),c
  5519  000E62  1613               	movff	(c:LCDout@number),??_LCDout+1+0
  5520  000E64  C015  F014         	movlw	03h
  5521  000E68  0E03               	andwf	(??_LCDout+1+0),c
  5522  000E6A  1614               	bcf	status,0
  5523  000E6C  90D8               	rlcf	(??_LCDout+1+0),c,w
  5524  000E6E  3414               	iorwf	(??_LCDout+0+0),c,w
  5525  000E70  1013               	movwf	((c:3979)),c	;volatile
  5526  000E72  6E8B               	line	41
  5527                           ;LCD.c: 41:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  5528                           	movff	(c:3980),??_LCDout+0+0	;volatile
  5529  000E74  CF8C F013          	movlw	0FCh
  5530  000E78  0EFC               	andwf	(??_LCDout+0+0),c
  5531  000E7A  1613               	rrncf	((c:LCDout@number)),c,w
  5532  000E7C  4015               	rrncf	wreg
  5533  000E7E  42E8               	andlw	(0ffh shr 2) & 0ffh
  5534  000E80  0B3F               	andlw	low(03h)
  5535  000E82  0B03               	iorwf	(??_LCDout+0+0),c,w
  5536  000E84  1013               	movwf	((c:3980)),c	;volatile
  5537  000E86  6E8C               	line	42
  5538                           	
  5539                           l1466:
  5540  000E88                     ;LCD.c: 42: 
  5541                           	call	_E_TOG	;wreg free
  5542  000E88  ECE0  F007         	line	43
  5543                           	
  5544                           l1468:
  5545  000E8C                     ;LCD.c: 43: 
  5546                           	opt asmopt_push
  5547                           opt asmopt_off
  5548                           	movlw	3
  5549  000E8C  0E03               u1157:
  5550  000E8E                     decfsz	wreg,f
  5551  000E8E  2EE8               	bra	u1157
  5552  000E90  D7FE               	nop
  5553  000E92  F000               opt asmopt_pop
  5554                           
  5555                           	line	44
  5556                           	
  5557                           l244:
  5558  000E94                     	return	;funcret
  5559  000E94  0012               	opt stack 0
  5560                           GLOBAL	__end_of_LCDout
  5561                           	__end_of_LCDout:
  5562  000E96                     	signat	_LCDout,4217
  5563                           	global	_E_TOG
  5564                           
  5565 ;; *************** function _E_TOG *****************
  5566 ;; Defined at:
  5567 ;;		line 24 in file "LCD.c"
  5568 ;; Parameters:    Size  Location     Type
  5569 ;;		None
  5570 ;; Auto vars:     Size  Location     Type
  5571 ;;		None
  5572 ;; Return value:  Size  Location     Type
  5573 ;;                  1    wreg      void 
  5574 ;; Registers used:
  5575 ;;		wreg
  5576 ;; Tracked objects:
  5577 ;;		On entry : 0/0
  5578 ;;		On exit  : 0/0
  5579 ;;		Unchanged: 0/0
  5580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5581 ;;      Params:         0       0       0       0
  5582 ;;      Locals:         0       0       0       0
  5583 ;;      Temps:          0       0       0       0
  5584 ;;      Totals:         0       0       0       0
  5585 ;;Total ram usage:        0 bytes
  5586 ;; Hardware stack levels used:    1
  5587 ;; Hardware stack levels required when called:    7
  5588 ;; This function calls:
  5589 ;;		Nothing
  5590 ;; This function is called by:
  5591 ;;		_LCDout
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           psect	text10,class=CODE,space=0,reloc=2,group=0
  5595                           	line	24
  5596                           global __ptext10
  5597                           __ptext10:
  5598  000FC0                     psect	text10
  5599                           	file	"LCD.c"
  5600                           	line	24
  5601                           	global	__size_of_E_TOG
  5602                           	__size_of_E_TOG	equ	__end_of_E_TOG-_E_TOG
  5603  0000                     	
  5604                           _E_TOG:
  5605  000FC0                     ;incstack = 0
  5606                           	opt	stack 20
  5607                           	line	25
  5608                           	
  5609                           l1424:
  5610  000FC0                     ;LCD.c: 25:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  5611                           	bsf	((c:3979)),c,0	;volatile
  5612  000FC0  808B               	line	26
  5613                           	
  5614                           l1426:
  5615  000FC2                     ;LCD.c: 26: }
  5616                           	opt asmopt_push
  5617                           opt asmopt_off
  5618                           	movlw	3
  5619  000FC2  0E03               u1167:
  5620  000FC4                     decfsz	wreg,f
  5621  000FC4  2EE8               	bra	u1167
  5622  000FC6  D7FE               	nop
  5623  000FC8  F000               opt asmopt_pop
  5624                           
  5625                           	line	27
  5626                           	
  5627                           l1428:
  5628  000FCA                     ;LCD.c: 27: 
  5629                           	bcf	((c:3979)),c,0	;volatile
  5630  000FCA  908B               	line	28
  5631                           	
  5632                           l241:
  5633  000FCC                     	return	;funcret
  5634  000FCC  0012               	opt stack 0
  5635                           GLOBAL	__end_of_E_TOG
  5636                           	__end_of_E_TOG:
  5637  000FCE                     	signat	_E_TOG,89
  5638                           	global	_initIR
  5639                           
  5640 ;; *************** function _initIR *****************
  5641 ;; Defined at:
  5642 ;;		line 21 in file "IR.c"
  5643 ;; Parameters:    Size  Location     Type
  5644 ;;		None
  5645 ;; Auto vars:     Size  Location     Type
  5646 ;;		None
  5647 ;; Return value:  Size  Location     Type
  5648 ;;                  1    wreg      void 
  5649 ;; Registers used:
  5650 ;;		wreg, status,2
  5651 ;; Tracked objects:
  5652 ;;		On entry : 0/0
  5653 ;;		On exit  : 0/0
  5654 ;;		Unchanged: 0/0
  5655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5656 ;;      Params:         0       0       0       0
  5657 ;;      Locals:         0       0       0       0
  5658 ;;      Temps:          0       0       0       0
  5659 ;;      Totals:         0       0       0       0
  5660 ;;Total ram usage:        0 bytes
  5661 ;; Hardware stack levels used:    1
  5662 ;; Hardware stack levels required when called:    7
  5663 ;; This function calls:
  5664 ;;		Nothing
  5665 ;; This function is called by:
  5666 ;;		_main
  5667 ;; This function uses a non-reentrant model
  5668 ;;
  5669                           psect	text11,class=CODE,space=0,reloc=2,group=0
  5670                           	file	"IR.c"
  5671                           	line	21
  5672                           global __ptext11
  5673                           __ptext11:
  5674  000F6C                     psect	text11
  5675                           	file	"IR.c"
  5676                           	line	21
  5677                           	global	__size_of_initIR
  5678                           	__size_of_initIR	equ	__end_of_initIR-_initIR
  5679  0000                     	
  5680                           _initIR:
  5681  000F6C                     ;incstack = 0
  5682                           	opt	stack 23
  5683                           	line	23
  5684                           	
  5685                           l1590:
  5686  000F6C                     ;IR.c: 23: 
  5687                           	movlw	low(0)
  5688  000F6C  0E00               	movwf	((c:4024)),c	;volatile
  5689  000F6E  6EB8               	line	24
  5690                           ;IR.c: 24: 
  5691                           	movlw	low(0)
  5692  000F70  0E00               	movwf	((c:4025)),c	;volatile
  5693  000F72  6EB9               	line	29
  5694                           	
  5695                           l1592:
  5696  000F74                     ;IR.c: 29: 
  5697                           	bcf	((c:3977)),c,3	;volatile
  5698  000F74  9689               	line	30
  5699                           	
  5700                           l1594:
  5701  000F76                     ;IR.c: 30: 
  5702                           	bsf	((c:3986)),c,3	;volatile
  5703  000F76  8692               	line	32
  5704                           	
  5705                           l1596:
  5706  000F78                     ;IR.c: 32: 
  5707                           	bcf	((c:3977)),c,4	;volatile
  5708  000F78  9889               	line	33
  5709                           	
  5710                           l1598:
  5711  000F7A                     ;IR.c: 33: 
  5712                           	bsf	((c:3986)),c,4	;volatile
  5713  000F7A  8892               	line	37
  5714                           ;IR.c: 37: 
  5715                           	movlw	low(046h)
  5716  000F7C  0E46               	movwf	((c:3938)),c	;volatile
  5717  000F7E  6E62               	line	38
  5718                           ;IR.c: 38: 
  5719                           	movlw	low(046h)
  5720  000F80  0E46               	movwf	((c:3937)),c	;volatile
  5721  000F82  6E61               	line	42
  5722                           	movlw	low(011h)
  5723  000F84  0E11               	movwf	((c:4023)),c	;volatile
  5724  000F86  6EB7               	line	44
  5725                           	
  5726                           l287:
  5727  000F88                     	return	;funcret
  5728  000F88  0012               	opt stack 0
  5729                           GLOBAL	__end_of_initIR
  5730                           	__end_of_initIR:
  5731  000F8A                     	signat	_initIR,89
  5732                           	global	_initEusart
  5733                           
  5734 ;; *************** function _initEusart *****************
  5735 ;; Defined at:
  5736 ;;		line 16 in file "eusart.c"
  5737 ;; Parameters:    Size  Location     Type
  5738 ;;		None
  5739 ;; Auto vars:     Size  Location     Type
  5740 ;;		None
  5741 ;; Return value:  Size  Location     Type
  5742 ;;                  1    wreg      void 
  5743 ;; Registers used:
  5744 ;;		wreg, status,2
  5745 ;; Tracked objects:
  5746 ;;		On entry : 0/0
  5747 ;;		On exit  : 0/0
  5748 ;;		Unchanged: 0/0
  5749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5750 ;;      Params:         0       0       0       0
  5751 ;;      Locals:         0       0       0       0
  5752 ;;      Temps:          0       0       0       0
  5753 ;;      Totals:         0       0       0       0
  5754 ;;Total ram usage:        0 bytes
  5755 ;; Hardware stack levels used:    1
  5756 ;; Hardware stack levels required when called:    7
  5757 ;; This function calls:
  5758 ;;		Nothing
  5759 ;; This function is called by:
  5760 ;;		_main
  5761 ;; This function uses a non-reentrant model
  5762 ;;
  5763                           psect	text12,class=CODE,space=0,reloc=2,group=0
  5764                           	file	"eusart.c"
  5765                           	line	16
  5766                           global __ptext12
  5767                           __ptext12:
  5768  000FA8                     psect	text12
  5769                           	file	"eusart.c"
  5770                           	line	16
  5771                           	global	__size_of_initEusart
  5772                           	__size_of_initEusart	equ	__end_of_initEusart-_initEusart
  5773  0000                     	
  5774                           _initEusart:
  5775  000FA8                     ;incstack = 0
  5776                           	opt	stack 23
  5777                           	line	19
  5778                           	
  5779                           l1544:
  5780  000FA8                     ;eusart.c: 19:     LATCbits.LATC7=0;
  5781                           	bcf	((c:3979)),c,7	;volatile
  5782  000FA8  9E8B               	line	20
  5783                           ;eusart.c: 20:     TRISCbits.RC7=1;
  5784                           	bsf	((c:3988)),c,7	;volatile
  5785  000FAA  8E94               	line	22
  5786                           	
  5787                           l1546:
  5788  000FAC                     ;eusart.c: 22:     SPBRG=207;
  5789                           	movlw	low(0CFh)
  5790  000FAC  0ECF               	movwf	((c:4015)),c	;volatile
  5791  000FAE  6EAF               	line	23
  5792                           ;eusart.c: 23:     SPBRGH=0;
  5793                           	movlw	low(0)
  5794  000FB0  0E00               	movwf	((c:4016)),c	;volatile
  5795  000FB2  6EB0               	line	24
  5796                           	
  5797                           l1548:
  5798  000FB4                     ;eusart.c: 24:     BAUDCONbits.BRG16=1;
  5799                           	bsf	((c:4010)),c,3	;volatile
  5800  000FB4  86AA               	line	25
  5801                           	
  5802                           l1550:
  5803  000FB6                     ;eusart.c: 25:     TXSTAbits.BRGH=1;
  5804                           	bsf	((c:4012)),c,2	;volatile
  5805  000FB6  84AC               	line	26
  5806                           	
  5807                           l1552:
  5808  000FB8                     ;eusart.c: 26:     RCSTAbits.CREN=1;
  5809                           	bsf	((c:4011)),c,4	;volatile
  5810  000FB8  88AB               	line	27
  5811                           	
  5812                           l1554:
  5813  000FBA                     ;eusart.c: 27:     RCSTAbits.SPEN=1;
  5814                           	bsf	((c:4011)),c,7	;volatile
  5815  000FBA  8EAB               	line	28
  5816                           	
  5817                           l1556:
  5818  000FBC                     ;eusart.c: 28:     TXSTAbits.TXEN=0;
  5819                           	bcf	((c:4012)),c,5	;volatile
  5820  000FBC  9AAC               	line	29
  5821                           	
  5822                           l141:
  5823  000FBE                     	return	;funcret
  5824  000FBE  0012               	opt stack 0
  5825                           GLOBAL	__end_of_initEusart
  5826                           	__end_of_initEusart:
  5827  000FC0                     	signat	_initEusart,89
  5828                           	global	_findStrengths
  5829                           
  5830 ;; *************** function _findStrengths *****************
  5831 ;; Defined at:
  5832 ;;		line 50 in file "IR.c"
  5833 ;; Parameters:    Size  Location     Type
  5834 ;;  leftIR          2   18[COMRAM] PTR int 
  5835 ;;		 -> main@leftIR(2), 
  5836 ;;  rightIR         2   20[COMRAM] PTR int 
  5837 ;;		 -> main@rightIR(2), 
  5838 ;; Auto vars:     Size  Location     Type
  5839 ;;		None
  5840 ;; Return value:  Size  Location     Type
  5841 ;;                  1    wreg      void 
  5842 ;; Registers used:
  5843 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5844 ;; Tracked objects:
  5845 ;;		On entry : 0/0
  5846 ;;		On exit  : 0/0
  5847 ;;		Unchanged: 0/0
  5848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5849 ;;      Params:         4       0       0       0
  5850 ;;      Locals:         0       0       0       0
  5851 ;;      Temps:          4       0       0       0
  5852 ;;      Totals:         8       0       0       0
  5853 ;;Total ram usage:        8 bytes
  5854 ;; Hardware stack levels used:    1
  5855 ;; Hardware stack levels required when called:    7
  5856 ;; This function calls:
  5857 ;;		Nothing
  5858 ;; This function is called by:
  5859 ;;		_main
  5860 ;; This function uses a non-reentrant model
  5861 ;;
  5862                           psect	text13,class=CODE,space=0,reloc=2,group=0
  5863                           	file	"IR.c"
  5864                           	line	50
  5865                           global __ptext13
  5866                           __ptext13:
  5867  000E10                     psect	text13
  5868                           	file	"IR.c"
  5869                           	line	50
  5870                           	global	__size_of_findStrengths
  5871                           	__size_of_findStrengths	equ	__end_of_findStrengths-_findStrengths
  5872  0000                     	
  5873                           _findStrengths:
  5874  000E10                     ;incstack = 0
  5875                           	opt	stack 23
  5876                           	line	55
  5877                           	
  5878                           l1606:
  5879  000E10                     	movf	((c:3943)),c,w	;volatile
  5880  000E10  5067               	movwf	(??_findStrengths+0+0+1)&0ffh,c
  5881  000E12  6E18               	clrf	(??_findStrengths+0+0)&0ffh,c
  5882  000E14  6A17               	movf	((c:3942)),c,w	;volatile
  5883  000E16  5066               	movwf	(??_findStrengths+2+0)&0ffh,c
  5884  000E18  6E19               	clrf	(??_findStrengths+2+0+1)&0ffh,c
  5885  000E1A  6A1A               
  5886                           	movf	(??_findStrengths+0+0),c,w
  5887  000E1C  5017               	iorwf	(??_findStrengths+2+0),c
  5888  000E1E  1219               	movf	(??_findStrengths+0+1),c,w
  5889  000E20  5018               	iorwf	(??_findStrengths+2+1),c
  5890  000E22  121A               	movff	(c:findStrengths@leftIR),fsr2l
  5891  000E24  C013  FFD9         	movff	(c:findStrengths@leftIR+1),fsr2h
  5892  000E28  C014  FFDA         	movff	??_findStrengths+2+0,postinc2
  5893  000E2C  C019  FFDE         	movff	??_findStrengths+2+1,postdec2
  5894  000E30  C01A  FFDD         
  5895                           	line	56
  5896                           	movf	((c:3941)),c,w	;volatile
  5897  000E34  5065               	movwf	(??_findStrengths+0+0+1)&0ffh,c
  5898  000E36  6E18               	clrf	(??_findStrengths+0+0)&0ffh,c
  5899  000E38  6A17               	movf	((c:3940)),c,w	;volatile
  5900  000E3A  5064               	movwf	(??_findStrengths+2+0)&0ffh,c
  5901  000E3C  6E19               	clrf	(??_findStrengths+2+0+1)&0ffh,c
  5902  000E3E  6A1A               
  5903                           	movf	(??_findStrengths+0+0),c,w
  5904  000E40  5017               	iorwf	(??_findStrengths+2+0),c
  5905  000E42  1219               	movf	(??_findStrengths+0+1),c,w
  5906  000E44  5018               	iorwf	(??_findStrengths+2+1),c
  5907  000E46  121A               	movff	(c:findStrengths@rightIR),fsr2l
  5908  000E48  C015  FFD9         	movff	(c:findStrengths@rightIR+1),fsr2h
  5909  000E4C  C016  FFDA         	movff	??_findStrengths+2+0,postinc2
  5910  000E50  C019  FFDE         	movff	??_findStrengths+2+1,postdec2
  5911  000E54  C01A  FFDD         
  5912                           	line	57
  5913                           	
  5914                           l290:
  5915  000E58                     	return	;funcret
  5916  000E58  0012               	opt stack 0
  5917                           GLOBAL	__end_of_findStrengths
  5918                           	__end_of_findStrengths:
  5919  000E5A                     	signat	_findStrengths,8313
  5920                           	global	_my_lp_isr
  5921                           
  5922 ;; *************** function _my_lp_isr *****************
  5923 ;; Defined at:
  5924 ;;		line 288 in file "main.c"
  5925 ;; Parameters:    Size  Location     Type
  5926 ;;		None
  5927 ;; Auto vars:     Size  Location     Type
  5928 ;;		None
  5929 ;; Return value:  Size  Location     Type
  5930 ;;                  1    wreg      void 
  5931 ;; Registers used:
  5932 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5933 ;; Tracked objects:
  5934 ;;		On entry : 0/0
  5935 ;;		On exit  : 0/0
  5936 ;;		Unchanged: 0/0
  5937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5938 ;;      Params:         0       0       0       0
  5939 ;;      Locals:         0       0       0       0
  5940 ;;      Temps:          7       0       0       0
  5941 ;;      Totals:         7       0       0       0
  5942 ;;Total ram usage:        7 bytes
  5943 ;; Hardware stack levels used:    1
  5944 ;; Hardware stack levels required when called:    6
  5945 ;; This function calls:
  5946 ;;		_sendRFID
  5947 ;; This function is called by:
  5948 ;;		Interrupt level 1
  5949 ;; This function uses a non-reentrant model
  5950 ;;
  5951                           psect	intcodelo,class=CODE,space=0,reloc=2
  5952                           global __pintcodelo
  5953                           __pintcodelo:
  5954  000018                     psect	intcodelo
  5955                           	file	"main.c"
  5956                           	line	288
  5957                           	global	__size_of_my_lp_isr
  5958                           	__size_of_my_lp_isr	equ	__end_of_my_lp_isr-_my_lp_isr
  5959  0000                     	
  5960                           _my_lp_isr:
  5961  000018                     ;incstack = 0
  5962                           	opt	stack 20
  5963                           	bsf int$flags,0,c ;set compiler interrupt flag (level 1)
  5964  000018  8033               	movff	status+0,??_my_lp_isr+0
  5965  00001A  CFD8 F00C          	movff	wreg+0,??_my_lp_isr+1
  5966  00001E  CFE8 F00D          	movff	bsr+0,??_my_lp_isr+2
  5967  000022  CFE0 F00E          	movff	tblptrl+0,??_my_lp_isr+3
  5968  000026  CFF6 F00F          	movff	tblptrh+0,??_my_lp_isr+4
  5969  00002A  CFF7 F010          	movff	tblptru+0,??_my_lp_isr+5
  5970  00002E  CFF8 F011          	movff	tablat+0,??_my_lp_isr+6
  5971  000032  CFF5 F012          	line	290
  5972                           	
  5973                           i1l1816:
  5974  000036                     ;main.c: 290:             if (INTCON3bits.INT2IF) {
  5975                           	btfss	((c:4080)),c,1	;volatile
  5976  000036  A2F0               	goto	i1u99_21
  5977  000038  EF20  F000         	goto	i1u99_20
  5978  00003C  EF22  F000         i1u99_21:
  5979  000040                     	goto	i1l118
  5980  000040  EF38  F000         i1u99_20:
  5981  000044                     	line	292
  5982                           	
  5983                           i1l1818:
  5984  000044                     ;main.c: 292:                 if (RFIDread==0){
  5985                           	movlb	1	; () banked
  5986  000044  0101               	movf	((_RFIDread))&0ffh,w
  5987  000046  51CF               	btfss	status,2
  5988  000048  A4D8               	goto	i1u100_21
  5989  00004A  EF29  F000         	goto	i1u100_20
  5990  00004E  EF2B  F000         i1u100_21:
  5991  000052                     	goto	i1l1828
  5992  000052  EF35  F000         i1u100_20:
  5993  000056                     	line	293
  5994                           	
  5995                           i1l1820:; BSR set to: 1
  5996  000056                     
  5997                           ;main.c: 293:                 sendRFID();
  5998                           	call	_sendRFID	;wreg free
  5999  000056  ECBB  F004         	line	294
  6000                           	
  6001                           i1l1822:
  6002  00005A                     ;main.c: 294:                 IRsource=1;
  6003                           	movlw	low(01h)
  6004  00005A  0E01               	movlb	1	; () banked
  6005  00005C  0101               	movwf	((_IRsource))&0ffh
  6006  00005E  6FCE               	line	295
  6007                           	
  6008                           i1l1824:; BSR set to: 1
  6009  000060                     
  6010                           ;main.c: 295:                 RFIDread=1;
  6011                           	movlw	low(01h)
  6012  000060  0E01               	movwf	((_RFIDread))&0ffh
  6013  000062  6FCF               	line	296
  6014                           	
  6015                           i1l1826:; BSR set to: 1
  6016  000064                     
  6017                           ;main.c: 296:                 LATDbits.LATD2 = 1;
  6018                           	bsf	((c:3980)),c,2	;volatile
  6019  000064  848C               	goto	i1l1828
  6020  000066  EF35  F000         	line	297
  6021                           ;main.c: 297:                 }
  6022                           	
  6023                           i1l117:; BSR set to: 1
  6024  00006A                     
  6025                           	line	299
  6026                           	
  6027                           i1l1828:; BSR set to: 1
  6028  00006A                     
  6029                           ;main.c: 299:             INTCON3bits.INT2IF = 0;
  6030                           	bcf	((c:4080)),c,1	;volatile
  6031  00006A  92F0               	goto	i1l118
  6032  00006C  EF38  F000         	line	301
  6033                           ;main.c: 301:        }
  6034                           	
  6035                           i1l116:; BSR set to: 1
  6036  000070                     
  6037                           	line	302
  6038                           	
  6039                           i1l118:
  6040  000070                     	movff	??_my_lp_isr+6,tablat+0
  6041  000070  C012  FFF5         	movff	??_my_lp_isr+5,tblptru+0
  6042  000074  C011  FFF8         	movff	??_my_lp_isr+4,tblptrh+0
  6043  000078  C010  FFF7         	movff	??_my_lp_isr+3,tblptrl+0
  6044  00007C  C00F  FFF6         	movff	??_my_lp_isr+2,bsr+0
  6045  000080  C00E  FFE0         	movff	??_my_lp_isr+1,wreg+0
  6046  000084  C00D  FFE8         	movff	??_my_lp_isr+0,status+0
  6047  000088  C00C  FFD8         	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
  6048  00008C  9033               	retfie
  6049  00008E  0010               	opt stack 0
  6050                           GLOBAL	__end_of_my_lp_isr
  6051                           	__end_of_my_lp_isr:
  6052  000090                     	signat	_my_lp_isr,89
  6053                           	global	_sendRFID
  6054                           
  6055 ;; *************** function _sendRFID *****************
  6056 ;; Defined at:
  6057 ;;		line 16 in file "RFID.c"
  6058 ;; Parameters:    Size  Location     Type
  6059 ;;		None
  6060 ;; Auto vars:     Size  Location     Type
  6061 ;;		None
  6062 ;; Return value:  Size  Location     Type
  6063 ;;                  1    wreg      void 
  6064 ;; Registers used:
  6065 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6066 ;; Tracked objects:
  6067 ;;		On entry : 0/0
  6068 ;;		On exit  : 0/0
  6069 ;;		Unchanged: 0/0
  6070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6071 ;;      Params:         0       0       0       0
  6072 ;;      Locals:         0       0       0       0
  6073 ;;      Temps:          0       0       0       0
  6074 ;;      Totals:         0       0       0       0
  6075 ;;Total ram usage:        0 bytes
  6076 ;; Hardware stack levels used:    1
  6077 ;; Hardware stack levels required when called:    5
  6078 ;; This function calls:
  6079 ;;		_LCD_String
  6080 ;;		_SetLine
  6081 ;;		_getCharSerial
  6082 ;;		i1_SendLCD
  6083 ;; This function is called by:
  6084 ;;		_my_lp_isr
  6085 ;; This function uses a non-reentrant model
  6086 ;;
  6087                           psect	text15,class=CODE,space=0,reloc=2,group=0
  6088                           	file	"RFID.c"
  6089                           	line	16
  6090                           global __ptext15
  6091                           __ptext15:
  6092  000976                     psect	text15
  6093                           	file	"RFID.c"
  6094                           	line	16
  6095                           	global	__size_of_sendRFID
  6096                           	__size_of_sendRFID	equ	__end_of_sendRFID-_sendRFID
  6097  0000                     	
  6098                           _sendRFID:
  6099  000976                     ;incstack = 0
  6100                           	opt	stack 20
  6101                           	line	17
  6102                           	
  6103                           i1l1608:
  6104  000976                     ;RFID.c: 17:     SetLine(1);
  6105                           	call	_getCharSerial	;wreg free
  6106  000976  ECC5  F007         	movwf	((c:_a)),c
  6107  00097A  6E2E               	line	18
  6108                           	
  6109                           i1l1610:
  6110  00097C                     ;RFID.c: 18:     a = getCharSerial();
  6111                           		movlw	2
  6112  00097C  0E02               	xorwf	((c:_a)),c,w
  6113  00097E  182E               	btfss	status,2
  6114  000980  A4D8               	goto	i1u68_21
  6115  000982  EFC5  F004         	goto	i1u68_20
  6116  000986  EFC7  F004         
  6117                           i1u68_21:
  6118  00098A                     	goto	i1l322
  6119  00098A  EF3F  F005         i1u68_20:
  6120  00098E                     	goto	i1l1648
  6121  00098E  EF32  F005         	line	19
  6122                           	
  6123                           i1l1612:
  6124  000992                     ;RFID.c: 19:     if (a==0x02){
  6125                           	goto	i1l1648
  6126  000992  EF32  F005         	
  6127                           i1l311:
  6128  000996                     	line	20
  6129                           	
  6130                           i1l1614:
  6131  000996                     ;RFID.c: 20:         while (a!=0x0A){
  6132                           	call	_getCharSerial	;wreg free
  6133  000996  ECC5  F007         	movwf	((c:_a)),c
  6134  00099A  6E2E               	line	21
  6135                           	
  6136                           i1l1616:
  6137  00099C                     ;RFID.c: 21:             a = getCharSerial();
  6138                           		movlw	0Dh-0
  6139  00099C  0E0D               	cpfslt	((c:_index)),c
  6140  00099E  6032               	goto	i1u69_21
  6141  0009A0  EFD4  F004         	goto	i1u69_20
  6142  0009A4  EFD6  F004         
  6143                           i1u69_21:
  6144  0009A8                     	goto	i1l1648
  6145  0009A8  EF32  F005         i1u69_20:
  6146  0009AC                     	line	22
  6147                           	
  6148                           i1l1618:
  6149  0009AC                     ;RFID.c: 22:             if (index <= 12) {
  6150                           	movlw	low(01h)
  6151  0009AC  0E01               	movwf	((c:i1SendLCD@type)),c
  6152  0009AE  6E05               	movf	((c:_a)),c,w
  6153  0009B0  502E               	
  6154                           	call	i1_SendLCD
  6155  0009B2  EC85  F007         	line	23
  6156                           	
  6157                           i1l1620:
  6158  0009B6                     ;RFID.c: 23:                 SendLCD(a, 1);
  6159                           		movlw	041h-1
  6160  0009B6  0E40               	cpfsgt	((c:_a)),c
  6161  0009B8  642E               	goto	i1u70_21
  6162  0009BA  EFE1  F004         	goto	i1u70_20
  6163  0009BE  EFE3  F004         
  6164                           i1u70_21:
  6165  0009C2                     	goto	i1l1624
  6166  0009C2  EFE8  F004         i1u70_20:
  6167  0009C6                     	line	24
  6168                           	
  6169                           i1l1622:
  6170  0009C6                     ;RFID.c: 24:                 if (a > 64) {
  6171                           	movf	((c:_a)),c,w
  6172  0009C6  502E               	addlw	low(0C9h)
  6173  0009C8  0FC9               	movwf	((c:_a)),c
  6174  0009CA  6E2E               	line	25
  6175                           ;RFID.c: 25:                     a = a - 55;
  6176                           	goto	i1l314
  6177  0009CC  EFEB  F004         	
  6178                           i1l313:
  6179  0009D0                     	line	26
  6180                           	
  6181                           i1l1624:
  6182  0009D0                     ;RFID.c: 26:                 } else {
  6183                           	movf	((c:_a)),c,w
  6184  0009D0  502E               	xorlw	low(030h)
  6185  0009D2  0A30               	movwf	((c:_a)),c
  6186  0009D4  6E2E               	line	29
  6187                           ;RFID.c: 29: 
  6188                           	
  6189                           i1l314:
  6190  0009D6                     	line	30
  6191                           ;RFID.c: 30:                 }
  6192                           	movf	((c:_a)),c,w
  6193  0009D6  502E               	iorwf	((c:_currentVal)),c,w
  6194  0009D8  1030               	movwf	((c:_currentVal)),c
  6195  0009DA  6E30               	line	31
  6196                           	
  6197                           i1l1626:
  6198  0009DC                     ;RFID.c: 31:                 currentVal = (a | currentVal);
  6199                           	
  6200                           	btfss	((c:_index)),c,(0)&7
  6201  0009DC  A032               	goto	i1u71_21
  6202  0009DE  EFF3  F004         	goto	i1u71_20
  6203  0009E2  EFF5  F004         i1u71_21:
  6204  0009E6                     	goto	i1l1630
  6205  0009E6  EFFA  F004         i1u71_20:
  6206  0009EA                     	line	36
  6207                           	
  6208                           i1l1628:
  6209  0009EA                     ;RFID.c: 36: 
  6210                           	swapf	((c:_currentVal)),c,w
  6211  0009EA  3830               	andlw	(0ffh shl 4) & 0ffh
  6212  0009EC  0BF0               	movwf	((c:_currentVal)),c
  6213  0009EE  6E30               	line	37
  6214                           ;RFID.c: 37:                     currentVal = currentVal << 4;
  6215                           	goto	i1l1646
  6216  0009F0  EF2C  F005         	
  6217                           i1l315:
  6218  0009F4                     	line	38
  6219                           	
  6220                           i1l1630:
  6221  0009F4                     ;RFID.c: 38:                 } else {
  6222                           		movlw	0Bh-0
  6223  0009F4  0E0B               	cpfslt	((c:_index)),c
  6224  0009F6  6032               	goto	i1u72_21
  6225  0009F8  EF00  F005         	goto	i1u72_20
  6226  0009FC  EF02  F005         
  6227                           i1u72_21:
  6228  000A00                     	goto	i1l1634
  6229  000A00  EF07  F005         i1u72_20:
  6230  000A04                     	line	39
  6231                           	
  6232                           i1l1632:
  6233  000A04                     ;RFID.c: 39:                     if (index < 11) {
  6234                           	movf	((c:_checkSum)),c,w
  6235  000A04  502F               	xorwf	((c:_currentVal)),c,w
  6236  000A06  1830               	movwf	((c:_checkSum)),c
  6237  000A08  6E2F               	line	40
  6238                           ;RFID.c: 40:                         checkSum = checkSum^currentVal;
  6239                           	goto	i1l1644
  6240  000A0A  EF28  F005         	
  6241                           i1l317:
  6242  000A0E                     	line	41
  6243                           	
  6244                           i1l1634:
  6245  000A0E                     ;RFID.c: 41:                     } else {
  6246                           	movf	((c:_currentVal)),c,w
  6247  000A0E  5030               xorwf	((c:_checkSum)),c,w
  6248  000A10  182F               	btfss	status,2
  6249  000A12  A4D8               	goto	i1u73_21
  6250  000A14  EF0E  F005         	goto	i1u73_20
  6251  000A18  EF10  F005         
  6252                           i1u73_21:
  6253  000A1C                     	goto	i1l1640
  6254  000A1C  EF1B  F005         i1u73_20:
  6255  000A20                     	line	42
  6256                           	
  6257                           i1l1636:
  6258  000A20                     ;RFID.c: 42:                         if (checkSum == currentVal) {
  6259                           	movlw	(02h)&0ffh
  6260  000A20  0E02               	
  6261                           	call	_SetLine
  6262  000A22  ECBC  F006         	line	43
  6263                           	
  6264                           i1l1638:
  6265  000A26                     ;RFID.c: 43:                             SetLine(2);
  6266                           		movlw	low(STR_1)
  6267  000A26  0E04               	movwf	((c:LCD_String@string)),c
  6268  000A28  6E09               	movlw	high(STR_1)
  6269  000A2A  0E03               	movwf	((c:LCD_String@string+1)),c
  6270  000A2C  6E0A               
  6271                           	call	_LCD_String	;wreg free
  6272  000A2E  EC94  F006         	line	44
  6273                           ;RFID.c: 44:                             LCD_String("Match");
  6274                           	goto	i1l1644
  6275  000A32  EF28  F005         	
  6276                           i1l319:
  6277  000A36                     	line	45
  6278                           	
  6279                           i1l1640:
  6280  000A36                     ;RFID.c: 45:                         } else {
  6281                           	movlw	(02h)&0ffh
  6282  000A36  0E02               	
  6283                           	call	_SetLine
  6284  000A38  ECBC  F006         	line	46
  6285                           	
  6286                           i1l1642:
  6287  000A3C                     ;RFID.c: 46:                             SetLine(2);
  6288                           		movlw	low(STR_2)
  6289  000A3C  0E01               	movwf	((c:LCD_String@string)),c
  6290  000A3E  6E09               	movlw	high(STR_2)
  6291  000A40  0E03               	movwf	((c:LCD_String@string+1)),c
  6292  000A42  6E0A               
  6293                           	call	_LCD_String	;wreg free
  6294  000A44  EC94  F006         	goto	i1l1644
  6295  000A48  EF28  F005         	line	47
  6296                           ;RFID.c: 47:                             LCD_String("No Match");
  6297                           	
  6298                           i1l320:
  6299  000A4C                     	goto	i1l1644
  6300  000A4C  EF28  F005         	line	48
  6301                           ;RFID.c: 48:                         }
  6302                           	
  6303                           i1l318:
  6304  000A50                     	line	49
  6305                           	
  6306                           i1l1644:
  6307  000A50                     ;RFID.c: 49:                     }
  6308                           	movlw	low(0)
  6309  000A50  0E00               	movwf	((c:_currentVal)),c
  6310  000A52  6E30               	goto	i1l1646
  6311  000A54  EF2C  F005         	line	50
  6312                           ;RFID.c: 50:                     currentVal = 0;
  6313                           	
  6314                           i1l316:
  6315  000A58                     	line	51
  6316                           	
  6317                           i1l1646:
  6318  000A58                     ;RFID.c: 51:                 }
  6319                           	incf	((c:_index)),c,w
  6320  000A58  2832               	movwf	((c:_index)),c
  6321  000A5A  6E32               	goto	i1l1648
  6322  000A5C  EF32  F005         	line	52
  6323                           ;RFID.c: 52:                 index = index + 1;
  6324                           	
  6325                           i1l312:
  6326  000A60                     	goto	i1l1648
  6327  000A60  EF32  F005         	line	54
  6328                           ;RFID.c: 54: 
  6329                           	
  6330                           i1l310:
  6331  000A64                     	line	19
  6332                           	
  6333                           i1l1648:
  6334  000A64                     ;RFID.c: 19:     if (a==0x02){
  6335                           		movlw	10
  6336  000A64  0E0A               	xorwf	((c:_a)),c,w
  6337  000A66  182E               	btfss	status,2
  6338  000A68  A4D8               	goto	i1u74_21
  6339  000A6A  EF39  F005         	goto	i1u74_20
  6340  000A6E  EF3B  F005         
  6341                           i1u74_21:
  6342  000A72                     	goto	i1l1614
  6343  000A72  EFCB  F004         i1u74_20:
  6344  000A76                     	goto	i1l322
  6345  000A76  EF3F  F005         	
  6346                           i1l321:
  6347  000A7A                     	goto	i1l322
  6348  000A7A  EF3F  F005         	line	55
  6349                           ;RFID.c: 55:     }
  6350                           	
  6351                           i1l309:
  6352  000A7E                     	line	106
  6353                           	
  6354                           i1l322:
  6355  000A7E                     	return	;funcret
  6356  000A7E  0012               	opt stack 0
  6357                           GLOBAL	__end_of_sendRFID
  6358                           	__end_of_sendRFID:
  6359  000A80                     	signat	_sendRFID,89
  6360                           	global	_getCharSerial
  6361                           
  6362 ;; *************** function _getCharSerial *****************
  6363 ;; Defined at:
  6364 ;;		line 36 in file "eusart.c"
  6365 ;; Parameters:    Size  Location     Type
  6366 ;;		None
  6367 ;; Auto vars:     Size  Location     Type
  6368 ;;		None
  6369 ;; Return value:  Size  Location     Type
  6370 ;;                  1    wreg      unsigned char 
  6371 ;; Registers used:
  6372 ;;		wreg, status,2
  6373 ;; Tracked objects:
  6374 ;;		On entry : 0/0
  6375 ;;		On exit  : 0/0
  6376 ;;		Unchanged: 0/0
  6377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6378 ;;      Params:         0       0       0       0
  6379 ;;      Locals:         0       0       0       0
  6380 ;;      Temps:          0       0       0       0
  6381 ;;      Totals:         0       0       0       0
  6382 ;;Total ram usage:        0 bytes
  6383 ;; Hardware stack levels used:    1
  6384 ;; Hardware stack levels required when called:    1
  6385 ;; This function calls:
  6386 ;;		Nothing
  6387 ;; This function is called by:
  6388 ;;		_sendRFID
  6389 ;; This function uses a non-reentrant model
  6390 ;;
  6391                           psect	text16,class=CODE,space=0,reloc=2,group=0
  6392                           	file	"eusart.c"
  6393                           	line	36
  6394                           global __ptext16
  6395                           __ptext16:
  6396  000F8A                     psect	text16
  6397                           	file	"eusart.c"
  6398                           	line	36
  6399                           	global	__size_of_getCharSerial
  6400                           	__size_of_getCharSerial	equ	__end_of_getCharSerial-_getCharSerial
  6401  0000                     	
  6402                           _getCharSerial:
  6403  000F8A                     ;incstack = 0
  6404                           	opt	stack 23
  6405                           	line	37
  6406                           	
  6407                           i1l1494:
  6408  000F8A                     ;eusart.c: 37:     while(!PIR1bits.RCIF);
  6409                           	goto	i1l144
  6410  000F8A  EFC7  F007         	
  6411                           i1l145:
  6412  000F8E                     	
  6413                           i1l144:
  6414  000F8E                     	btfss	((c:3998)),c,5	;volatile
  6415  000F8E  AA9E               	goto	i1u62_21
  6416  000F90  EFCC  F007         	goto	i1u62_20
  6417  000F94  EFCE  F007         i1u62_21:
  6418  000F98                     	goto	i1l144
  6419  000F98  EFC7  F007         i1u62_20:
  6420  000F9C                     	goto	i1l1496
  6421  000F9C  EFD0  F007         	
  6422                           i1l146:
  6423  000FA0                     	line	38
  6424                           	
  6425                           i1l1496:
  6426  000FA0                     ;eusart.c: 38:     return RCREG;
  6427                           	movf	((c:4014)),c,w	;volatile
  6428  000FA0  50AE               	goto	i1l147
  6429  000FA2  EFD3  F007         	
  6430                           i1l1498:
  6431  000FA6                     	line	39
  6432                           	
  6433                           i1l147:
  6434  000FA6                     	return	;funcret
  6435  000FA6  0012               	opt stack 0
  6436                           GLOBAL	__end_of_getCharSerial
  6437                           	__end_of_getCharSerial:
  6438  000FA8                     	signat	_getCharSerial,89
  6439                           	global	_SetLine
  6440                           
  6441 ;; *************** function _SetLine *****************
  6442 ;; Defined at:
  6443 ;;		line 127 in file "LCD.c"
  6444 ;; Parameters:    Size  Location     Type
  6445 ;;  line            1    wreg     unsigned char 
  6446 ;; Auto vars:     Size  Location     Type
  6447 ;;  line            1    8[COMRAM] unsigned char 
  6448 ;; Return value:  Size  Location     Type
  6449 ;;                  1    wreg      void 
  6450 ;; Registers used:
  6451 ;;		wreg, status,2, status,0, cstack
  6452 ;; Tracked objects:
  6453 ;;		On entry : 0/0
  6454 ;;		On exit  : 0/0
  6455 ;;		Unchanged: 0/0
  6456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6457 ;;      Params:         0       0       0       0
  6458 ;;      Locals:         1       0       0       0
  6459 ;;      Temps:          0       0       0       0
  6460 ;;      Totals:         1       0       0       0
  6461 ;;Total ram usage:        1 bytes
  6462 ;; Hardware stack levels used:    1
  6463 ;; Hardware stack levels required when called:    4
  6464 ;; This function calls:
  6465 ;;		i1_SendLCD
  6466 ;; This function is called by:
  6467 ;;		_sendRFID
  6468 ;; This function uses a non-reentrant model
  6469 ;;
  6470                           psect	text17,class=CODE,space=0,reloc=2,group=0
  6471                           	file	"LCD.c"
  6472                           	line	127
  6473                           global __ptext17
  6474                           __ptext17:
  6475  000D78                     psect	text17
  6476                           	file	"LCD.c"
  6477                           	line	127
  6478                           	global	__size_of_SetLine
  6479                           	__size_of_SetLine	equ	__end_of_SetLine-_SetLine
  6480  0000                     	
  6481                           _SetLine:
  6482  000D78                     ;incstack = 0
  6483                           	opt	stack 20
  6484                           ;SetLine@line stored from wreg
  6485                           	movwf	((c:SetLine@line)),c
  6486  000D78  6E09               	line	128
  6487                           	
  6488                           i1l1524:
  6489  000D7A                     ;LCD.c: 128: }
  6490                           		decf	((c:SetLine@line)),c,w
  6491  000D7A  0409               	btfss	status,2
  6492  000D7C  A4D8               	goto	i1u65_21
  6493  000D7E  EFC3  F006         	goto	i1u65_20
  6494  000D82  EFC5  F006         
  6495                           i1u65_21:
  6496  000D86                     	goto	i1l1528
  6497  000D86  EFCC  F006         i1u65_20:
  6498  000D8A                     	line	129
  6499                           	
  6500                           i1l1526:
  6501  000D8A                     	movlw	low(0)
  6502  000D8A  0E00               	movwf	((c:i1SendLCD@type)),c
  6503  000D8C  6E05               	movlw	(080h)&0ffh
  6504  000D8E  0E80               	
  6505                           	call	i1_SendLCD
  6506  000D90  EC85  F007         	line	130
  6507                           	goto	i1l1532
  6508  000D94  EFDE  F006         	
  6509                           i1l253:
  6510  000D98                     	
  6511                           i1l1528:
  6512  000D98                     		movlw	2
  6513  000D98  0E02               	xorwf	((c:SetLine@line)),c,w
  6514  000D9A  1809               	btfss	status,2
  6515  000D9C  A4D8               	goto	i1u66_21
  6516  000D9E  EFD3  F006         	goto	i1u66_20
  6517  000DA2  EFD5  F006         
  6518                           i1u66_21:
  6519  000DA6                     	goto	i1l1532
  6520  000DA6  EFDE  F006         i1u66_20:
  6521  000DAA                     	line	131
  6522                           	
  6523                           i1l1530:
  6524  000DAA                     	movlw	low(0)
  6525  000DAA  0E00               	movwf	((c:i1SendLCD@type)),c
  6526  000DAC  6E05               	movlw	(0C0h)&0ffh
  6527  000DAE  0EC0               	
  6528                           	call	i1_SendLCD
  6529  000DB0  EC85  F007         	goto	i1l1532
  6530  000DB4  EFDE  F006         	line	132
  6531                           	
  6532                           i1l255:
  6533  000DB8                     	goto	i1l1532
  6534  000DB8  EFDE  F006         	
  6535                           i1l254:
  6536  000DBC                     	line	134
  6537                           	
  6538                           i1l1532:
  6539  000DBC                     	opt asmopt_push
  6540                           opt asmopt_off
  6541                           	movlw	33
  6542  000DBC  0E21               i1u117_27:
  6543  000DBE                     decfsz	wreg,f
  6544  000DBE  2EE8               	bra	i1u117_27
  6545  000DC0  D7FE               	nop
  6546  000DC2  F000               opt asmopt_pop
  6547                           
  6548                           	line	135
  6549                           	
  6550                           i1l256:
  6551  000DC4                     	return	;funcret
  6552  000DC4  0012               	opt stack 0
  6553                           GLOBAL	__end_of_SetLine
  6554                           	__end_of_SetLine:
  6555  000DC6                     	signat	_SetLine,4217
  6556                           	global	_LCD_String
  6557                           
  6558 ;; *************** function _LCD_String *****************
  6559 ;; Defined at:
  6560 ;;		line 140 in file "LCD.c"
  6561 ;; Parameters:    Size  Location     Type
  6562 ;;  string          2    8[COMRAM] PTR unsigned char 
  6563 ;;		 -> STR_2(9), STR_1(6), 
  6564 ;; Auto vars:     Size  Location     Type
  6565 ;;		None
  6566 ;; Return value:  Size  Location     Type
  6567 ;;                  1    wreg      void 
  6568 ;; Registers used:
  6569 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6570 ;; Tracked objects:
  6571 ;;		On entry : 0/0
  6572 ;;		On exit  : 0/0
  6573 ;;		Unchanged: 0/0
  6574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6575 ;;      Params:         2       0       0       0
  6576 ;;      Locals:         0       0       0       0
  6577 ;;      Temps:          1       0       0       0
  6578 ;;      Totals:         3       0       0       0
  6579 ;;Total ram usage:        3 bytes
  6580 ;; Hardware stack levels used:    1
  6581 ;; Hardware stack levels required when called:    4
  6582 ;; This function calls:
  6583 ;;		i1_SendLCD
  6584 ;; This function is called by:
  6585 ;;		_sendRFID
  6586 ;; This function uses a non-reentrant model
  6587 ;;
  6588                           psect	text18,class=CODE,space=0,reloc=2,group=0
  6589                           	line	140
  6590                           global __ptext18
  6591                           __ptext18:
  6592  000D28                     psect	text18
  6593                           	file	"LCD.c"
  6594                           	line	140
  6595                           	global	__size_of_LCD_String
  6596                           	__size_of_LCD_String	equ	__end_of_LCD_String-_LCD_String
  6597  0000                     	
  6598                           _LCD_String:
  6599  000D28                     ;incstack = 0
  6600                           	opt	stack 20
  6601                           	line	141
  6602                           	
  6603                           i1l1534:
  6604  000D28                     	goto	i1l1542
  6605  000D28  EFAB  F006         	
  6606                           i1l260:
  6607  000D2C                     	line	142
  6608                           	
  6609                           i1l1536:
  6610  000D2C                     	movlw	low(01h)
  6611  000D2C  0E01               	movwf	((c:i1SendLCD@type)),c
  6612  000D2E  6E05               	movff	(c:LCD_String@string),tblptrl
  6613  000D30  C009  FFF6         	movff	(c:LCD_String@string+1),tblptrh
  6614  000D34  C00A  FFF7         	if	0	;tblptru may be non-zero
  6615  000D38                     	clrf	tblptru
  6617  000D38                     	if	0	;tblptru may be non-zero
  6618  000D38                     	global __mediumconst
  6619                           movlw	low highword(__mediumconst)
  6622  000D38                     	tblrd	*
  6623  000D38  0008               	
  6624                           	movf	tablat,w
  6625  000D3A  50F5               	
  6626                           	call	i1_SendLCD
  6627  000D3C  EC85  F007         	
  6628                           i1l1538:
  6629  000D40                     	infsnz	((c:LCD_String@string)),c
  6630  000D40  4A09               	incf	((c:LCD_String@string+1)),c
  6631  000D42  2A0A               	line	143
  6632                           	
  6633                           i1l1540:
  6634  000D44                     	opt asmopt_push
  6635                           opt asmopt_off
  6636                           movlw	130
  6637  000D44  0E82               movwf	(??_LCD_String+0+0)&0ffh,c,f
  6638  000D46  6E0B               	movlw	222
  6639  000D48  0EDE               i1u118_27:
  6640  000D4A                     decfsz	wreg,f
  6641  000D4A  2EE8               	bra	i1u118_27
  6642  000D4C  D7FE               	decfsz	(??_LCD_String+0+0)&0ffh,c,f
  6643  000D4E  2E0B               	bra	i1u118_27
  6644  000D50  D7FC               opt asmopt_pop
  6645                           
  6646                           	goto	i1l1542
  6647  000D52  EFAB  F006         	line	145
  6648                           	
  6649                           i1l259:
  6650  000D56                     	line	141
  6651                           	
  6652                           i1l1542:
  6653  000D56                     	movff	(c:LCD_String@string),tblptrl
  6654  000D56  C009  FFF6         	movff	(c:LCD_String@string+1),tblptrh
  6655  000D5A  C00A  FFF7         	if	0	;tblptru may be non-zero
  6656  000D5E                     	clrf	tblptru
  6658  000D5E                     	if	0	;tblptru may be non-zero
  6659  000D5E                     	global __mediumconst
  6660                           movlw	low highword(__mediumconst)
  6663  000D5E                     	tblrd	*
  6664  000D5E  0008               	
  6665                           	movf	tablat,w
  6666  000D60  50F5               	iorlw	0
  6667  000D62  0900               	btfss	status,2
  6668  000D64  A4D8               	goto	i1u67_21
  6669  000D66  EFB7  F006         	goto	i1u67_20
  6670  000D6A  EFB9  F006         i1u67_21:
  6671  000D6E                     	goto	i1l1536
  6672  000D6E  EF96  F006         i1u67_20:
  6673  000D72                     	goto	i1l262
  6674  000D72  EFBB  F006         	
  6675                           i1l261:
  6676  000D76                     	line	146
  6677                           	
  6678                           i1l262:
  6679  000D76                     	return	;funcret
  6680  000D76  0012               	opt stack 0
  6681                           GLOBAL	__end_of_LCD_String
  6682                           	__end_of_LCD_String:
  6683  000D78                     	signat	_LCD_String,4217
  6684                           	global	i1_SendLCD
  6685                           
  6686 ;; *************** function i1_SendLCD *****************
  6687 ;; Defined at:
  6688 ;;		line 49 in file "LCD.c"
  6689 ;; Parameters:    Size  Location     Type
  6690 ;;  Byte            1    wreg     unsigned char 
  6691 ;;  type            1    4[COMRAM] unsigned char 
  6692 ;; Auto vars:     Size  Location     Type
  6693 ;;  Byte            1    7[COMRAM] unsigned char 
  6694 ;;  SendLCD         1    6[COMRAM] unsigned char 
  6695 ;;  SendLCD         1    5[COMRAM] unsigned char 
  6696 ;; Return value:  Size  Location     Type
  6697 ;;                  1    wreg      void 
  6698 ;; Registers used:
  6699 ;;		wreg, status,2, status,0, cstack
  6700 ;; Tracked objects:
  6701 ;;		On entry : 0/0
  6702 ;;		On exit  : 0/0
  6703 ;;		Unchanged: 0/0
  6704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6705 ;;      Params:         1       0       0       0
  6706 ;;      Locals:         3       0       0       0
  6707 ;;      Temps:          0       0       0       0
  6708 ;;      Totals:         4       0       0       0
  6709 ;;Total ram usage:        4 bytes
  6710 ;; Hardware stack levels used:    1
  6711 ;; Hardware stack levels required when called:    3
  6712 ;; This function calls:
  6713 ;;		i1_LCDout
  6714 ;; This function is called by:
  6715 ;;		_SetLine
  6716 ;;		_LCD_String
  6717 ;;		_sendRFID
  6718 ;; This function uses a non-reentrant model
  6719 ;;
  6720                           psect	text19,class=CODE,space=0,reloc=2,group=0
  6721                           	line	49
  6722                           global __ptext19
  6723                           __ptext19:
  6724  000F0A                     psect	text19
  6725                           	file	"LCD.c"
  6726                           	line	49
  6727                           	global	__size_ofi1_SendLCD
  6728                           	__size_ofi1_SendLCD	equ	__end_ofi1_SendLCD-i1_SendLCD
  6729  0000                     	
  6730                           i1_SendLCD:
  6731  000F0A                     ;incstack = 0
  6732                           	opt	stack 21
  6733                           ;i1SendLCD@Byte stored from wreg
  6734                           	movwf	((c:i1SendLCD@Byte)),c
  6735  000F0A  6E08               	line	52
  6736                           	
  6737                           i1l1470:
  6738  000F0C                     ;LCD.c: 52: void initLCD(void){
  6739                           	btfsc	(c:i1SendLCD@type),c,0
  6740  000F0C  B005               	bra	i1u60_25
  6741  000F0E  D002               	bcf	((c:3977)),c,6	;volatile
  6742  000F10  9C89               	bra	i1u60_26
  6743  000F12  D001               	i1u60_25:
  6744  000F14                     	bsf	((c:3977)),c,6	;volatile
  6745  000F14  8C89               	i1u60_26:
  6746  000F16                     
  6747                           	line	54
  6748                           	
  6749                           i1l1472:
  6750  000F16                     ;LCD.c: 54: 
  6751                           	movf	((c:i1SendLCD@Byte)),c,w
  6752  000F16  5008               	andlw	low(0F0h)
  6753  000F18  0BF0               	movwf	((c:i1SendLCD@HighBits)),c
  6754  000F1A  6E06               	line	55
  6755                           ;LCD.c: 55:     LATAbits.LATA6=0;
  6756                           	movf	((c:i1SendLCD@Byte)),c,w
  6757  000F1C  5008               	andlw	low(0Fh)
  6758  000F1E  0B0F               	movwf	((c:i1SendLCD@LowBits)),c
  6759  000F20  6E07               	line	58
  6760                           	
  6761                           i1l1474:
  6762  000F22                     ;LCD.c: 58:     LATCbits.LATC0 =0;
  6763                           	swapf	((c:i1SendLCD@HighBits)),c,w
  6764  000F22  3806               	andlw	(0ffh shr 4) & 0ffh
  6765  000F24  0B0F               	
  6766                           	call	i1_LCDout
  6767  000F26  EC4B  F007         	line	59
  6768                           	
  6769                           i1l1476:
  6770  000F2A                     ;LCD.c: 59:     TRISCbits.RC0=0;
  6771                           	opt asmopt_push
  6772                           opt asmopt_off
  6773                           	movlw	6
  6774  000F2A  0E06               i1u119_27:
  6775  000F2C                     decfsz	wreg,f
  6776  000F2C  2EE8               	bra	i1u119_27
  6777  000F2E  D7FE               	nop2
  6778  000F30  D000               opt asmopt_pop
  6779                           
  6780                           	line	62
  6781                           	
  6782                           i1l1478:
  6783  000F32                     ;LCD.c: 62:     TRISCbits.RC1=0;
  6784                           	movf	((c:i1SendLCD@LowBits)),c,w
  6785  000F32  5007               	
  6786                           	call	i1_LCDout
  6787  000F34  EC4B  F007         	line	63
  6788                           	
  6789                           i1l1480:
  6790  000F38                     ;LCD.c: 63: 
  6791                           	opt asmopt_push
  6792                           opt asmopt_off
  6793                           	movlw	6
  6794  000F38  0E06               i1u120_27:
  6795  000F3A                     decfsz	wreg,f
  6796  000F3A  2EE8               	bra	i1u120_27
  6797  000F3C  D7FE               	nop2
  6798  000F3E  D000               opt asmopt_pop
  6799                           
  6800                           	line	65
  6801                           	
  6802                           i1l247:
  6803  000F40                     	return	;funcret
  6804  000F40  0012               	opt stack 0
  6805                           GLOBAL	__end_ofi1_SendLCD
  6806                           	__end_ofi1_SendLCD:
  6807  000F42                     	signat	i1_SendLCD,89
  6808                           	global	i1_LCDout
  6809                           
  6810 ;; *************** function i1_LCDout *****************
  6811 ;; Defined at:
  6812 ;;		line 34 in file "LCD.c"
  6813 ;; Parameters:    Size  Location     Type
  6814 ;;  number          1    wreg     unsigned char 
  6815 ;; Auto vars:     Size  Location     Type
  6816 ;;  number          1    3[COMRAM] unsigned char 
  6817 ;; Return value:  Size  Location     Type
  6818 ;;                  1    wreg      void 
  6819 ;; Registers used:
  6820 ;;		wreg, status,2, status,0, cstack
  6821 ;; Tracked objects:
  6822 ;;		On entry : 0/0
  6823 ;;		On exit  : 0/0
  6824 ;;		Unchanged: 0/0
  6825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6826 ;;      Params:         0       0       0       0
  6827 ;;      Locals:         1       0       0       0
  6828 ;;      Temps:          2       0       0       0
  6829 ;;      Totals:         3       0       0       0
  6830 ;;Total ram usage:        3 bytes
  6831 ;; Hardware stack levels used:    1
  6832 ;; Hardware stack levels required when called:    2
  6833 ;; This function calls:
  6834 ;;		i1_E_TOG
  6835 ;; This function is called by:
  6836 ;;		i1_SendLCD
  6837 ;; This function uses a non-reentrant model
  6838 ;;
  6839                           psect	text20,class=CODE,space=0,reloc=2,group=0
  6840                           	line	34
  6841                           global __ptext20
  6842                           __ptext20:
  6843  000E96                     psect	text20
  6844                           	file	"LCD.c"
  6845                           	line	34
  6846                           	global	__size_ofi1_LCDout
  6847                           	__size_ofi1_LCDout	equ	__end_ofi1_LCDout-i1_LCDout
  6848  0000                     	
  6849                           i1_LCDout:
  6850  000E96                     ;incstack = 0
  6851                           	opt	stack 21
  6852                           ;i1LCDout@number stored from wreg
  6853                           	movwf	((c:i1LCDout@number)),c
  6854  000E96  6E04               	line	39
  6855                           	
  6856                           i1l1436:
  6857  000E98                     ;LCD.c: 39: 
  6858                           	movff	(c:3979),??i1_LCDout+0+0	;volatile
  6859  000E98  CF8B F002          	movlw	0F9h
  6860  000E9C  0EF9               	andwf	(??i1_LCDout+0+0),c
  6861  000E9E  1602               	movff	(c:i1LCDout@number),??i1_LCDout+1+0
  6862  000EA0  C004  F003         	movlw	03h
  6863  000EA4  0E03               	andwf	(??i1_LCDout+1+0),c
  6864  000EA6  1603               	bcf	status,0
  6865  000EA8  90D8               	rlcf	(??i1_LCDout+1+0),c,w
  6866  000EAA  3403               	iorwf	(??i1_LCDout+0+0),c,w
  6867  000EAC  1002               	movwf	((c:3979)),c	;volatile
  6868  000EAE  6E8B               	line	41
  6869                           ;LCD.c: 41:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  6870                           	movff	(c:3980),??i1_LCDout+0+0	;volatile
  6871  000EB0  CF8C F002          	movlw	0FCh
  6872  000EB4  0EFC               	andwf	(??i1_LCDout+0+0),c
  6873  000EB6  1602               	rrncf	((c:i1LCDout@number)),c,w
  6874  000EB8  4004               	rrncf	wreg
  6875  000EBA  42E8               	andlw	(0ffh shr 2) & 0ffh
  6876  000EBC  0B3F               	andlw	low(03h)
  6877  000EBE  0B03               	iorwf	(??i1_LCDout+0+0),c,w
  6878  000EC0  1002               	movwf	((c:3980)),c	;volatile
  6879  000EC2  6E8C               	line	42
  6880                           	
  6881                           i1l1438:
  6882  000EC4                     ;LCD.c: 42: 
  6883                           	call	i1_E_TOG	;wreg free
  6884  000EC4  ECE7  F007         	line	43
  6885                           	
  6886                           i1l1440:
  6887  000EC8                     ;LCD.c: 43: 
  6888                           	opt asmopt_push
  6889                           opt asmopt_off
  6890                           	movlw	3
  6891  000EC8  0E03               i1u121_27:
  6892  000ECA                     decfsz	wreg,f
  6893  000ECA  2EE8               	bra	i1u121_27
  6894  000ECC  D7FE               	nop
  6895  000ECE  F000               opt asmopt_pop
  6896                           
  6897                           	line	44
  6898                           	
  6899                           i1l244:
  6900  000ED0                     	return	;funcret
  6901  000ED0  0012               	opt stack 0
  6902                           GLOBAL	__end_ofi1_LCDout
  6903                           	__end_ofi1_LCDout:
  6904  000ED2                     	signat	i1_LCDout,89
  6905                           	global	i1_E_TOG
  6906                           
  6907 ;; *************** function i1_E_TOG *****************
  6908 ;; Defined at:
  6909 ;;		line 24 in file "LCD.c"
  6910 ;; Parameters:    Size  Location     Type
  6911 ;;		None
  6912 ;; Auto vars:     Size  Location     Type
  6913 ;;		None
  6914 ;; Return value:  Size  Location     Type
  6915 ;;                  1    wreg      void 
  6916 ;; Registers used:
  6917 ;;		wreg
  6918 ;; Tracked objects:
  6919 ;;		On entry : 0/0
  6920 ;;		On exit  : 0/0
  6921 ;;		Unchanged: 0/0
  6922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6923 ;;      Params:         0       0       0       0
  6924 ;;      Locals:         0       0       0       0
  6925 ;;      Temps:          0       0       0       0
  6926 ;;      Totals:         0       0       0       0
  6927 ;;Total ram usage:        0 bytes
  6928 ;; Hardware stack levels used:    1
  6929 ;; Hardware stack levels required when called:    1
  6930 ;; This function calls:
  6931 ;;		Nothing
  6932 ;; This function is called by:
  6933 ;;		i1_LCDout
  6934 ;; This function uses a non-reentrant model
  6935 ;;
  6936                           psect	text21,class=CODE,space=0,reloc=2,group=0
  6937                           	line	24
  6938                           global __ptext21
  6939                           __ptext21:
  6940  000FCE                     psect	text21
  6941                           	file	"LCD.c"
  6942                           	line	24
  6943                           	global	__size_ofi1_E_TOG
  6944                           	__size_ofi1_E_TOG	equ	__end_ofi1_E_TOG-i1_E_TOG
  6945  0000                     	
  6946                           i1_E_TOG:
  6947  000FCE                     ;incstack = 0
  6948                           	opt	stack 21
  6949                           	line	25
  6950                           	
  6951                           i1l1418:
  6952  000FCE                     ;LCD.c: 25:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  6953                           	bsf	((c:3979)),c,0	;volatile
  6954  000FCE  808B               	line	26
  6955                           	
  6956                           i1l1420:
  6957  000FD0                     ;LCD.c: 26: }
  6958                           	opt asmopt_push
  6959                           opt asmopt_off
  6960                           	movlw	3
  6961  000FD0  0E03               i1u122_27:
  6962  000FD2                     decfsz	wreg,f
  6963  000FD2  2EE8               	bra	i1u122_27
  6964  000FD4  D7FE               	nop
  6965  000FD6  F000               opt asmopt_pop
  6966                           
  6967                           	line	27
  6968                           	
  6969                           i1l1422:
  6970  000FD8                     ;LCD.c: 27: 
  6971                           	bcf	((c:3979)),c,0	;volatile
  6972  000FD8  908B               	line	28
  6973                           	
  6974                           i1l241:
  6975  000FDA                     	return	;funcret
  6976  000FDA  0012               	opt stack 0
  6977                           GLOBAL	__end_ofi1_E_TOG
  6978                           	__end_ofi1_E_TOG:
  6979  000FDC                     	signat	i1_E_TOG,89
  6980                           	global	_my_hp_isr
  6981                           
  6982 ;; *************** function _my_hp_isr *****************
  6983 ;; Defined at:
  6984 ;;		line 262 in file "main.c"
  6985 ;; Parameters:    Size  Location     Type
  6986 ;;		None
  6987 ;; Auto vars:     Size  Location     Type
  6988 ;;		None
  6989 ;; Return value:  Size  Location     Type
  6990 ;;                  1    wreg      void 
  6991 ;; Registers used:
  6992 ;;		wreg, status,2, status,0
  6993 ;; Tracked objects:
  6994 ;;		On entry : 0/0
  6995 ;;		On exit  : 0/0
  6996 ;;		Unchanged: 0/0
  6997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6998 ;;      Params:         0       0       0       0
  6999 ;;      Locals:         0       0       0       0
  7000 ;;      Temps:          1       0       0       0
  7001 ;;      Totals:         1       0       0       0
  7002 ;;Total ram usage:        1 bytes
  7003 ;; Hardware stack levels used:    1
  7004 ;; This function calls:
  7005 ;;		Nothing
  7006 ;; This function is called by:
  7007 ;;		Interrupt level 2
  7008 ;; This function uses a non-reentrant model
  7009 ;;
  7010                           psect	intcode,class=CODE,space=0,reloc=2
  7011                           global __pintcode
  7012                           __pintcode:
  7013  000008                     psect	intcode
  7014                           	file	"main.c"
  7015                           	line	262
  7016                           	global	__size_of_my_hp_isr
  7017                           	__size_of_my_hp_isr	equ	__end_of_my_hp_isr-_my_hp_isr
  7018  0000                     	
  7019                           _my_hp_isr:
  7020  000008                     ;incstack = 0
  7021                           	opt	stack 20
  7022                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
  7023  000008  8233               	global	int_func
  7024                           	goto	int_func
  7025  00000A  EFA3  F005         psect	intcode_body,class=CODE,space=0,reloc=2
  7026                           global __pintcode_body
  7027                           __pintcode_body:
  7028  000B46                     int_func:
  7029  000B46                     	line	265
  7030                           	
  7031                           i2l1804:
  7032  000B46                     ;main.c: 265:     if (INTCONbits.INT0IF){
  7033                           	btfss	((c:4082)),c,1	;volatile
  7034  000B46  A2F2               	goto	i2u93_41
  7035  000B48  EFA8  F005         	goto	i2u93_40
  7036  000B4C  EFAA  F005         i2u93_41:
  7037  000B50                     	goto	i2l111
  7038  000B50  EFDD  F005         i2u93_40:
  7039  000B54                     	line	267
  7040                           	
  7041                           i2l1806:
  7042  000B54                     ;main.c: 267:         debouncer +=1;
  7043                           	incf	((c:_debouncer)),c
  7044  000B54  2A31               	line	269
  7045                           	
  7046                           i2l1808:
  7047  000B56                     ;main.c: 269:         if (debouncer == 30){
  7048                           		movlw	30
  7049  000B56  0E1E               	xorwf	((c:_debouncer)),c,w
  7050  000B58  1831               	btfss	status,2
  7051  000B5A  A4D8               	goto	i2u94_41
  7052  000B5C  EFB2  F005         	goto	i2u94_40
  7053  000B60  EFB4  F005         
  7054                           i2u94_41:
  7055  000B64                     	goto	i2l111
  7056  000B64  EFDD  F005         i2u94_40:
  7057  000B68                     	line	270
  7058                           	
  7059                           i2l1810:
  7060  000B68                     ;main.c: 270:             IRsource = 0;
  7061                           	movlw	low(0)
  7062  000B68  0E00               	movlb	1	; () banked
  7063  000B6A  0101               	movwf	((_IRsource))&0ffh
  7064  000B6C  6FCE               	line	271
  7065                           ;main.c: 271:             debouncer = 0;
  7066                           	movlw	low(0)
  7067  000B6E  0E00               	movwf	((c:_debouncer)),c
  7068  000B70  6E31               	line	273
  7069                           ;main.c: 273:             RFIDread = 0;
  7070                           	movlw	low(0)
  7071  000B72  0E00               	movwf	((_RFIDread))&0ffh
  7072  000B74  6FCF               	line	274
  7073                           ;main.c: 274:             robotOn = !robotOn;
  7074                           	movf	((_robotOn))&0ffh,w
  7075  000B76  51D0               	btfsc	status,2
  7076  000B78  B4D8               	goto	i2u95_41
  7077  000B7A  EFC1  F005         	goto	i2u95_40
  7078  000B7E  EFC4  F005         i2u95_41:
  7079  000B82                     	movlw	1
  7080  000B82  0E01               	goto	i2u96_40
  7081  000B84  EFC5  F005         i2u95_40:
  7082  000B88                     	movlw	0
  7083  000B88  0E00               i2u96_40:
  7084  000B8A                     	movwf	((_robotOn))&0ffh
  7085  000B8A  6FD0               	line	275
  7086                           ;main.c: 275:             reset=1;
  7087                           	movlw	low(01h)
  7088  000B8C  0E01               	movwf	((_reset))&0ffh
  7089  000B8E  6FE3               	line	276
  7090                           	
  7091                           i2l1812:; BSR set to: 1
  7092  000B90                     
  7093                           ;main.c: 276:             LATCbits.LATC4=!LATCbits.LATC4;
  7094                           	btfss	((c:3979)),c,4	;volatile
  7095  000B90  A88B               	goto	i2u97_41
  7096  000B92  EFCD  F005         	goto	i2u97_40
  7097  000B96  EFD1  F005         i2u97_41:
  7098  000B9A                     	clrf	(??_my_hp_isr+0+0)&0ffh,c
  7099  000B9A  6A01               	incf	(??_my_hp_isr+0+0)&0ffh,c
  7100  000B9C  2A01               	goto	i2u98_48
  7101  000B9E  EFD2  F005         i2u97_40:
  7102  000BA2                     	clrf	(??_my_hp_isr+0+0)&0ffh,c
  7103  000BA2  6A01               i2u98_48:
  7104  000BA4                     	swapf	(??_my_hp_isr+0+0),c
  7105  000BA4  3A01               	movf	((c:3979)),c,w	;volatile
  7106  000BA6  508B               	xorwf	(??_my_hp_isr+0+0),c,w
  7107  000BA8  1801               	andlw	not (((1<<1)-1)<<4)
  7108  000BAA  0BEF               	xorwf	(??_my_hp_isr+0+0),c,w
  7109  000BAC  1801               	movwf	((c:3979)),c	;volatile
  7110  000BAE  6E8B               	line	277
  7111                           	
  7112                           i2l1814:
  7113  000BB0                     ;main.c: 277:             INTCONbits.INT0IF=0;
  7114                           	bcf	((c:4082)),c,1	;volatile
  7115  000BB0  92F2               	goto	i2l111
  7116  000BB2  EFDD  F005         	line	278
  7117                           ;main.c: 278:         }
  7118                           	
  7119                           i2l110:
  7120  000BB6                     	goto	i2l111
  7121  000BB6  EFDD  F005         	line	281
  7122                           ;main.c: 281:     }
  7123                           	
  7124                           i2l109:
  7125  000BBA                     	line	282
  7126                           	
  7127                           i2l111:
  7128  000BBA                     	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  7129  000BBA  9233               	retfie f
  7130  000BBC  0011               	opt stack 0
  7131                           GLOBAL	__end_of_my_hp_isr
  7132                           	__end_of_my_hp_isr:
  7133  000BBE                     	signat	_my_hp_isr,89
  7134                           psect	smallconst
  7135                           	db 0	; dummy byte at the end
  7136  00030A  00                 	global	__smallconst
  7137                           	global	__mediumconst
  7138                           	GLOBAL	__activetblptr
  7139                           __activetblptr	EQU	1
  7140  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  7141                           	PSECT	rparam,class=COMRAM,space=1,noexec
  7142                           	GLOBAL	__Lrparam
  7143                           	FNCONF	rparam,??,?
  7144                           	GLOBAL	___rparam_used
  7145                           	___rparam_used EQU 1
  7146  0000                     	GLOBAL	___param_bank
  7147                           	___param_bank EQU 0
  7148  0000                     GLOBAL	__Lparam, __Hparam
  7149                           GLOBAL	__Lrparam, __Hrparam
  7150                           __Lparam	EQU	__Lrparam
  7151  0000                     __Hparam	EQU	__Hrparam
  7152  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
  7153                           	global	btemp
  7154                           btemp:
  7155  000033                     	ds	1
  7156  000033                     	global	int$flags
  7157                           	int$flags	set btemp
  7158  0000                     	global	wtemp8
  7159                           	wtemp8 set btemp+1
  7160  0000                     	global	ttemp5
  7161                           	ttemp5 set btemp+1
  7162  0000                     	global	ttemp6
  7163                           	ttemp6 set btemp+4
  7164  0000                     	global	ttemp7
  7165                           	ttemp7 set btemp+8
  7166  0000                     	end


Data Sizes:
    Strings     9
    Constant    0
    Data        2
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      50
    BANK0           160      0       0
    BANK1           256    206     228
    BANK2           256      0       0

Pointer List with Targets:

    findStrengths@rightIR	PTR int  size(2) Largest target is 2
		 -> main@rightIR(BANK1[2]), 

    findStrengths@leftIR	PTR int  size(2) Largest target is 2
		 -> main@leftIR(BANK1[2]), 

    LCD_String@string	PTR unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), STR_1(CODE[6]), 

    move@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    move@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    move@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    move@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    move@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    move@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    stop@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    stop@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    setMotorsFullSpeed@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    setMotorsFullSpeed@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    setMotorsFullSpeed@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    setMotorsFullSpeed@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    setMotorsFullSpeed@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    setMotorsFullSpeed@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    setMotorPWM@m.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), motorR(BANK1[9]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    motorR.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    S24DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    S24DC_motor$dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    motorL.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_move
    _move->_setMotorsFullSpeed
    _move->_stop
    _stop->_setMotorPWM
    _setMotorsFullSpeed->_setMotorPWM
    _setMotorPWM->___wmul
    _initLCD->_SendLCD
    _SendLCD->_LCDout

Critical Paths under _my_lp_isr in COMRAM

    _sendRFID->_LCD_String
    _SetLine->i1_SendLCD
    _LCD_String->i1_SendLCD
    i1_SendLCD->i1_LCDout

Critical Paths under _my_hp_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _my_lp_isr in BANK0

    None.

Critical Paths under _my_hp_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_lp_isr in BANK1

    None.

Critical Paths under _my_hp_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_lp_isr in BANK2

    None.

Critical Paths under _my_hp_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               209   209      0    9941
                                             42 COMRAM     3     3      0
                                              0 BANK1    206   206      0
                      _findStrengths
                         _initEusart
                             _initIR
                            _initLCD
                            _initPWM
                               _move
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _move                                                 5     0      5    4632
                                             37 COMRAM     5     0      5
                 _setMotorsFullSpeed
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    1810
                                             32 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorsFullSpeed                                   5     1      4    1506
                                             32 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          8     6      2    1244
                                             24 COMRAM     8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     257
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _initPWM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     780
                                             25 COMRAM     1     1      0
                             _LCDout
                            _SendLCD
 ---------------------------------------------------------------------------------
 (2) _SendLCD                                              4     3      1     736
                                             21 COMRAM     4     3      1
                             _LCDout
 ---------------------------------------------------------------------------------
 (3) _LCDout                                               3     3      0      44
                                             18 COMRAM     3     3      0
                              _E_TOG
 ---------------------------------------------------------------------------------
 (4) _E_TOG                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initIR                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initEusart                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _findStrengths                                        8     4      4     652
                                             18 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _my_lp_isr                                            7     7      0    1021
                                             11 COMRAM     7     7      0
                           _sendRFID
 ---------------------------------------------------------------------------------
 (6) _sendRFID                                             0     0      0    1021
                         _LCD_String
                            _SetLine
                      _getCharSerial
                          i1_SendLCD
 ---------------------------------------------------------------------------------
 (7) _getCharSerial                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _SetLine                                              1     1      0     304
                                              8 COMRAM     1     1      0
                          i1_SendLCD
 ---------------------------------------------------------------------------------
 (7) _LCD_String                                           3     1      2     457
                                              8 COMRAM     3     1      2
                          i1_SendLCD
 ---------------------------------------------------------------------------------
 (7) i1_SendLCD                                            4     3      1     260
                                              4 COMRAM     4     3      1
                           i1_LCDout
 ---------------------------------------------------------------------------------
 (8) i1_LCDout                                             3     3      0      44
                                              1 COMRAM     3     3      0
                            i1_E_TOG
 ---------------------------------------------------------------------------------
 (9) i1_E_TOG                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _my_hp_isr                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _findStrengths
   _initEusart
   _initIR
   _initLCD
     _LCDout
       _E_TOG
     _SendLCD
       _LCDout
         _E_TOG
   _initPWM
   _move
     _setMotorsFullSpeed
       _setMotorPWM
         ___wmul
     _stop
       _setMotorPWM
         ___wmul
   _setMotorPWM
     ___wmul
   _stop
     _setMotorPWM
       ___wmul

 _my_lp_isr (ROOT)
   _sendRFID
     _LCD_String
       i1_SendLCD
         i1_LCDout
           i1_E_TOG
     _SetLine
       i1_SendLCD
         i1_LCDout
           i1_E_TOG
     _getCharSerial
     i1_SendLCD
       i1_LCDout
         i1_E_TOG

 _my_hp_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     CE      E4       7       89.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      32       1       53.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     116       3        0.0%
DATA                 0      0     116      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Dec 09 21:51:38 2019

                          _a 002E                           l70 03C4                           l71 070C  
                         l80 04EA                           l72 0426                           l81 0708  
                         l73 03DE                           l90 0700                           l82 0624  
                         l91 06B6                           l83 05DA                           l75 0484  
                         l67 0314                           l92 0654                           l84 0578  
                         l76 0488                           l68 0314                           l93 06B0  
                         l85 05D4                           l77 0502                           l69 0322  
                         l78 04D4                           l95 06F4                           l87 0618  
                         l79 04A4                           l96 06F8                           l88 061C  
                         l97 079A                           l89 0704                           l98 0796  
                         l99 0756                           bsr 000FE0          ___wmul@multiplicand 0015  
                ?_LCD_String 0009                          l100 073C                          l101 076A  
                        l102 079E                          l103 07A2                          l104 07A2  
                        l201 0860                          l202 089C                          l210 0C7C  
                        l203 0944                          l211 0C7C                          l204 0974  
                        l220 0D26                          l141 0FBE                          l205 0974  
                        l214 0C00                          l215 0BC2                          l208 0C60  
                        l216 0C1C                          l241 0FCC                          l209 0C22  
                        l217 0C1C                          l250 0B44                          l244 0E94  
                        l325 0F6A                          l247 0F08                          l290 0E58  
                        l198 0CD6                          l287 0F88                          u520 07F4  
                        u521 07F0                          u610 0C18                          u611 0C14  
                        u630 0C78                          u535 0800                          u631 0C74  
                        u800 0480                          u545 0818                          u801 047C  
                        u570 0916                          u810 049C                          u571 0912  
                        u555 086C                          u811 0498                          u900 06F0  
                        u820 04E6                          u645 0EDC                          u565 0884  
                        u901 06EC                          u821 04E2                          u646 0EDE  
                        u910 071C                          u830 0572                          u750 0322  
                        u911 0718                          u831 056E                          u751 031E  
                        u584 0934                          u920 0766                          u840 05A0  
                        u760 03D6                          u585 0930                          u921 0762  
                        u841 059C                          u761 03D2                          u594 0962  
                        u850 0604                          u770 0444                          u595 095E  
                        u851 0600                          u771 0440                          u860 0614  
                        u780 0460                          u861 0610                          u781 045C  
                        u870 064E                          u790 0470                          u871 064A  
                        u791 046C                          u880 067C                          u881 0678  
                        u890 06E0                          u891 06DC                          prod 000FF3  
                        wreg 000FE8                 __CFG_LVP$OFF 000000                         l1500 0C1E  
                       l1430 0F42                         l1502 0C22                         l1510 0C60  
                       l1424 0FC0                         l1520 0EFA                         l1512 0ED4  
                       l1432 0F5E                         l1504 0C3A                         l1600 0CD8  
                       l1426 0FC2                         l1522 0F00                         l1514 0EDE  
                       l1434 0F6A                         l1450 0860                         l1442 07A6  
                       l1506 0C44                         l1602 0CFE                         l1428 0FCA  
                       l1516 0EEA                         l1460 0916                         l1452 089C  
                       l1444 07D8                         l1508 0C52                         l1604 0D12  
                       l1700 03DA                         l1606 0E10                         l1550 0FB6  
                       l1518 0EF2                         l1462 0944                         l1454 08B8  
                       l1446 07F4                         l1702 03DE                         l1710 0426  
                       l1552 0FB8                         l1544 0FA8                         l1464 0E5C  
                       l1560 0C8E                         l1456 08D8                         l1448 082C  
                       l1800 077A                         l1720 048C                         l1712 0444  
                       l1704 03F6                         l1554 0FBA                         l1546 0FAC  
                       l1466 0E88                         l1570 0AC0                         l1562 0A80  
                       l1458 08FA                         l1490 0BF2                         l1482 0BBE  
                       l1802 0786                         l1730 04EA                         l1722 04A0  
                       l1714 0460                         l1706 040C                         l1650 030C  
                       l1556 0FBC                         l1548 0FB4                         l1468 0E8C  
                       l1580 0AF6                         l1572 0AC8                         l1564 0A98  
                       l1484 0BC2                         l1492 0C00                         l1740 0546  
                       l1724 04A4                         l1732 0502                         l1716 0470  
                       l1708 040E                         l1660 0340                         l1652 0336  
                       l1590 0F6C                         l1582 0B08                         l1574 0AD6  
                       l1566 0AA6                         l1558 0C7E                         l1486 0BDA  
                       l1750 05B8                         l1742 0572                         l1734 051A  
                       l1726 04A6                         l1718 0488                         l1670 034C  
                       l1662 0342                         l1654 033A                         l1592 0F74  
                       l1584 0B12                         l1576 0ADC                         l1568 0AAC  
                       l1488 0BE4                         l1760 061C                         l1752 05CE  
                       l1744 0578                         l1736 0530                         l1728 04D4  
                       l1680 0372                         l1672 0350                         l1664 0344  
                       l1656 033C                         l1594 0F76                         l1586 0B2A  
                       l1578 0AEE                         l1770 067C                         l1754 05D4  
                       l1746 058C                         l1762 0624                         l1738 0532  
                       l1690 039A                         l1682 0376                         l1674 0354  
                       l1666 0346                         l1658 033E                         l1596 0F78  
                       l1588 0B32                         l1780 06E0                         l1772 0694  
                       l1764 064E                         l1748 05A0                         l1756 05DA  
                       l1692 03A2                         l1684 037E                         l1676 0358  
                       l1668 0348                         l1598 0F7A                         l1790 0736  
                       l1782 06F8                         l1774 06AA                         l1766 0654  
                       l1758 0604                         l1694 03AE                         l1686 0382  
                       l1678 035E                         l1792 073C                         l1776 06B0  
                       l1768 0668                         l1784 070C                         l1696 03BA  
                       l1688 0396                         l1794 073E                         l1786 071C  
                       l1778 06B6                         l1698 03C0                         l1796 0756  
                       l1788 0730                         l1798 076A                         STR_1 0304  
                       STR_2 0301                         u1017 0BEA                         u1107 0B18  
                       u1027 0C4A                         u1117 0B2C                         u1037 0A9E  
                       u1127 0B3E                         u1047 0AB2                         u1137 0EF4  
                       u1057 0AC2                         u1147 0F02                         u1067 0AD0  
                       u1157 0E8E                         u1077 0ADE                         _LATB 000F8A  
                       u1167 0FC4                         u1087 0AF0                         _LATC 000F8B  
                       _LATD 000F8C                         u1097 0B02                         _PIR1 000F9E  
            __end_ofi1_E_TOG 0FDC              ??_findStrengths 0017                  main@rightIR 01CB  
                       _main 030C                         _move 0CD8                         fsr2h 000FDA  
                       indf2 000FDF                         fsr2l 000FD9                         btemp 0033  
                       _stop 0BBE                         prodh 000FF4                         prodl 000FF3  
                       start 0090                 ___param_bank 000000              __end_of_SendLCD 0F0A  
            __end_of_SetLine 0DC6                        ?_main 0001                        ?_move 0026  
                      ?_stop 0021                        _PDC0H 000F78                        _PDC1H 000F76  
                      _PDC0L 000F79                        _PDC2H 000F74                        _PDC1L 000F77  
                      _PDC3H 000F72                        _PDC2L 000F75                        _PDC3L 000F73  
                      _T5CON 000FB7                        i1l116 0070                        i1l117 006A  
                      i1l310 0A64                        i1l118 0070                        i1l311 0996  
                      i1l144 0F8E                        i1l312 0A60                        i1l320 0A4C  
                      i1l241 0FDA                        i1l145 0F8E                        i1l321 0A7A  
                      i1l313 09D0                        i1l146 0FA0                        i1l314 09D6  
                      i1l322 0A7E                        i1l147 0FA6                        i1l315 09F4  
                      i1l244 0ED0                        i1l260 0D2C                        i1l316 0A58  
                      i1l261 0D76                        i1l253 0D98                        i1l309 0A7E  
                      i1l317 0A0E                        i2l110 0BB6                        i1l262 0D76  
                      i1l254 0DBC                        i1l318 0A50                        i2l111 0BBA  
                      i1l247 0F40                        i1l255 0DB8                        i1l319 0A36  
                      i1l256 0DC4                        i1l259 0D56                        i2l109 0BBA  
           __end_ofi1_LCDout 0ED2                        _RCREG 000FAE                        _E_TOG 0FC0  
                      _SPBRG 000FAF                        _TXREG 000FAD              __end_of_initLCD 0B46  
            __end_of_initPWM 0CD8                        _index 0032                        _reset 01E3  
         __size_ofi1_SendLCD 0038                        main@c 01C8                        main@i 01CD  
                      tablat 000FF5                        ttemp5 0034                        ttemp6 0037  
                      ttemp7 003B                        status 000FD8                        wtemp8 0034  
        __size_of_LCD_String 0050               __CFG_MCLRE$OFF 000000              __initialization 0DC6  
               __end_of_main 07A6                 __end_of_move 0D28                 __end_of_stop 0C1E  
             __CFG_OSC$IRCIO 000000             LCD_String@string 0009                       ??_main 002B  
                     ??_move 002B                       ??_stop 0025                __activetblptr 000001  
                     ?_E_TOG 0001                    ??i1_E_TOG 0002                 ?_setMotorPWM 0019  
                     _ANSEL0 000FB8                       _ANSEL1 000FB9                       i1l1420 0FD0  
                     i1l1422 0FD8                       i1l1440 0EC8                       i1l1418 0FCE  
                     i1l1530 0DAA                       i1l1610 097C                       i1l1436 0E98  
                     i1l1540 0D44                       i1l1532 0DBC                       i1l1524 0D7A  
                     i1l1620 09B6                       i1l1612 0992                       i1l1438 0EC4  
                     i1l1470 0F0C                       i1l1542 0D56                       i1l1534 0D28  
                     i1l1526 0D8A                       i1l1630 09F4                       i1l1622 09C6  
                     i1l1614 0996                       i1l1480 0F38                       i1l1472 0F16  
                     i1l1536 0D2C                       i1l1528 0D98                       i1l1640 0A36  
                     i1l1632 0A04                       i1l1624 09D0                       i1l1616 099C  
                     i1l1608 0976                       i1l1474 0F22                       i1l1538 0D40  
                     i1l1642 0A3C                       i1l1634 0A0E                       i1l1626 09DC  
                     i1l1618 09AC                       i1l1476 0F2A                       i1l1636 0A20  
                     i1l1644 0A50                       i1l1628 09EA                       i1l1820 0056  
                     i1l1478 0F32                       i1l1494 0F8A                       i1l1638 0A26  
                     i1l1646 0A58                       i1l1822 005A                       i1l1496 0FA0  
                     i1l1648 0A64                       i1l1824 0060                       i1l1816 0036  
                     i1l1498 0FA6                       i1l1826 0064                       i1l1818 0044  
                     i1l1828 006A                       i2l1810 0B68                       i2l1812 0B90  
                     i2l1804 0B46                       i2l1814 0BB0                       i2l1806 0B54  
             __CFG_WDTEN$OFF 000000                       i2l1808 0B56                       _LCDout 0E5A  
                SendLCD@Byte 0019                       _OSCCON 000FD3        __end_of_getCharSerial 0FA8  
                     _PTCON0 000F7F                       _PTCON1 000F7E                       _SPBRGH 000FB0  
                     _PTPERH 000F7A                       _PTPERL 000F7B                  SendLCD@type 0016  
                  ??_SendLCD 0017                    ??_SetLine 0009                       ___wmul 0F42  
          __end_ofi1_SendLCD 0F42                       _initIR 0F6C                       clear_0 0DF0  
                     _motorL 01DA                       _motorR 01D1             __end_of_sendRFID 0A80  
                  ??_initLCD 001A                    ??_initPWM 0013                 __pdataCOMRAM 0032  
                     move@mL 0026                       move@mR 0028                 __mediumconst 0000  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
                     stop@mL 0021                       stop@mR 0023                   __accesstop 0060  
    __end_of__initialization 0DFE                ___rparam_used 000001                  SetLine@line 0009  
              __end_of_E_TOG 0FCE                    ?i1_LCDout 0001               __pcstackCOMRAM 0001  
               __pidataBANK1 0FDD           _setMotorsFullSpeed 0C1E                 ??_LCD_String 000B  
        ?_setMotorsFullSpeed 0021                      ??_E_TOG 0013                   __pbssBANK1 01CE  
                    ?_LCDout 0001         ??_setMotorsFullSpeed 0025           __end_of_LCD_String 0D78  
                 ??i1_LCDout 0002                      ?___wmul 0013                      _CAP2CON 000F62  
                    _CAP3CON 000F61                      ?_initIR 0001           __size_of_my_hp_isr 0BB6  
         __size_of_my_lp_isr 0078                      i1_E_TOG 0FCE                      i1u60_25 0F14  
                    i1u60_26 0F16                      i1u62_20 0F9C                      i1u70_20 09C6  
                    i1u62_21 0F98                      i1u70_21 09C2                      i1u71_20 09EA  
                    i1u71_21 09E6                      i1u72_20 0A04                      i1u72_21 0A00  
                    i1u65_20 0D8A                      i1u73_20 0A20                      i1u65_21 0D86  
                    i1u73_21 0A1C                      i1u66_20 0DAA                      i1u74_20 0A76  
                    i1u66_21 0DA6                      i1u74_21 0A72                      i1u67_20 0D72  
                    i1u67_21 0D6E                      i1u68_20 098E                      i1u68_21 098A  
                    i1u69_20 09AC                      i1u69_21 09A8                      i1u99_20 0044  
                    i1u99_21 0040                      i2u93_40 0B54                      i2u93_41 0B50  
                    i2u94_40 0B68                      i2u94_41 0B64                      i2u95_40 0B88  
                    i2u95_41 0B82                      i2u96_40 0B8A                      i2u97_40 0BA2  
                    i2u97_41 0B9A                      i2u98_48 0BA4                      _PWMCON0 000F6F  
       findStrengths@rightIR 0015                      _PWMCON1 000F6E         __size_of_setMotorPWM 01D0  
            __size_of_LCDout 003C                    ?_sendRFID 0001        __end_of_findStrengths 0E5A  
                    _SendLCD 0ED2                      __Hparam 0000                      _SetLine 0D78  
                    __Lparam 0000                   _initEusart 0FA8              __size_of___wmul 002A  
               __psmallconst 0300                   _currentVal 0030              __size_of_initIR 001E  
                    __pcinit 0DC6                      __ramtop 0300                      __ptext0 030C  
                    __ptext1 0CD8                      __ptext2 0BBE                      __ptext3 0C1E  
                    __ptext4 07A6                      __ptext5 0F42                      __ptext6 0C7E  
                    __ptext7 0A80                      __ptext8 0ED2                      __ptext9 0E5A  
                    _initLCD 0A80                      _initPWM 0C7E                 LCDout@number 0015  
                    _robotOn 01D0               __pintcode_body 0B46         end_of_initialization 0DFE  
         setMotorPWM@PWMduty 001F                      int_func 0B46            __end_of_my_hp_isr 0BBE  
          __end_of_my_lp_isr 0090                   ??_sendRFID 000C                      move@dir 002A  
             SendLCD@LowBits 0018                    _RCSTAbits 000FAB                      postdec2 000FDD  
                    postinc0 000FEE                      postinc2 000FDE                    i1_SendLCD 0F0A  
          i1SendLCD@HighBits 0006                    _TRISAbits 000F92                    _TRISBbits 000F93  
                  _TRISCbits 000F94                    _TRISDbits 000F95               i1LCDout@number 0004  
                 main@leftIR 01C9               __end_of_LCDout 0E96                    _TXSTAbits 000FAC  
                ?_initEusart 0001            __size_ofi1_LCDout 003C               __end_of___wmul 0F6C  
                _BAUDCONbits 000FAA                __pidataCOMRAM 0FDC               __end_of_initIR 0F8A  
     __size_of_getCharSerial 001E                   ?i1_SendLCD 0005          start_initialization 0DC6  
                   ??_LCDout 0013                     ??___wmul 0017                  __pdataBANK1 01E3  
                   ??_initIR 0013                  __pbssCOMRAM 002E                __pcstackBANK1 0100  
                   ?i1_E_TOG 0001          __size_of_initEusart 0018                _getCharSerial 0F8A  
__size_of_setMotorsFullSpeed 0060                     ?_SendLCD 0016                    _debouncer 0031  
                   ?_SetLine 0001            __size_of_sendRFID 010A                    __pintcode 0008  
                __pintcodelo 0018          findStrengths@leftIR 0013                     _CAP2BUFH 000F67  
                   _CAP2BUFL 000F66                     _CAP3BUFH 000F65                     _CAP3BUFL 000F64  
                ??i1_SendLCD 0006                     ?_initLCD 0001                     ?_initPWM 0001  
                __smallconst 0300               __size_of_E_TOG 000E                ??_setMotorPWM 001B  
             ?_getCharSerial 0001                i1SendLCD@Byte 0008               ___wmul@product 0017  
                   _LATAbits 000F89                     _LATBbits 000F8A                     _LATCbits 000F8B  
                   _LATDbits 000F8C                i1SendLCD@type 0005                     i1u100_20 0056  
                   i1u100_21 0052                     i1u120_27 0F3A                     i1u121_27 0ECA  
                   i1u122_27 0FD2                     i1u117_27 0DBE                     i1u118_27 0D4A  
                   i1u119_27 0F2C                     i1_LCDout 0E96                     _PIR1bits 000F9E  
                  _my_hp_isr 0008                     _RFIDread 01CF                    _my_lp_isr 0018  
                   _RCONbits 000FD0            ___wmul@multiplier 0013             i1SendLCD@LowBits 0007  
               setMotorPWM@m 0019                     _IRsource 01CE       __size_of_findStrengths 004A  
       setMotorsFullSpeed@mL 0021         setMotorsFullSpeed@mR 0023             __size_ofi1_E_TOG 000E  
                _INTCON2bits 000FF1                  _INTCON3bits 000FF0          __end_of_setMotorPWM 0976  
                   __Hrparam 0000             __size_of_SendLCD 0038                   ?_my_hp_isr 0001  
                   __Lrparam 0000             __size_of_SetLine 004E                   ?_my_lp_isr 0001  
               __Lsmallconst 0300                 ??_initEusart 0013                     _checkSum 002F  
           __size_of_initLCD 00C6             __size_of_initPWM 005A                     __ptext10 0FC0  
                   __ptext11 0F6C                     __ptext20 0E96                     __ptext12 0FA8  
                   __ptext21 0FCE                     __ptext13 0E10                     __ptext15 0976  
                   __ptext16 0F8A                     __ptext17 0D78                     __ptext18 0D28  
                   __ptext19 0F0A              ??_getCharSerial 0002           __end_of_initEusart 0FC0  
              __size_of_main 049A                __size_of_move 0050                __size_of_stop 0060  
                   _sendRFID 0976                _findStrengths 0E10                     int$flags 0033  
                   main@path 0100                   _LCD_String 0D28                   _INTCONbits 000FF2  
            SendLCD@HighBits 0017                  _setMotorPWM 07A6                     intlevel1 0000  
                   intlevel2 0000               ?_findStrengths 0013                   _OSCCONbits 000FD3  
                ??_my_hp_isr 0001                  ??_my_lp_isr 000C   __end_of_setMotorsFullSpeed 0C7E  
