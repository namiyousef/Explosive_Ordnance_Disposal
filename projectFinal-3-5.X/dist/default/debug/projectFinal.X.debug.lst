

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Dec 09 16:28:04 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4331 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   108                           DFLTCON equ 0F60h ;# 
   109  0000                     # 118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   110                           CAP3CON equ 0F61h ;# 
   111  0000                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   112                           CAP2CON equ 0F62h ;# 
   113  0000                     # 236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   114                           CAP1CON equ 0F63h ;# 
   115  0000                     # 295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   116                           CAP3BUFL equ 0F64h ;# 
   117  0000                     # 300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   118                           MAXCNTL equ 0F64h ;# 
   119  0000                     # 307 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   120                           CAP3BUFH equ 0F65h ;# 
   121  0000                     # 312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   122                           MAXCNTH equ 0F65h ;# 
   123  0000                     # 319 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   124                           CAP2BUFL equ 0F66h ;# 
   125  0000                     # 324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   126                           POSCNTL equ 0F66h ;# 
   127  0000                     # 331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   128                           CAP2BUFH equ 0F67h ;# 
   129  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   130                           POSCNTH equ 0F67h ;# 
   131  0000                     # 343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   132                           CAP1BUFL equ 0F68h ;# 
   133  0000                     # 348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   134                           VELRL equ 0F68h ;# 
   135  0000                     # 355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   136                           CAP1BUFH equ 0F69h ;# 
   137  0000                     # 360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   138                           VELRH equ 0F69h ;# 
   139  0000                     # 367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   140                           OVDCONS equ 0F6Ah ;# 
   141  0000                     # 437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   142                           OVDCOND equ 0F6Bh ;# 
   143  0000                     # 507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   144                           FLTCONFIG equ 0F6Ch ;# 
   145  0000                     # 569 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   146                           DTCON equ 0F6Dh ;# 
   147  0000                     # 695 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   148                           PWMCON1 equ 0F6Eh ;# 
   149  0000                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   150                           PWMCON0 equ 0F6Fh ;# 
   151  0000                     # 831 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   152                           SEVTCMPH equ 0F70h ;# 
   153  0000                     # 838 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   154                           SEVTCMPL equ 0F71h ;# 
   155  0000                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   156                           PDC3H equ 0F72h ;# 
   157  0000                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   158                           PDC3L equ 0F73h ;# 
   159  0000                     # 859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   160                           PDC2H equ 0F74h ;# 
   161  0000                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   162                           PDC2L equ 0F75h ;# 
   163  0000                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   164                           PDC1H equ 0F76h ;# 
   165  0000                     # 880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   166                           PDC1L equ 0F77h ;# 
   167  0000                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   168                           PDC0H equ 0F78h ;# 
   169  0000                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   170                           PDC0L equ 0F79h ;# 
   171  0000                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   172                           PTPERH equ 0F7Ah ;# 
   173  0000                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   174                           PTPERL equ 0F7Bh ;# 
   175  0000                     # 915 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   176                           PTMRH equ 0F7Ch ;# 
   177  0000                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   178                           PTMRL equ 0F7Dh ;# 
   179  0000                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   180                           PTCON1 equ 0F7Eh ;# 
   181  0000                     # 956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   182                           PTCON0 equ 0F7Fh ;# 
   183  0000                     # 1038 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   184                           PORTA equ 0F80h ;# 
   185  0000                     # 1199 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   186                           PORTB equ 0F81h ;# 
   187  0000                     # 1270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   188                           PORTC equ 0F82h ;# 
   189  0000                     # 1536 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   190                           PORTD equ 0F83h ;# 
   191  0000                     # 1607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   192                           PORTE equ 0F84h ;# 
   193  0000                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   194                           TMR5 equ 0F87h ;# 
   195  0000                     # 1740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   196                           TMR5L equ 0F87h ;# 
   197  0000                     # 1747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   198                           TMR5H equ 0F88h ;# 
   199  0000                     # 1754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   200                           LATA equ 0F89h ;# 
   201  0000                     # 1866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   202                           LATB equ 0F8Ah ;# 
   203  0000                     # 1978 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   204                           LATC equ 0F8Bh ;# 
   205  0000                     # 2090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   206                           LATD equ 0F8Ch ;# 
   207  0000                     # 2202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   208                           LATE equ 0F8Dh ;# 
   209  0000                     # 2254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   210                           PR5 equ 0F90h ;# 
   211  0000                     # 2261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   212                           PR5L equ 0F90h ;# 
   213  0000                     # 2268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   214                           PR5H equ 0F91h ;# 
   215  0000                     # 2275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   216                           TRISA equ 0F92h ;# 
   217  0000                     # 2280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   218                           DDRA equ 0F92h ;# 
   219  0000                     # 2497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   220                           TRISB equ 0F93h ;# 
   221  0000                     # 2502 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   222                           DDRB equ 0F93h ;# 
   223  0000                     # 2719 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   224                           TRISC equ 0F94h ;# 
   225  0000                     # 2724 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   226                           DDRC equ 0F94h ;# 
   227  0000                     # 2941 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   228                           TRISD equ 0F95h ;# 
   229  0000                     # 2946 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   230                           DDRD equ 0F95h ;# 
   231  0000                     # 3163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   232                           TRISE equ 0F96h ;# 
   233  0000                     # 3168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   234                           DDRE equ 0F96h ;# 
   235  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   236                           ADCHS equ 0F99h ;# 
   237  0000                     # 3403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   238                           ADCON3 equ 0F9Ah ;# 
   239  0000                     # 3475 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   240                           OSCTUNE equ 0F9Bh ;# 
   241  0000                     # 3533 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   242                           PIE1 equ 0F9Dh ;# 
   243  0000                     # 3613 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   244                           PIR1 equ 0F9Eh ;# 
   245  0000                     # 3693 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   246                           IPR1 equ 0F9Fh ;# 
   247  0000                     # 3773 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   248                           PIE2 equ 0FA0h ;# 
   249  0000                     # 3814 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   250                           PIR2 equ 0FA1h ;# 
   251  0000                     # 3855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   252                           IPR2 equ 0FA2h ;# 
   253  0000                     # 3896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   254                           PIE3 equ 0FA3h ;# 
   255  0000                     # 3988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   256                           PIR3 equ 0FA4h ;# 
   257  0000                     # 4048 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   258                           IPR3 equ 0FA5h ;# 
   259  0000                     # 4108 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   260                           EECON1 equ 0FA6h ;# 
   261  0000                     # 4174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   262                           EECON2 equ 0FA7h ;# 
   263  0000                     # 4181 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   264                           EEDATA equ 0FA8h ;# 
   265  0000                     # 4188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   266                           EEADR equ 0FA9h ;# 
   267  0000                     # 4195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   268                           BAUDCON equ 0FAAh ;# 
   269  0000                     # 4200 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   270                           BAUDCTL equ 0FAAh ;# 
   271  0000                     # 4375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   272                           RCSTA equ 0FABh ;# 
   273  0000                     # 4380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   274                           RCSTA1 equ 0FABh ;# 
   275  0000                     # 4585 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   276                           TXSTA equ 0FACh ;# 
   277  0000                     # 4590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   278                           TXSTA1 equ 0FACh ;# 
   279  0000                     # 4841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   280                           TXREG equ 0FADh ;# 
   281  0000                     # 4846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   282                           TXREG1 equ 0FADh ;# 
   283  0000                     # 4853 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   284                           RCREG equ 0FAEh ;# 
   285  0000                     # 4858 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   286                           RCREG1 equ 0FAEh ;# 
   287  0000                     # 4865 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   288                           SPBRG equ 0FAFh ;# 
   289  0000                     # 4870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   290                           SPBRG1 equ 0FAFh ;# 
   291  0000                     # 4877 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   292                           SPBRGH equ 0FB0h ;# 
   293  0000                     # 4884 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   294                           QEICON equ 0FB6h ;# 
   295  0000                     # 5036 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   296                           T5CON equ 0FB7h ;# 
   297  0000                     # 5154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   298                           ANSEL0 equ 0FB8h ;# 
   299  0000                     # 5216 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   300                           ANSEL1 equ 0FB9h ;# 
   301  0000                     # 5236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   302                           CCP2CON equ 0FBAh ;# 
   303  0000                     # 5315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   304                           CCPR2 equ 0FBBh ;# 
   305  0000                     # 5322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   306                           CCPR2L equ 0FBBh ;# 
   307  0000                     # 5329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   308                           CCPR2H equ 0FBCh ;# 
   309  0000                     # 5336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   310                           CCP1CON equ 0FBDh ;# 
   311  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   312                           CCPR1 equ 0FBEh ;# 
   313  0000                     # 5422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   314                           CCPR1L equ 0FBEh ;# 
   315  0000                     # 5429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   316                           CCPR1H equ 0FBFh ;# 
   317  0000                     # 5436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   318                           ADCON2 equ 0FC0h ;# 
   319  0000                     # 5512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   320                           ADCON1 equ 0FC1h ;# 
   321  0000                     # 5608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   322                           ADCON0 equ 0FC2h ;# 
   323  0000                     # 5727 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   324                           ADRES equ 0FC3h ;# 
   325  0000                     # 5734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   326                           ADRESL equ 0FC3h ;# 
   327  0000                     # 5741 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   328                           ADRESH equ 0FC4h ;# 
   329  0000                     # 5748 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   330                           SSPCON equ 0FC6h ;# 
   331  0000                     # 5753 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   332                           SSPCON1 equ 0FC6h ;# 
   333  0000                     # 5886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   334                           SSPSTAT equ 0FC7h ;# 
   335  0000                     # 6107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   336                           SSPADD equ 0FC8h ;# 
   337  0000                     # 6114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   338                           SSPBUF equ 0FC9h ;# 
   339  0000                     # 6121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   340                           T2CON equ 0FCAh ;# 
   341  0000                     # 6219 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   342                           PR2 equ 0FCBh ;# 
   343  0000                     # 6224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   344                           MEMCON equ 0FCBh ;# 
   345  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   346                           TMR2 equ 0FCCh ;# 
   347  0000                     # 6336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   348                           T1CON equ 0FCDh ;# 
   349  0000                     # 6448 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   350                           TMR1 equ 0FCEh ;# 
   351  0000                     # 6455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   352                           TMR1L equ 0FCEh ;# 
   353  0000                     # 6462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   354                           TMR1H equ 0FCFh ;# 
   355  0000                     # 6469 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   356                           RCON equ 0FD0h ;# 
   357  0000                     # 6612 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   358                           WDTCON equ 0FD1h ;# 
   359  0000                     # 6639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   360                           LVDCON equ 0FD2h ;# 
   361  0000                     # 6704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   362                           OSCCON equ 0FD3h ;# 
   363  0000                     # 6790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   364                           T0CON equ 0FD5h ;# 
   365  0000                     # 6866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   366                           TMR0 equ 0FD6h ;# 
   367  0000                     # 6873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   368                           TMR0L equ 0FD6h ;# 
   369  0000                     # 6880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   370                           TMR0H equ 0FD7h ;# 
   371  0000                     # 6887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   372                           STATUS equ 0FD8h ;# 
   373  0000                     # 6958 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   374                           FSR2 equ 0FD9h ;# 
   375  0000                     # 6965 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   376                           FSR2L equ 0FD9h ;# 
   377  0000                     # 6972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   378                           FSR2H equ 0FDAh ;# 
   379  0000                     # 6979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   380                           PLUSW2 equ 0FDBh ;# 
   381  0000                     # 6986 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   382                           PREINC2 equ 0FDCh ;# 
   383  0000                     # 6993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   384                           POSTDEC2 equ 0FDDh ;# 
   385  0000                     # 7000 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   386                           POSTINC2 equ 0FDEh ;# 
   387  0000                     # 7007 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   388                           INDF2 equ 0FDFh ;# 
   389  0000                     # 7014 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   390                           BSR equ 0FE0h ;# 
   391  0000                     # 7021 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   392                           FSR1 equ 0FE1h ;# 
   393  0000                     # 7028 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   394                           FSR1L equ 0FE1h ;# 
   395  0000                     # 7035 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   396                           FSR1H equ 0FE2h ;# 
   397  0000                     # 7042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   398                           PLUSW1 equ 0FE3h ;# 
   399  0000                     # 7049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   400                           PREINC1 equ 0FE4h ;# 
   401  0000                     # 7056 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   402                           POSTDEC1 equ 0FE5h ;# 
   403  0000                     # 7063 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   404                           POSTINC1 equ 0FE6h ;# 
   405  0000                     # 7070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   406                           INDF1 equ 0FE7h ;# 
   407  0000                     # 7077 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   408                           WREG equ 0FE8h ;# 
   409  0000                     # 7084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   410                           FSR0 equ 0FE9h ;# 
   411  0000                     # 7091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   412                           FSR0L equ 0FE9h ;# 
   413  0000                     # 7098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   414                           FSR0H equ 0FEAh ;# 
   415  0000                     # 7105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   416                           PLUSW0 equ 0FEBh ;# 
   417  0000                     # 7112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   418                           PREINC0 equ 0FECh ;# 
   419  0000                     # 7119 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   420                           POSTDEC0 equ 0FEDh ;# 
   421  0000                     # 7126 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   422                           POSTINC0 equ 0FEEh ;# 
   423  0000                     # 7133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   424                           INDF0 equ 0FEFh ;# 
   425  0000                     # 7140 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   426                           INTCON3 equ 0FF0h ;# 
   427  0000                     # 7232 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   428                           INTCON2 equ 0FF1h ;# 
   429  0000                     # 7309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   430                           INTCON equ 0FF2h ;# 
   431  0000                     # 7426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   432                           PROD equ 0FF3h ;# 
   433  0000                     # 7433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   434                           PRODL equ 0FF3h ;# 
   435  0000                     # 7440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   436                           PRODH equ 0FF4h ;# 
   437  0000                     # 7447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   438                           TABLAT equ 0FF5h ;# 
   439  0000                     # 7456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   440                           TBLPTR equ 0FF6h ;# 
   441  0000                     # 7463 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   442                           TBLPTRL equ 0FF6h ;# 
   443  0000                     # 7470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   444                           TBLPTRH equ 0FF7h ;# 
   445  0000                     # 7477 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   446                           TBLPTRU equ 0FF8h ;# 
   447  0000                     # 7486 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   448                           PCLAT equ 0FF9h ;# 
   449  0000                     # 7493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   450                           PC equ 0FF9h ;# 
   451  0000                     # 7500 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   452                           PCL equ 0FF9h ;# 
   453  0000                     # 7507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   454                           PCLATH equ 0FFAh ;# 
   455  0000                     # 7514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   456                           PCLATU equ 0FFBh ;# 
   457  0000                     # 7521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   458                           STKPTR equ 0FFCh ;# 
   459  0000                     # 7595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   460                           TOS equ 0FFDh ;# 
   461  0000                     # 7602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   462                           TOSL equ 0FFDh ;# 
   463  0000                     # 7609 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   464                           TOSH equ 0FFEh ;# 
   465  0000                     # 7616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   466                           TOSU equ 0FFFh ;# 
   467  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   468                           DFLTCON equ 0F60h ;# 
   469  0000                     # 118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   470                           CAP3CON equ 0F61h ;# 
   471  0000                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   472                           CAP2CON equ 0F62h ;# 
   473  0000                     # 236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   474                           CAP1CON equ 0F63h ;# 
   475  0000                     # 295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   476                           CAP3BUFL equ 0F64h ;# 
   477  0000                     # 300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   478                           MAXCNTL equ 0F64h ;# 
   479  0000                     # 307 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   480                           CAP3BUFH equ 0F65h ;# 
   481  0000                     # 312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   482                           MAXCNTH equ 0F65h ;# 
   483  0000                     # 319 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   484                           CAP2BUFL equ 0F66h ;# 
   485  0000                     # 324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   486                           POSCNTL equ 0F66h ;# 
   487  0000                     # 331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   488                           CAP2BUFH equ 0F67h ;# 
   489  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   490                           POSCNTH equ 0F67h ;# 
   491  0000                     # 343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   492                           CAP1BUFL equ 0F68h ;# 
   493  0000                     # 348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   494                           VELRL equ 0F68h ;# 
   495  0000                     # 355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   496                           CAP1BUFH equ 0F69h ;# 
   497  0000                     # 360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   498                           VELRH equ 0F69h ;# 
   499  0000                     # 367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   500                           OVDCONS equ 0F6Ah ;# 
   501  0000                     # 437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   502                           OVDCOND equ 0F6Bh ;# 
   503  0000                     # 507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   504                           FLTCONFIG equ 0F6Ch ;# 
   505  0000                     # 569 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   506                           DTCON equ 0F6Dh ;# 
   507  0000                     # 695 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   508                           PWMCON1 equ 0F6Eh ;# 
   509  0000                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   510                           PWMCON0 equ 0F6Fh ;# 
   511  0000                     # 831 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   512                           SEVTCMPH equ 0F70h ;# 
   513  0000                     # 838 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   514                           SEVTCMPL equ 0F71h ;# 
   515  0000                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   516                           PDC3H equ 0F72h ;# 
   517  0000                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   518                           PDC3L equ 0F73h ;# 
   519  0000                     # 859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   520                           PDC2H equ 0F74h ;# 
   521  0000                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   522                           PDC2L equ 0F75h ;# 
   523  0000                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   524                           PDC1H equ 0F76h ;# 
   525  0000                     # 880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   526                           PDC1L equ 0F77h ;# 
   527  0000                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   528                           PDC0H equ 0F78h ;# 
   529  0000                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   530                           PDC0L equ 0F79h ;# 
   531  0000                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   532                           PTPERH equ 0F7Ah ;# 
   533  0000                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   534                           PTPERL equ 0F7Bh ;# 
   535  0000                     # 915 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   536                           PTMRH equ 0F7Ch ;# 
   537  0000                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   538                           PTMRL equ 0F7Dh ;# 
   539  0000                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   540                           PTCON1 equ 0F7Eh ;# 
   541  0000                     # 956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   542                           PTCON0 equ 0F7Fh ;# 
   543  0000                     # 1038 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   544                           PORTA equ 0F80h ;# 
   545  0000                     # 1199 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   546                           PORTB equ 0F81h ;# 
   547  0000                     # 1270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   548                           PORTC equ 0F82h ;# 
   549  0000                     # 1536 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   550                           PORTD equ 0F83h ;# 
   551  0000                     # 1607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   552                           PORTE equ 0F84h ;# 
   553  0000                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   554                           TMR5 equ 0F87h ;# 
   555  0000                     # 1740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   556                           TMR5L equ 0F87h ;# 
   557  0000                     # 1747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   558                           TMR5H equ 0F88h ;# 
   559  0000                     # 1754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   560                           LATA equ 0F89h ;# 
   561  0000                     # 1866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   562                           LATB equ 0F8Ah ;# 
   563  0000                     # 1978 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   564                           LATC equ 0F8Bh ;# 
   565  0000                     # 2090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   566                           LATD equ 0F8Ch ;# 
   567  0000                     # 2202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   568                           LATE equ 0F8Dh ;# 
   569  0000                     # 2254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   570                           PR5 equ 0F90h ;# 
   571  0000                     # 2261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   572                           PR5L equ 0F90h ;# 
   573  0000                     # 2268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   574                           PR5H equ 0F91h ;# 
   575  0000                     # 2275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   576                           TRISA equ 0F92h ;# 
   577  0000                     # 2280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   578                           DDRA equ 0F92h ;# 
   579  0000                     # 2497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   580                           TRISB equ 0F93h ;# 
   581  0000                     # 2502 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   582                           DDRB equ 0F93h ;# 
   583  0000                     # 2719 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   584                           TRISC equ 0F94h ;# 
   585  0000                     # 2724 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   586                           DDRC equ 0F94h ;# 
   587  0000                     # 2941 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   588                           TRISD equ 0F95h ;# 
   589  0000                     # 2946 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   590                           DDRD equ 0F95h ;# 
   591  0000                     # 3163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   592                           TRISE equ 0F96h ;# 
   593  0000                     # 3168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   594                           DDRE equ 0F96h ;# 
   595  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   596                           ADCHS equ 0F99h ;# 
   597  0000                     # 3403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   598                           ADCON3 equ 0F9Ah ;# 
   599  0000                     # 3475 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   600                           OSCTUNE equ 0F9Bh ;# 
   601  0000                     # 3533 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   602                           PIE1 equ 0F9Dh ;# 
   603  0000                     # 3613 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   604                           PIR1 equ 0F9Eh ;# 
   605  0000                     # 3693 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   606                           IPR1 equ 0F9Fh ;# 
   607  0000                     # 3773 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   608                           PIE2 equ 0FA0h ;# 
   609  0000                     # 3814 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   610                           PIR2 equ 0FA1h ;# 
   611  0000                     # 3855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   612                           IPR2 equ 0FA2h ;# 
   613  0000                     # 3896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   614                           PIE3 equ 0FA3h ;# 
   615  0000                     # 3988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   616                           PIR3 equ 0FA4h ;# 
   617  0000                     # 4048 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   618                           IPR3 equ 0FA5h ;# 
   619  0000                     # 4108 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   620                           EECON1 equ 0FA6h ;# 
   621  0000                     # 4174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   622                           EECON2 equ 0FA7h ;# 
   623  0000                     # 4181 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   624                           EEDATA equ 0FA8h ;# 
   625  0000                     # 4188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   626                           EEADR equ 0FA9h ;# 
   627  0000                     # 4195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   628                           BAUDCON equ 0FAAh ;# 
   629  0000                     # 4200 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   630                           BAUDCTL equ 0FAAh ;# 
   631  0000                     # 4375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   632                           RCSTA equ 0FABh ;# 
   633  0000                     # 4380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   634                           RCSTA1 equ 0FABh ;# 
   635  0000                     # 4585 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   636                           TXSTA equ 0FACh ;# 
   637  0000                     # 4590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   638                           TXSTA1 equ 0FACh ;# 
   639  0000                     # 4841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   640                           TXREG equ 0FADh ;# 
   641  0000                     # 4846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   642                           TXREG1 equ 0FADh ;# 
   643  0000                     # 4853 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   644                           RCREG equ 0FAEh ;# 
   645  0000                     # 4858 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   646                           RCREG1 equ 0FAEh ;# 
   647  0000                     # 4865 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   648                           SPBRG equ 0FAFh ;# 
   649  0000                     # 4870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   650                           SPBRG1 equ 0FAFh ;# 
   651  0000                     # 4877 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   652                           SPBRGH equ 0FB0h ;# 
   653  0000                     # 4884 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   654                           QEICON equ 0FB6h ;# 
   655  0000                     # 5036 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   656                           T5CON equ 0FB7h ;# 
   657  0000                     # 5154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   658                           ANSEL0 equ 0FB8h ;# 
   659  0000                     # 5216 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   660                           ANSEL1 equ 0FB9h ;# 
   661  0000                     # 5236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   662                           CCP2CON equ 0FBAh ;# 
   663  0000                     # 5315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   664                           CCPR2 equ 0FBBh ;# 
   665  0000                     # 5322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   666                           CCPR2L equ 0FBBh ;# 
   667  0000                     # 5329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   668                           CCPR2H equ 0FBCh ;# 
   669  0000                     # 5336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   670                           CCP1CON equ 0FBDh ;# 
   671  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   672                           CCPR1 equ 0FBEh ;# 
   673  0000                     # 5422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   674                           CCPR1L equ 0FBEh ;# 
   675  0000                     # 5429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   676                           CCPR1H equ 0FBFh ;# 
   677  0000                     # 5436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   678                           ADCON2 equ 0FC0h ;# 
   679  0000                     # 5512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   680                           ADCON1 equ 0FC1h ;# 
   681  0000                     # 5608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   682                           ADCON0 equ 0FC2h ;# 
   683  0000                     # 5727 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   684                           ADRES equ 0FC3h ;# 
   685  0000                     # 5734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   686                           ADRESL equ 0FC3h ;# 
   687  0000                     # 5741 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   688                           ADRESH equ 0FC4h ;# 
   689  0000                     # 5748 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   690                           SSPCON equ 0FC6h ;# 
   691  0000                     # 5753 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   692                           SSPCON1 equ 0FC6h ;# 
   693  0000                     # 5886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   694                           SSPSTAT equ 0FC7h ;# 
   695  0000                     # 6107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   696                           SSPADD equ 0FC8h ;# 
   697  0000                     # 6114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   698                           SSPBUF equ 0FC9h ;# 
   699  0000                     # 6121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   700                           T2CON equ 0FCAh ;# 
   701  0000                     # 6219 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   702                           PR2 equ 0FCBh ;# 
   703  0000                     # 6224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   704                           MEMCON equ 0FCBh ;# 
   705  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   706                           TMR2 equ 0FCCh ;# 
   707  0000                     # 6336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   708                           T1CON equ 0FCDh ;# 
   709  0000                     # 6448 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   710                           TMR1 equ 0FCEh ;# 
   711  0000                     # 6455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   712                           TMR1L equ 0FCEh ;# 
   713  0000                     # 6462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   714                           TMR1H equ 0FCFh ;# 
   715  0000                     # 6469 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   716                           RCON equ 0FD0h ;# 
   717  0000                     # 6612 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   718                           WDTCON equ 0FD1h ;# 
   719  0000                     # 6639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   720                           LVDCON equ 0FD2h ;# 
   721  0000                     # 6704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   722                           OSCCON equ 0FD3h ;# 
   723  0000                     # 6790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   724                           T0CON equ 0FD5h ;# 
   725  0000                     # 6866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   726                           TMR0 equ 0FD6h ;# 
   727  0000                     # 6873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   728                           TMR0L equ 0FD6h ;# 
   729  0000                     # 6880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   730                           TMR0H equ 0FD7h ;# 
   731  0000                     # 6887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   732                           STATUS equ 0FD8h ;# 
   733  0000                     # 6958 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   734                           FSR2 equ 0FD9h ;# 
   735  0000                     # 6965 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   736                           FSR2L equ 0FD9h ;# 
   737  0000                     # 6972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   738                           FSR2H equ 0FDAh ;# 
   739  0000                     # 6979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   740                           PLUSW2 equ 0FDBh ;# 
   741  0000                     # 6986 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   742                           PREINC2 equ 0FDCh ;# 
   743  0000                     # 6993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   744                           POSTDEC2 equ 0FDDh ;# 
   745  0000                     # 7000 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   746                           POSTINC2 equ 0FDEh ;# 
   747  0000                     # 7007 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   748                           INDF2 equ 0FDFh ;# 
   749  0000                     # 7014 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   750                           BSR equ 0FE0h ;# 
   751  0000                     # 7021 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   752                           FSR1 equ 0FE1h ;# 
   753  0000                     # 7028 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   754                           FSR1L equ 0FE1h ;# 
   755  0000                     # 7035 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   756                           FSR1H equ 0FE2h ;# 
   757  0000                     # 7042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   758                           PLUSW1 equ 0FE3h ;# 
   759  0000                     # 7049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   760                           PREINC1 equ 0FE4h ;# 
   761  0000                     # 7056 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   762                           POSTDEC1 equ 0FE5h ;# 
   763  0000                     # 7063 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   764                           POSTINC1 equ 0FE6h ;# 
   765  0000                     # 7070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   766                           INDF1 equ 0FE7h ;# 
   767  0000                     # 7077 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   768                           WREG equ 0FE8h ;# 
   769  0000                     # 7084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   770                           FSR0 equ 0FE9h ;# 
   771  0000                     # 7091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   772                           FSR0L equ 0FE9h ;# 
   773  0000                     # 7098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   774                           FSR0H equ 0FEAh ;# 
   775  0000                     # 7105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   776                           PLUSW0 equ 0FEBh ;# 
   777  0000                     # 7112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   778                           PREINC0 equ 0FECh ;# 
   779  0000                     # 7119 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   780                           POSTDEC0 equ 0FEDh ;# 
   781  0000                     # 7126 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   782                           POSTINC0 equ 0FEEh ;# 
   783  0000                     # 7133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   784                           INDF0 equ 0FEFh ;# 
   785  0000                     # 7140 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   786                           INTCON3 equ 0FF0h ;# 
   787  0000                     # 7232 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   788                           INTCON2 equ 0FF1h ;# 
   789  0000                     # 7309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   790                           INTCON equ 0FF2h ;# 
   791  0000                     # 7426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   792                           PROD equ 0FF3h ;# 
   793  0000                     # 7433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   794                           PRODL equ 0FF3h ;# 
   795  0000                     # 7440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   796                           PRODH equ 0FF4h ;# 
   797  0000                     # 7447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   798                           TABLAT equ 0FF5h ;# 
   799  0000                     # 7456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   800                           TBLPTR equ 0FF6h ;# 
   801  0000                     # 7463 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   802                           TBLPTRL equ 0FF6h ;# 
   803  0000                     # 7470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   804                           TBLPTRH equ 0FF7h ;# 
   805  0000                     # 7477 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   806                           TBLPTRU equ 0FF8h ;# 
   807  0000                     # 7486 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   808                           PCLAT equ 0FF9h ;# 
   809  0000                     # 7493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   810                           PC equ 0FF9h ;# 
   811  0000                     # 7500 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   812                           PCL equ 0FF9h ;# 
   813  0000                     # 7507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   814                           PCLATH equ 0FFAh ;# 
   815  0000                     # 7514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   816                           PCLATU equ 0FFBh ;# 
   817  0000                     # 7521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   818                           STKPTR equ 0FFCh ;# 
   819  0000                     # 7595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   820                           TOS equ 0FFDh ;# 
   821  0000                     # 7602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   822                           TOSL equ 0FFDh ;# 
   823  0000                     # 7609 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   824                           TOSH equ 0FFEh ;# 
   825  0000                     # 7616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   826                           TOSU equ 0FFFh ;# 
   827  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   828                           DFLTCON equ 0F60h ;# 
   829  0000                     # 118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   830                           CAP3CON equ 0F61h ;# 
   831  0000                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   832                           CAP2CON equ 0F62h ;# 
   833  0000                     # 236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   834                           CAP1CON equ 0F63h ;# 
   835  0000                     # 295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   836                           CAP3BUFL equ 0F64h ;# 
   837  0000                     # 300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   838                           MAXCNTL equ 0F64h ;# 
   839  0000                     # 307 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   840                           CAP3BUFH equ 0F65h ;# 
   841  0000                     # 312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   842                           MAXCNTH equ 0F65h ;# 
   843  0000                     # 319 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   844                           CAP2BUFL equ 0F66h ;# 
   845  0000                     # 324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   846                           POSCNTL equ 0F66h ;# 
   847  0000                     # 331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   848                           CAP2BUFH equ 0F67h ;# 
   849  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   850                           POSCNTH equ 0F67h ;# 
   851  0000                     # 343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   852                           CAP1BUFL equ 0F68h ;# 
   853  0000                     # 348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   854                           VELRL equ 0F68h ;# 
   855  0000                     # 355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   856                           CAP1BUFH equ 0F69h ;# 
   857  0000                     # 360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   858                           VELRH equ 0F69h ;# 
   859  0000                     # 367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   860                           OVDCONS equ 0F6Ah ;# 
   861  0000                     # 437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   862                           OVDCOND equ 0F6Bh ;# 
   863  0000                     # 507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   864                           FLTCONFIG equ 0F6Ch ;# 
   865  0000                     # 569 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   866                           DTCON equ 0F6Dh ;# 
   867  0000                     # 695 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   868                           PWMCON1 equ 0F6Eh ;# 
   869  0000                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   870                           PWMCON0 equ 0F6Fh ;# 
   871  0000                     # 831 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   872                           SEVTCMPH equ 0F70h ;# 
   873  0000                     # 838 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   874                           SEVTCMPL equ 0F71h ;# 
   875  0000                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   876                           PDC3H equ 0F72h ;# 
   877  0000                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   878                           PDC3L equ 0F73h ;# 
   879  0000                     # 859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   880                           PDC2H equ 0F74h ;# 
   881  0000                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   882                           PDC2L equ 0F75h ;# 
   883  0000                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   884                           PDC1H equ 0F76h ;# 
   885  0000                     # 880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   886                           PDC1L equ 0F77h ;# 
   887  0000                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   888                           PDC0H equ 0F78h ;# 
   889  0000                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   890                           PDC0L equ 0F79h ;# 
   891  0000                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   892                           PTPERH equ 0F7Ah ;# 
   893  0000                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   894                           PTPERL equ 0F7Bh ;# 
   895  0000                     # 915 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   896                           PTMRH equ 0F7Ch ;# 
   897  0000                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   898                           PTMRL equ 0F7Dh ;# 
   899  0000                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   900                           PTCON1 equ 0F7Eh ;# 
   901  0000                     # 956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   902                           PTCON0 equ 0F7Fh ;# 
   903  0000                     # 1038 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   904                           PORTA equ 0F80h ;# 
   905  0000                     # 1199 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   906                           PORTB equ 0F81h ;# 
   907  0000                     # 1270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   908                           PORTC equ 0F82h ;# 
   909  0000                     # 1536 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   910                           PORTD equ 0F83h ;# 
   911  0000                     # 1607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   912                           PORTE equ 0F84h ;# 
   913  0000                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   914                           TMR5 equ 0F87h ;# 
   915  0000                     # 1740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   916                           TMR5L equ 0F87h ;# 
   917  0000                     # 1747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   918                           TMR5H equ 0F88h ;# 
   919  0000                     # 1754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   920                           LATA equ 0F89h ;# 
   921  0000                     # 1866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   922                           LATB equ 0F8Ah ;# 
   923  0000                     # 1978 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   924                           LATC equ 0F8Bh ;# 
   925  0000                     # 2090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   926                           LATD equ 0F8Ch ;# 
   927  0000                     # 2202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   928                           LATE equ 0F8Dh ;# 
   929  0000                     # 2254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   930                           PR5 equ 0F90h ;# 
   931  0000                     # 2261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   932                           PR5L equ 0F90h ;# 
   933  0000                     # 2268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   934                           PR5H equ 0F91h ;# 
   935  0000                     # 2275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   936                           TRISA equ 0F92h ;# 
   937  0000                     # 2280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   938                           DDRA equ 0F92h ;# 
   939  0000                     # 2497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   940                           TRISB equ 0F93h ;# 
   941  0000                     # 2502 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   942                           DDRB equ 0F93h ;# 
   943  0000                     # 2719 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   944                           TRISC equ 0F94h ;# 
   945  0000                     # 2724 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   946                           DDRC equ 0F94h ;# 
   947  0000                     # 2941 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   948                           TRISD equ 0F95h ;# 
   949  0000                     # 2946 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   950                           DDRD equ 0F95h ;# 
   951  0000                     # 3163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   952                           TRISE equ 0F96h ;# 
   953  0000                     # 3168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   954                           DDRE equ 0F96h ;# 
   955  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   956                           ADCHS equ 0F99h ;# 
   957  0000                     # 3403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   958                           ADCON3 equ 0F9Ah ;# 
   959  0000                     # 3475 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   960                           OSCTUNE equ 0F9Bh ;# 
   961  0000                     # 3533 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   962                           PIE1 equ 0F9Dh ;# 
   963  0000                     # 3613 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   964                           PIR1 equ 0F9Eh ;# 
   965  0000                     # 3693 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   966                           IPR1 equ 0F9Fh ;# 
   967  0000                     # 3773 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   968                           PIE2 equ 0FA0h ;# 
   969  0000                     # 3814 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   970                           PIR2 equ 0FA1h ;# 
   971  0000                     # 3855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   972                           IPR2 equ 0FA2h ;# 
   973  0000                     # 3896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   974                           PIE3 equ 0FA3h ;# 
   975  0000                     # 3988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   976                           PIR3 equ 0FA4h ;# 
   977  0000                     # 4048 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   978                           IPR3 equ 0FA5h ;# 
   979  0000                     # 4108 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   980                           EECON1 equ 0FA6h ;# 
   981  0000                     # 4174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   982                           EECON2 equ 0FA7h ;# 
   983  0000                     # 4181 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   984                           EEDATA equ 0FA8h ;# 
   985  0000                     # 4188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   986                           EEADR equ 0FA9h ;# 
   987  0000                     # 4195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   988                           BAUDCON equ 0FAAh ;# 
   989  0000                     # 4200 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   990                           BAUDCTL equ 0FAAh ;# 
   991  0000                     # 4375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   992                           RCSTA equ 0FABh ;# 
   993  0000                     # 4380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   994                           RCSTA1 equ 0FABh ;# 
   995  0000                     # 4585 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   996                           TXSTA equ 0FACh ;# 
   997  0000                     # 4590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
   998                           TXSTA1 equ 0FACh ;# 
   999  0000                     # 4841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1000                           TXREG equ 0FADh ;# 
  1001  0000                     # 4846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1002                           TXREG1 equ 0FADh ;# 
  1003  0000                     # 4853 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1004                           RCREG equ 0FAEh ;# 
  1005  0000                     # 4858 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1006                           RCREG1 equ 0FAEh ;# 
  1007  0000                     # 4865 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1008                           SPBRG equ 0FAFh ;# 
  1009  0000                     # 4870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1010                           SPBRG1 equ 0FAFh ;# 
  1011  0000                     # 4877 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1012                           SPBRGH equ 0FB0h ;# 
  1013  0000                     # 4884 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1014                           QEICON equ 0FB6h ;# 
  1015  0000                     # 5036 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1016                           T5CON equ 0FB7h ;# 
  1017  0000                     # 5154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1018                           ANSEL0 equ 0FB8h ;# 
  1019  0000                     # 5216 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1020                           ANSEL1 equ 0FB9h ;# 
  1021  0000                     # 5236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1022                           CCP2CON equ 0FBAh ;# 
  1023  0000                     # 5315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1024                           CCPR2 equ 0FBBh ;# 
  1025  0000                     # 5322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1026                           CCPR2L equ 0FBBh ;# 
  1027  0000                     # 5329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1028                           CCPR2H equ 0FBCh ;# 
  1029  0000                     # 5336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1030                           CCP1CON equ 0FBDh ;# 
  1031  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1032                           CCPR1 equ 0FBEh ;# 
  1033  0000                     # 5422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1034                           CCPR1L equ 0FBEh ;# 
  1035  0000                     # 5429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1036                           CCPR1H equ 0FBFh ;# 
  1037  0000                     # 5436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1038                           ADCON2 equ 0FC0h ;# 
  1039  0000                     # 5512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1040                           ADCON1 equ 0FC1h ;# 
  1041  0000                     # 5608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1042                           ADCON0 equ 0FC2h ;# 
  1043  0000                     # 5727 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1044                           ADRES equ 0FC3h ;# 
  1045  0000                     # 5734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1046                           ADRESL equ 0FC3h ;# 
  1047  0000                     # 5741 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1048                           ADRESH equ 0FC4h ;# 
  1049  0000                     # 5748 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1050                           SSPCON equ 0FC6h ;# 
  1051  0000                     # 5753 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1052                           SSPCON1 equ 0FC6h ;# 
  1053  0000                     # 5886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1054                           SSPSTAT equ 0FC7h ;# 
  1055  0000                     # 6107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1056                           SSPADD equ 0FC8h ;# 
  1057  0000                     # 6114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1058                           SSPBUF equ 0FC9h ;# 
  1059  0000                     # 6121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1060                           T2CON equ 0FCAh ;# 
  1061  0000                     # 6219 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1062                           PR2 equ 0FCBh ;# 
  1063  0000                     # 6224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1064                           MEMCON equ 0FCBh ;# 
  1065  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1066                           TMR2 equ 0FCCh ;# 
  1067  0000                     # 6336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1068                           T1CON equ 0FCDh ;# 
  1069  0000                     # 6448 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1070                           TMR1 equ 0FCEh ;# 
  1071  0000                     # 6455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1072                           TMR1L equ 0FCEh ;# 
  1073  0000                     # 6462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1074                           TMR1H equ 0FCFh ;# 
  1075  0000                     # 6469 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1076                           RCON equ 0FD0h ;# 
  1077  0000                     # 6612 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1078                           WDTCON equ 0FD1h ;# 
  1079  0000                     # 6639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1080                           LVDCON equ 0FD2h ;# 
  1081  0000                     # 6704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1082                           OSCCON equ 0FD3h ;# 
  1083  0000                     # 6790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1084                           T0CON equ 0FD5h ;# 
  1085  0000                     # 6866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1086                           TMR0 equ 0FD6h ;# 
  1087  0000                     # 6873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1088                           TMR0L equ 0FD6h ;# 
  1089  0000                     # 6880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1090                           TMR0H equ 0FD7h ;# 
  1091  0000                     # 6887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1092                           STATUS equ 0FD8h ;# 
  1093  0000                     # 6958 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1094                           FSR2 equ 0FD9h ;# 
  1095  0000                     # 6965 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1096                           FSR2L equ 0FD9h ;# 
  1097  0000                     # 6972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1098                           FSR2H equ 0FDAh ;# 
  1099  0000                     # 6979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1100                           PLUSW2 equ 0FDBh ;# 
  1101  0000                     # 6986 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1102                           PREINC2 equ 0FDCh ;# 
  1103  0000                     # 6993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1104                           POSTDEC2 equ 0FDDh ;# 
  1105  0000                     # 7000 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1106                           POSTINC2 equ 0FDEh ;# 
  1107  0000                     # 7007 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1108                           INDF2 equ 0FDFh ;# 
  1109  0000                     # 7014 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1110                           BSR equ 0FE0h ;# 
  1111  0000                     # 7021 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1112                           FSR1 equ 0FE1h ;# 
  1113  0000                     # 7028 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1114                           FSR1L equ 0FE1h ;# 
  1115  0000                     # 7035 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1116                           FSR1H equ 0FE2h ;# 
  1117  0000                     # 7042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1118                           PLUSW1 equ 0FE3h ;# 
  1119  0000                     # 7049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1120                           PREINC1 equ 0FE4h ;# 
  1121  0000                     # 7056 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1122                           POSTDEC1 equ 0FE5h ;# 
  1123  0000                     # 7063 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1124                           POSTINC1 equ 0FE6h ;# 
  1125  0000                     # 7070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1126                           INDF1 equ 0FE7h ;# 
  1127  0000                     # 7077 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1128                           WREG equ 0FE8h ;# 
  1129  0000                     # 7084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1130                           FSR0 equ 0FE9h ;# 
  1131  0000                     # 7091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1132                           FSR0L equ 0FE9h ;# 
  1133  0000                     # 7098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1134                           FSR0H equ 0FEAh ;# 
  1135  0000                     # 7105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1136                           PLUSW0 equ 0FEBh ;# 
  1137  0000                     # 7112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1138                           PREINC0 equ 0FECh ;# 
  1139  0000                     # 7119 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1140                           POSTDEC0 equ 0FEDh ;# 
  1141  0000                     # 7126 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1142                           POSTINC0 equ 0FEEh ;# 
  1143  0000                     # 7133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1144                           INDF0 equ 0FEFh ;# 
  1145  0000                     # 7140 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1146                           INTCON3 equ 0FF0h ;# 
  1147  0000                     # 7232 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1148                           INTCON2 equ 0FF1h ;# 
  1149  0000                     # 7309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1150                           INTCON equ 0FF2h ;# 
  1151  0000                     # 7426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1152                           PROD equ 0FF3h ;# 
  1153  0000                     # 7433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1154                           PRODL equ 0FF3h ;# 
  1155  0000                     # 7440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1156                           PRODH equ 0FF4h ;# 
  1157  0000                     # 7447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1158                           TABLAT equ 0FF5h ;# 
  1159  0000                     # 7456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1160                           TBLPTR equ 0FF6h ;# 
  1161  0000                     # 7463 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1162                           TBLPTRL equ 0FF6h ;# 
  1163  0000                     # 7470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1164                           TBLPTRH equ 0FF7h ;# 
  1165  0000                     # 7477 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1166                           TBLPTRU equ 0FF8h ;# 
  1167  0000                     # 7486 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1168                           PCLAT equ 0FF9h ;# 
  1169  0000                     # 7493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1170                           PC equ 0FF9h ;# 
  1171  0000                     # 7500 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1172                           PCL equ 0FF9h ;# 
  1173  0000                     # 7507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1174                           PCLATH equ 0FFAh ;# 
  1175  0000                     # 7514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1176                           PCLATU equ 0FFBh ;# 
  1177  0000                     # 7521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1178                           STKPTR equ 0FFCh ;# 
  1179  0000                     # 7595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1180                           TOS equ 0FFDh ;# 
  1181  0000                     # 7602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1182                           TOSL equ 0FFDh ;# 
  1183  0000                     # 7609 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1184                           TOSH equ 0FFEh ;# 
  1185  0000                     # 7616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1186                           TOSU equ 0FFFh ;# 
  1187  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1188                           DFLTCON equ 0F60h ;# 
  1189  0000                     # 118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1190                           CAP3CON equ 0F61h ;# 
  1191  0000                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1192                           CAP2CON equ 0F62h ;# 
  1193  0000                     # 236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1194                           CAP1CON equ 0F63h ;# 
  1195  0000                     # 295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1196                           CAP3BUFL equ 0F64h ;# 
  1197  0000                     # 300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1198                           MAXCNTL equ 0F64h ;# 
  1199  0000                     # 307 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1200                           CAP3BUFH equ 0F65h ;# 
  1201  0000                     # 312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1202                           MAXCNTH equ 0F65h ;# 
  1203  0000                     # 319 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1204                           CAP2BUFL equ 0F66h ;# 
  1205  0000                     # 324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1206                           POSCNTL equ 0F66h ;# 
  1207  0000                     # 331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1208                           CAP2BUFH equ 0F67h ;# 
  1209  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1210                           POSCNTH equ 0F67h ;# 
  1211  0000                     # 343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1212                           CAP1BUFL equ 0F68h ;# 
  1213  0000                     # 348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1214                           VELRL equ 0F68h ;# 
  1215  0000                     # 355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1216                           CAP1BUFH equ 0F69h ;# 
  1217  0000                     # 360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1218                           VELRH equ 0F69h ;# 
  1219  0000                     # 367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1220                           OVDCONS equ 0F6Ah ;# 
  1221  0000                     # 437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1222                           OVDCOND equ 0F6Bh ;# 
  1223  0000                     # 507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1224                           FLTCONFIG equ 0F6Ch ;# 
  1225  0000                     # 569 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1226                           DTCON equ 0F6Dh ;# 
  1227  0000                     # 695 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1228                           PWMCON1 equ 0F6Eh ;# 
  1229  0000                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1230                           PWMCON0 equ 0F6Fh ;# 
  1231  0000                     # 831 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1232                           SEVTCMPH equ 0F70h ;# 
  1233  0000                     # 838 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1234                           SEVTCMPL equ 0F71h ;# 
  1235  0000                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1236                           PDC3H equ 0F72h ;# 
  1237  0000                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1238                           PDC3L equ 0F73h ;# 
  1239  0000                     # 859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1240                           PDC2H equ 0F74h ;# 
  1241  0000                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1242                           PDC2L equ 0F75h ;# 
  1243  0000                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1244                           PDC1H equ 0F76h ;# 
  1245  0000                     # 880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1246                           PDC1L equ 0F77h ;# 
  1247  0000                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1248                           PDC0H equ 0F78h ;# 
  1249  0000                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1250                           PDC0L equ 0F79h ;# 
  1251  0000                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1252                           PTPERH equ 0F7Ah ;# 
  1253  0000                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1254                           PTPERL equ 0F7Bh ;# 
  1255  0000                     # 915 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1256                           PTMRH equ 0F7Ch ;# 
  1257  0000                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1258                           PTMRL equ 0F7Dh ;# 
  1259  0000                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1260                           PTCON1 equ 0F7Eh ;# 
  1261  0000                     # 956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1262                           PTCON0 equ 0F7Fh ;# 
  1263  0000                     # 1038 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1264                           PORTA equ 0F80h ;# 
  1265  0000                     # 1199 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1266                           PORTB equ 0F81h ;# 
  1267  0000                     # 1270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1268                           PORTC equ 0F82h ;# 
  1269  0000                     # 1536 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1270                           PORTD equ 0F83h ;# 
  1271  0000                     # 1607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1272                           PORTE equ 0F84h ;# 
  1273  0000                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1274                           TMR5 equ 0F87h ;# 
  1275  0000                     # 1740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1276                           TMR5L equ 0F87h ;# 
  1277  0000                     # 1747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1278                           TMR5H equ 0F88h ;# 
  1279  0000                     # 1754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1280                           LATA equ 0F89h ;# 
  1281  0000                     # 1866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1282                           LATB equ 0F8Ah ;# 
  1283  0000                     # 1978 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1284                           LATC equ 0F8Bh ;# 
  1285  0000                     # 2090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1286                           LATD equ 0F8Ch ;# 
  1287  0000                     # 2202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1288                           LATE equ 0F8Dh ;# 
  1289  0000                     # 2254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1290                           PR5 equ 0F90h ;# 
  1291  0000                     # 2261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1292                           PR5L equ 0F90h ;# 
  1293  0000                     # 2268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1294                           PR5H equ 0F91h ;# 
  1295  0000                     # 2275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1296                           TRISA equ 0F92h ;# 
  1297  0000                     # 2280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1298                           DDRA equ 0F92h ;# 
  1299  0000                     # 2497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1300                           TRISB equ 0F93h ;# 
  1301  0000                     # 2502 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1302                           DDRB equ 0F93h ;# 
  1303  0000                     # 2719 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1304                           TRISC equ 0F94h ;# 
  1305  0000                     # 2724 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1306                           DDRC equ 0F94h ;# 
  1307  0000                     # 2941 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1308                           TRISD equ 0F95h ;# 
  1309  0000                     # 2946 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1310                           DDRD equ 0F95h ;# 
  1311  0000                     # 3163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1312                           TRISE equ 0F96h ;# 
  1313  0000                     # 3168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1314                           DDRE equ 0F96h ;# 
  1315  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1316                           ADCHS equ 0F99h ;# 
  1317  0000                     # 3403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1318                           ADCON3 equ 0F9Ah ;# 
  1319  0000                     # 3475 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1320                           OSCTUNE equ 0F9Bh ;# 
  1321  0000                     # 3533 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1322                           PIE1 equ 0F9Dh ;# 
  1323  0000                     # 3613 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1324                           PIR1 equ 0F9Eh ;# 
  1325  0000                     # 3693 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1326                           IPR1 equ 0F9Fh ;# 
  1327  0000                     # 3773 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1328                           PIE2 equ 0FA0h ;# 
  1329  0000                     # 3814 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1330                           PIR2 equ 0FA1h ;# 
  1331  0000                     # 3855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1332                           IPR2 equ 0FA2h ;# 
  1333  0000                     # 3896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1334                           PIE3 equ 0FA3h ;# 
  1335  0000                     # 3988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1336                           PIR3 equ 0FA4h ;# 
  1337  0000                     # 4048 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1338                           IPR3 equ 0FA5h ;# 
  1339  0000                     # 4108 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1340                           EECON1 equ 0FA6h ;# 
  1341  0000                     # 4174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1342                           EECON2 equ 0FA7h ;# 
  1343  0000                     # 4181 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1344                           EEDATA equ 0FA8h ;# 
  1345  0000                     # 4188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1346                           EEADR equ 0FA9h ;# 
  1347  0000                     # 4195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1348                           BAUDCON equ 0FAAh ;# 
  1349  0000                     # 4200 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1350                           BAUDCTL equ 0FAAh ;# 
  1351  0000                     # 4375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1352                           RCSTA equ 0FABh ;# 
  1353  0000                     # 4380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1354                           RCSTA1 equ 0FABh ;# 
  1355  0000                     # 4585 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1356                           TXSTA equ 0FACh ;# 
  1357  0000                     # 4590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1358                           TXSTA1 equ 0FACh ;# 
  1359  0000                     # 4841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1360                           TXREG equ 0FADh ;# 
  1361  0000                     # 4846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1362                           TXREG1 equ 0FADh ;# 
  1363  0000                     # 4853 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1364                           RCREG equ 0FAEh ;# 
  1365  0000                     # 4858 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1366                           RCREG1 equ 0FAEh ;# 
  1367  0000                     # 4865 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1368                           SPBRG equ 0FAFh ;# 
  1369  0000                     # 4870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1370                           SPBRG1 equ 0FAFh ;# 
  1371  0000                     # 4877 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1372                           SPBRGH equ 0FB0h ;# 
  1373  0000                     # 4884 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1374                           QEICON equ 0FB6h ;# 
  1375  0000                     # 5036 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1376                           T5CON equ 0FB7h ;# 
  1377  0000                     # 5154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1378                           ANSEL0 equ 0FB8h ;# 
  1379  0000                     # 5216 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1380                           ANSEL1 equ 0FB9h ;# 
  1381  0000                     # 5236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1382                           CCP2CON equ 0FBAh ;# 
  1383  0000                     # 5315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1384                           CCPR2 equ 0FBBh ;# 
  1385  0000                     # 5322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1386                           CCPR2L equ 0FBBh ;# 
  1387  0000                     # 5329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1388                           CCPR2H equ 0FBCh ;# 
  1389  0000                     # 5336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1390                           CCP1CON equ 0FBDh ;# 
  1391  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1392                           CCPR1 equ 0FBEh ;# 
  1393  0000                     # 5422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1394                           CCPR1L equ 0FBEh ;# 
  1395  0000                     # 5429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1396                           CCPR1H equ 0FBFh ;# 
  1397  0000                     # 5436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1398                           ADCON2 equ 0FC0h ;# 
  1399  0000                     # 5512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1400                           ADCON1 equ 0FC1h ;# 
  1401  0000                     # 5608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1402                           ADCON0 equ 0FC2h ;# 
  1403  0000                     # 5727 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1404                           ADRES equ 0FC3h ;# 
  1405  0000                     # 5734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1406                           ADRESL equ 0FC3h ;# 
  1407  0000                     # 5741 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1408                           ADRESH equ 0FC4h ;# 
  1409  0000                     # 5748 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1410                           SSPCON equ 0FC6h ;# 
  1411  0000                     # 5753 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1412                           SSPCON1 equ 0FC6h ;# 
  1413  0000                     # 5886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1414                           SSPSTAT equ 0FC7h ;# 
  1415  0000                     # 6107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1416                           SSPADD equ 0FC8h ;# 
  1417  0000                     # 6114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1418                           SSPBUF equ 0FC9h ;# 
  1419  0000                     # 6121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1420                           T2CON equ 0FCAh ;# 
  1421  0000                     # 6219 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1422                           PR2 equ 0FCBh ;# 
  1423  0000                     # 6224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1424                           MEMCON equ 0FCBh ;# 
  1425  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1426                           TMR2 equ 0FCCh ;# 
  1427  0000                     # 6336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1428                           T1CON equ 0FCDh ;# 
  1429  0000                     # 6448 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1430                           TMR1 equ 0FCEh ;# 
  1431  0000                     # 6455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1432                           TMR1L equ 0FCEh ;# 
  1433  0000                     # 6462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1434                           TMR1H equ 0FCFh ;# 
  1435  0000                     # 6469 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1436                           RCON equ 0FD0h ;# 
  1437  0000                     # 6612 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1438                           WDTCON equ 0FD1h ;# 
  1439  0000                     # 6639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1440                           LVDCON equ 0FD2h ;# 
  1441  0000                     # 6704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1442                           OSCCON equ 0FD3h ;# 
  1443  0000                     # 6790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1444                           T0CON equ 0FD5h ;# 
  1445  0000                     # 6866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1446                           TMR0 equ 0FD6h ;# 
  1447  0000                     # 6873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1448                           TMR0L equ 0FD6h ;# 
  1449  0000                     # 6880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1450                           TMR0H equ 0FD7h ;# 
  1451  0000                     # 6887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1452                           STATUS equ 0FD8h ;# 
  1453  0000                     # 6958 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1454                           FSR2 equ 0FD9h ;# 
  1455  0000                     # 6965 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1456                           FSR2L equ 0FD9h ;# 
  1457  0000                     # 6972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1458                           FSR2H equ 0FDAh ;# 
  1459  0000                     # 6979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1460                           PLUSW2 equ 0FDBh ;# 
  1461  0000                     # 6986 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1462                           PREINC2 equ 0FDCh ;# 
  1463  0000                     # 6993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1464                           POSTDEC2 equ 0FDDh ;# 
  1465  0000                     # 7000 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1466                           POSTINC2 equ 0FDEh ;# 
  1467  0000                     # 7007 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1468                           INDF2 equ 0FDFh ;# 
  1469  0000                     # 7014 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1470                           BSR equ 0FE0h ;# 
  1471  0000                     # 7021 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1472                           FSR1 equ 0FE1h ;# 
  1473  0000                     # 7028 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1474                           FSR1L equ 0FE1h ;# 
  1475  0000                     # 7035 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1476                           FSR1H equ 0FE2h ;# 
  1477  0000                     # 7042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1478                           PLUSW1 equ 0FE3h ;# 
  1479  0000                     # 7049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1480                           PREINC1 equ 0FE4h ;# 
  1481  0000                     # 7056 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1482                           POSTDEC1 equ 0FE5h ;# 
  1483  0000                     # 7063 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1484                           POSTINC1 equ 0FE6h ;# 
  1485  0000                     # 7070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1486                           INDF1 equ 0FE7h ;# 
  1487  0000                     # 7077 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1488                           WREG equ 0FE8h ;# 
  1489  0000                     # 7084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1490                           FSR0 equ 0FE9h ;# 
  1491  0000                     # 7091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1492                           FSR0L equ 0FE9h ;# 
  1493  0000                     # 7098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1494                           FSR0H equ 0FEAh ;# 
  1495  0000                     # 7105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1496                           PLUSW0 equ 0FEBh ;# 
  1497  0000                     # 7112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1498                           PREINC0 equ 0FECh ;# 
  1499  0000                     # 7119 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1500                           POSTDEC0 equ 0FEDh ;# 
  1501  0000                     # 7126 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1502                           POSTINC0 equ 0FEEh ;# 
  1503  0000                     # 7133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1504                           INDF0 equ 0FEFh ;# 
  1505  0000                     # 7140 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1506                           INTCON3 equ 0FF0h ;# 
  1507  0000                     # 7232 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1508                           INTCON2 equ 0FF1h ;# 
  1509  0000                     # 7309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1510                           INTCON equ 0FF2h ;# 
  1511  0000                     # 7426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1512                           PROD equ 0FF3h ;# 
  1513  0000                     # 7433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1514                           PRODL equ 0FF3h ;# 
  1515  0000                     # 7440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1516                           PRODH equ 0FF4h ;# 
  1517  0000                     # 7447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1518                           TABLAT equ 0FF5h ;# 
  1519  0000                     # 7456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1520                           TBLPTR equ 0FF6h ;# 
  1521  0000                     # 7463 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1522                           TBLPTRL equ 0FF6h ;# 
  1523  0000                     # 7470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1524                           TBLPTRH equ 0FF7h ;# 
  1525  0000                     # 7477 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1526                           TBLPTRU equ 0FF8h ;# 
  1527  0000                     # 7486 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1528                           PCLAT equ 0FF9h ;# 
  1529  0000                     # 7493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1530                           PC equ 0FF9h ;# 
  1531  0000                     # 7500 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1532                           PCL equ 0FF9h ;# 
  1533  0000                     # 7507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1534                           PCLATH equ 0FFAh ;# 
  1535  0000                     # 7514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1536                           PCLATU equ 0FFBh ;# 
  1537  0000                     # 7521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1538                           STKPTR equ 0FFCh ;# 
  1539  0000                     # 7595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1540                           TOS equ 0FFDh ;# 
  1541  0000                     # 7602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1542                           TOSL equ 0FFDh ;# 
  1543  0000                     # 7609 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1544                           TOSH equ 0FFEh ;# 
  1545  0000                     # 7616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1546                           TOSU equ 0FFFh ;# 
  1547  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1548                           DFLTCON equ 0F60h ;# 
  1549  0000                     # 118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1550                           CAP3CON equ 0F61h ;# 
  1551  0000                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1552                           CAP2CON equ 0F62h ;# 
  1553  0000                     # 236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1554                           CAP1CON equ 0F63h ;# 
  1555  0000                     # 295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1556                           CAP3BUFL equ 0F64h ;# 
  1557  0000                     # 300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1558                           MAXCNTL equ 0F64h ;# 
  1559  0000                     # 307 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1560                           CAP3BUFH equ 0F65h ;# 
  1561  0000                     # 312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1562                           MAXCNTH equ 0F65h ;# 
  1563  0000                     # 319 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1564                           CAP2BUFL equ 0F66h ;# 
  1565  0000                     # 324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1566                           POSCNTL equ 0F66h ;# 
  1567  0000                     # 331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1568                           CAP2BUFH equ 0F67h ;# 
  1569  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1570                           POSCNTH equ 0F67h ;# 
  1571  0000                     # 343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1572                           CAP1BUFL equ 0F68h ;# 
  1573  0000                     # 348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1574                           VELRL equ 0F68h ;# 
  1575  0000                     # 355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1576                           CAP1BUFH equ 0F69h ;# 
  1577  0000                     # 360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1578                           VELRH equ 0F69h ;# 
  1579  0000                     # 367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1580                           OVDCONS equ 0F6Ah ;# 
  1581  0000                     # 437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1582                           OVDCOND equ 0F6Bh ;# 
  1583  0000                     # 507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1584                           FLTCONFIG equ 0F6Ch ;# 
  1585  0000                     # 569 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1586                           DTCON equ 0F6Dh ;# 
  1587  0000                     # 695 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1588                           PWMCON1 equ 0F6Eh ;# 
  1589  0000                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1590                           PWMCON0 equ 0F6Fh ;# 
  1591  0000                     # 831 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1592                           SEVTCMPH equ 0F70h ;# 
  1593  0000                     # 838 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1594                           SEVTCMPL equ 0F71h ;# 
  1595  0000                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1596                           PDC3H equ 0F72h ;# 
  1597  0000                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1598                           PDC3L equ 0F73h ;# 
  1599  0000                     # 859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1600                           PDC2H equ 0F74h ;# 
  1601  0000                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1602                           PDC2L equ 0F75h ;# 
  1603  0000                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1604                           PDC1H equ 0F76h ;# 
  1605  0000                     # 880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1606                           PDC1L equ 0F77h ;# 
  1607  0000                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1608                           PDC0H equ 0F78h ;# 
  1609  0000                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1610                           PDC0L equ 0F79h ;# 
  1611  0000                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1612                           PTPERH equ 0F7Ah ;# 
  1613  0000                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1614                           PTPERL equ 0F7Bh ;# 
  1615  0000                     # 915 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1616                           PTMRH equ 0F7Ch ;# 
  1617  0000                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1618                           PTMRL equ 0F7Dh ;# 
  1619  0000                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1620                           PTCON1 equ 0F7Eh ;# 
  1621  0000                     # 956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1622                           PTCON0 equ 0F7Fh ;# 
  1623  0000                     # 1038 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1624                           PORTA equ 0F80h ;# 
  1625  0000                     # 1199 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1626                           PORTB equ 0F81h ;# 
  1627  0000                     # 1270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1628                           PORTC equ 0F82h ;# 
  1629  0000                     # 1536 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1630                           PORTD equ 0F83h ;# 
  1631  0000                     # 1607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1632                           PORTE equ 0F84h ;# 
  1633  0000                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1634                           TMR5 equ 0F87h ;# 
  1635  0000                     # 1740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1636                           TMR5L equ 0F87h ;# 
  1637  0000                     # 1747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1638                           TMR5H equ 0F88h ;# 
  1639  0000                     # 1754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1640                           LATA equ 0F89h ;# 
  1641  0000                     # 1866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1642                           LATB equ 0F8Ah ;# 
  1643  0000                     # 1978 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1644                           LATC equ 0F8Bh ;# 
  1645  0000                     # 2090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1646                           LATD equ 0F8Ch ;# 
  1647  0000                     # 2202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1648                           LATE equ 0F8Dh ;# 
  1649  0000                     # 2254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1650                           PR5 equ 0F90h ;# 
  1651  0000                     # 2261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1652                           PR5L equ 0F90h ;# 
  1653  0000                     # 2268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1654                           PR5H equ 0F91h ;# 
  1655  0000                     # 2275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1656                           TRISA equ 0F92h ;# 
  1657  0000                     # 2280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1658                           DDRA equ 0F92h ;# 
  1659  0000                     # 2497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1660                           TRISB equ 0F93h ;# 
  1661  0000                     # 2502 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1662                           DDRB equ 0F93h ;# 
  1663  0000                     # 2719 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1664                           TRISC equ 0F94h ;# 
  1665  0000                     # 2724 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1666                           DDRC equ 0F94h ;# 
  1667  0000                     # 2941 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1668                           TRISD equ 0F95h ;# 
  1669  0000                     # 2946 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1670                           DDRD equ 0F95h ;# 
  1671  0000                     # 3163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1672                           TRISE equ 0F96h ;# 
  1673  0000                     # 3168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1674                           DDRE equ 0F96h ;# 
  1675  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1676                           ADCHS equ 0F99h ;# 
  1677  0000                     # 3403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1678                           ADCON3 equ 0F9Ah ;# 
  1679  0000                     # 3475 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1680                           OSCTUNE equ 0F9Bh ;# 
  1681  0000                     # 3533 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1682                           PIE1 equ 0F9Dh ;# 
  1683  0000                     # 3613 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1684                           PIR1 equ 0F9Eh ;# 
  1685  0000                     # 3693 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1686                           IPR1 equ 0F9Fh ;# 
  1687  0000                     # 3773 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1688                           PIE2 equ 0FA0h ;# 
  1689  0000                     # 3814 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1690                           PIR2 equ 0FA1h ;# 
  1691  0000                     # 3855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1692                           IPR2 equ 0FA2h ;# 
  1693  0000                     # 3896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1694                           PIE3 equ 0FA3h ;# 
  1695  0000                     # 3988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1696                           PIR3 equ 0FA4h ;# 
  1697  0000                     # 4048 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1698                           IPR3 equ 0FA5h ;# 
  1699  0000                     # 4108 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1700                           EECON1 equ 0FA6h ;# 
  1701  0000                     # 4174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1702                           EECON2 equ 0FA7h ;# 
  1703  0000                     # 4181 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1704                           EEDATA equ 0FA8h ;# 
  1705  0000                     # 4188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1706                           EEADR equ 0FA9h ;# 
  1707  0000                     # 4195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1708                           BAUDCON equ 0FAAh ;# 
  1709  0000                     # 4200 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1710                           BAUDCTL equ 0FAAh ;# 
  1711  0000                     # 4375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1712                           RCSTA equ 0FABh ;# 
  1713  0000                     # 4380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1714                           RCSTA1 equ 0FABh ;# 
  1715  0000                     # 4585 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1716                           TXSTA equ 0FACh ;# 
  1717  0000                     # 4590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1718                           TXSTA1 equ 0FACh ;# 
  1719  0000                     # 4841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1720                           TXREG equ 0FADh ;# 
  1721  0000                     # 4846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1722                           TXREG1 equ 0FADh ;# 
  1723  0000                     # 4853 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1724                           RCREG equ 0FAEh ;# 
  1725  0000                     # 4858 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1726                           RCREG1 equ 0FAEh ;# 
  1727  0000                     # 4865 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1728                           SPBRG equ 0FAFh ;# 
  1729  0000                     # 4870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1730                           SPBRG1 equ 0FAFh ;# 
  1731  0000                     # 4877 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1732                           SPBRGH equ 0FB0h ;# 
  1733  0000                     # 4884 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1734                           QEICON equ 0FB6h ;# 
  1735  0000                     # 5036 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1736                           T5CON equ 0FB7h ;# 
  1737  0000                     # 5154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1738                           ANSEL0 equ 0FB8h ;# 
  1739  0000                     # 5216 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1740                           ANSEL1 equ 0FB9h ;# 
  1741  0000                     # 5236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1742                           CCP2CON equ 0FBAh ;# 
  1743  0000                     # 5315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1744                           CCPR2 equ 0FBBh ;# 
  1745  0000                     # 5322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1746                           CCPR2L equ 0FBBh ;# 
  1747  0000                     # 5329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1748                           CCPR2H equ 0FBCh ;# 
  1749  0000                     # 5336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1750                           CCP1CON equ 0FBDh ;# 
  1751  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1752                           CCPR1 equ 0FBEh ;# 
  1753  0000                     # 5422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1754                           CCPR1L equ 0FBEh ;# 
  1755  0000                     # 5429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1756                           CCPR1H equ 0FBFh ;# 
  1757  0000                     # 5436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1758                           ADCON2 equ 0FC0h ;# 
  1759  0000                     # 5512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1760                           ADCON1 equ 0FC1h ;# 
  1761  0000                     # 5608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1762                           ADCON0 equ 0FC2h ;# 
  1763  0000                     # 5727 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1764                           ADRES equ 0FC3h ;# 
  1765  0000                     # 5734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1766                           ADRESL equ 0FC3h ;# 
  1767  0000                     # 5741 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1768                           ADRESH equ 0FC4h ;# 
  1769  0000                     # 5748 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1770                           SSPCON equ 0FC6h ;# 
  1771  0000                     # 5753 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1772                           SSPCON1 equ 0FC6h ;# 
  1773  0000                     # 5886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1774                           SSPSTAT equ 0FC7h ;# 
  1775  0000                     # 6107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1776                           SSPADD equ 0FC8h ;# 
  1777  0000                     # 6114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1778                           SSPBUF equ 0FC9h ;# 
  1779  0000                     # 6121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1780                           T2CON equ 0FCAh ;# 
  1781  0000                     # 6219 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1782                           PR2 equ 0FCBh ;# 
  1783  0000                     # 6224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1784                           MEMCON equ 0FCBh ;# 
  1785  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1786                           TMR2 equ 0FCCh ;# 
  1787  0000                     # 6336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1788                           T1CON equ 0FCDh ;# 
  1789  0000                     # 6448 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1790                           TMR1 equ 0FCEh ;# 
  1791  0000                     # 6455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1792                           TMR1L equ 0FCEh ;# 
  1793  0000                     # 6462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1794                           TMR1H equ 0FCFh ;# 
  1795  0000                     # 6469 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1796                           RCON equ 0FD0h ;# 
  1797  0000                     # 6612 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1798                           WDTCON equ 0FD1h ;# 
  1799  0000                     # 6639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1800                           LVDCON equ 0FD2h ;# 
  1801  0000                     # 6704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1802                           OSCCON equ 0FD3h ;# 
  1803  0000                     # 6790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1804                           T0CON equ 0FD5h ;# 
  1805  0000                     # 6866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1806                           TMR0 equ 0FD6h ;# 
  1807  0000                     # 6873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1808                           TMR0L equ 0FD6h ;# 
  1809  0000                     # 6880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1810                           TMR0H equ 0FD7h ;# 
  1811  0000                     # 6887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1812                           STATUS equ 0FD8h ;# 
  1813  0000                     # 6958 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1814                           FSR2 equ 0FD9h ;# 
  1815  0000                     # 6965 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1816                           FSR2L equ 0FD9h ;# 
  1817  0000                     # 6972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1818                           FSR2H equ 0FDAh ;# 
  1819  0000                     # 6979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1820                           PLUSW2 equ 0FDBh ;# 
  1821  0000                     # 6986 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1822                           PREINC2 equ 0FDCh ;# 
  1823  0000                     # 6993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1824                           POSTDEC2 equ 0FDDh ;# 
  1825  0000                     # 7000 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1826                           POSTINC2 equ 0FDEh ;# 
  1827  0000                     # 7007 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1828                           INDF2 equ 0FDFh ;# 
  1829  0000                     # 7014 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1830                           BSR equ 0FE0h ;# 
  1831  0000                     # 7021 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1832                           FSR1 equ 0FE1h ;# 
  1833  0000                     # 7028 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1834                           FSR1L equ 0FE1h ;# 
  1835  0000                     # 7035 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1836                           FSR1H equ 0FE2h ;# 
  1837  0000                     # 7042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1838                           PLUSW1 equ 0FE3h ;# 
  1839  0000                     # 7049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1840                           PREINC1 equ 0FE4h ;# 
  1841  0000                     # 7056 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1842                           POSTDEC1 equ 0FE5h ;# 
  1843  0000                     # 7063 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1844                           POSTINC1 equ 0FE6h ;# 
  1845  0000                     # 7070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1846                           INDF1 equ 0FE7h ;# 
  1847  0000                     # 7077 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1848                           WREG equ 0FE8h ;# 
  1849  0000                     # 7084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1850                           FSR0 equ 0FE9h ;# 
  1851  0000                     # 7091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1852                           FSR0L equ 0FE9h ;# 
  1853  0000                     # 7098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1854                           FSR0H equ 0FEAh ;# 
  1855  0000                     # 7105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1856                           PLUSW0 equ 0FEBh ;# 
  1857  0000                     # 7112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1858                           PREINC0 equ 0FECh ;# 
  1859  0000                     # 7119 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1860                           POSTDEC0 equ 0FEDh ;# 
  1861  0000                     # 7126 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1862                           POSTINC0 equ 0FEEh ;# 
  1863  0000                     # 7133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1864                           INDF0 equ 0FEFh ;# 
  1865  0000                     # 7140 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1866                           INTCON3 equ 0FF0h ;# 
  1867  0000                     # 7232 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1868                           INTCON2 equ 0FF1h ;# 
  1869  0000                     # 7309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1870                           INTCON equ 0FF2h ;# 
  1871  0000                     # 7426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1872                           PROD equ 0FF3h ;# 
  1873  0000                     # 7433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1874                           PRODL equ 0FF3h ;# 
  1875  0000                     # 7440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1876                           PRODH equ 0FF4h ;# 
  1877  0000                     # 7447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1878                           TABLAT equ 0FF5h ;# 
  1879  0000                     # 7456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1880                           TBLPTR equ 0FF6h ;# 
  1881  0000                     # 7463 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1882                           TBLPTRL equ 0FF6h ;# 
  1883  0000                     # 7470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1884                           TBLPTRH equ 0FF7h ;# 
  1885  0000                     # 7477 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1886                           TBLPTRU equ 0FF8h ;# 
  1887  0000                     # 7486 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1888                           PCLAT equ 0FF9h ;# 
  1889  0000                     # 7493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1890                           PC equ 0FF9h ;# 
  1891  0000                     # 7500 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1892                           PCL equ 0FF9h ;# 
  1893  0000                     # 7507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1894                           PCLATH equ 0FFAh ;# 
  1895  0000                     # 7514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1896                           PCLATU equ 0FFBh ;# 
  1897  0000                     # 7521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1898                           STKPTR equ 0FFCh ;# 
  1899  0000                     # 7595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1900                           TOS equ 0FFDh ;# 
  1901  0000                     # 7602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1902                           TOSL equ 0FFDh ;# 
  1903  0000                     # 7609 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1904                           TOSH equ 0FFEh ;# 
  1905  0000                     # 7616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1906                           TOSU equ 0FFFh ;# 
  1907  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1908                           DFLTCON equ 0F60h ;# 
  1909  0000                     # 118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1910                           CAP3CON equ 0F61h ;# 
  1911  0000                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1912                           CAP2CON equ 0F62h ;# 
  1913  0000                     # 236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1914                           CAP1CON equ 0F63h ;# 
  1915  0000                     # 295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1916                           CAP3BUFL equ 0F64h ;# 
  1917  0000                     # 300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1918                           MAXCNTL equ 0F64h ;# 
  1919  0000                     # 307 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1920                           CAP3BUFH equ 0F65h ;# 
  1921  0000                     # 312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1922                           MAXCNTH equ 0F65h ;# 
  1923  0000                     # 319 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1924                           CAP2BUFL equ 0F66h ;# 
  1925  0000                     # 324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1926                           POSCNTL equ 0F66h ;# 
  1927  0000                     # 331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1928                           CAP2BUFH equ 0F67h ;# 
  1929  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1930                           POSCNTH equ 0F67h ;# 
  1931  0000                     # 343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1932                           CAP1BUFL equ 0F68h ;# 
  1933  0000                     # 348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1934                           VELRL equ 0F68h ;# 
  1935  0000                     # 355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1936                           CAP1BUFH equ 0F69h ;# 
  1937  0000                     # 360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1938                           VELRH equ 0F69h ;# 
  1939  0000                     # 367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1940                           OVDCONS equ 0F6Ah ;# 
  1941  0000                     # 437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1942                           OVDCOND equ 0F6Bh ;# 
  1943  0000                     # 507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1944                           FLTCONFIG equ 0F6Ch ;# 
  1945  0000                     # 569 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1946                           DTCON equ 0F6Dh ;# 
  1947  0000                     # 695 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1948                           PWMCON1 equ 0F6Eh ;# 
  1949  0000                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1950                           PWMCON0 equ 0F6Fh ;# 
  1951  0000                     # 831 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1952                           SEVTCMPH equ 0F70h ;# 
  1953  0000                     # 838 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1954                           SEVTCMPL equ 0F71h ;# 
  1955  0000                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1956                           PDC3H equ 0F72h ;# 
  1957  0000                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1958                           PDC3L equ 0F73h ;# 
  1959  0000                     # 859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1960                           PDC2H equ 0F74h ;# 
  1961  0000                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1962                           PDC2L equ 0F75h ;# 
  1963  0000                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1964                           PDC1H equ 0F76h ;# 
  1965  0000                     # 880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1966                           PDC1L equ 0F77h ;# 
  1967  0000                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1968                           PDC0H equ 0F78h ;# 
  1969  0000                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1970                           PDC0L equ 0F79h ;# 
  1971  0000                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1972                           PTPERH equ 0F7Ah ;# 
  1973  0000                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1974                           PTPERL equ 0F7Bh ;# 
  1975  0000                     # 915 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1976                           PTMRH equ 0F7Ch ;# 
  1977  0000                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1978                           PTMRL equ 0F7Dh ;# 
  1979  0000                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1980                           PTCON1 equ 0F7Eh ;# 
  1981  0000                     # 956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1982                           PTCON0 equ 0F7Fh ;# 
  1983  0000                     # 1038 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1984                           PORTA equ 0F80h ;# 
  1985  0000                     # 1199 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1986                           PORTB equ 0F81h ;# 
  1987  0000                     # 1270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1988                           PORTC equ 0F82h ;# 
  1989  0000                     # 1536 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1990                           PORTD equ 0F83h ;# 
  1991  0000                     # 1607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1992                           PORTE equ 0F84h ;# 
  1993  0000                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1994                           TMR5 equ 0F87h ;# 
  1995  0000                     # 1740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1996                           TMR5L equ 0F87h ;# 
  1997  0000                     # 1747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  1998                           TMR5H equ 0F88h ;# 
  1999  0000                     # 1754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2000                           LATA equ 0F89h ;# 
  2001  0000                     # 1866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2002                           LATB equ 0F8Ah ;# 
  2003  0000                     # 1978 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2004                           LATC equ 0F8Bh ;# 
  2005  0000                     # 2090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2006                           LATD equ 0F8Ch ;# 
  2007  0000                     # 2202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2008                           LATE equ 0F8Dh ;# 
  2009  0000                     # 2254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2010                           PR5 equ 0F90h ;# 
  2011  0000                     # 2261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2012                           PR5L equ 0F90h ;# 
  2013  0000                     # 2268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2014                           PR5H equ 0F91h ;# 
  2015  0000                     # 2275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2016                           TRISA equ 0F92h ;# 
  2017  0000                     # 2280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2018                           DDRA equ 0F92h ;# 
  2019  0000                     # 2497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2020                           TRISB equ 0F93h ;# 
  2021  0000                     # 2502 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2022                           DDRB equ 0F93h ;# 
  2023  0000                     # 2719 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2024                           TRISC equ 0F94h ;# 
  2025  0000                     # 2724 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2026                           DDRC equ 0F94h ;# 
  2027  0000                     # 2941 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2028                           TRISD equ 0F95h ;# 
  2029  0000                     # 2946 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2030                           DDRD equ 0F95h ;# 
  2031  0000                     # 3163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2032                           TRISE equ 0F96h ;# 
  2033  0000                     # 3168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2034                           DDRE equ 0F96h ;# 
  2035  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2036                           ADCHS equ 0F99h ;# 
  2037  0000                     # 3403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2038                           ADCON3 equ 0F9Ah ;# 
  2039  0000                     # 3475 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2040                           OSCTUNE equ 0F9Bh ;# 
  2041  0000                     # 3533 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2042                           PIE1 equ 0F9Dh ;# 
  2043  0000                     # 3613 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2044                           PIR1 equ 0F9Eh ;# 
  2045  0000                     # 3693 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2046                           IPR1 equ 0F9Fh ;# 
  2047  0000                     # 3773 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2048                           PIE2 equ 0FA0h ;# 
  2049  0000                     # 3814 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2050                           PIR2 equ 0FA1h ;# 
  2051  0000                     # 3855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2052                           IPR2 equ 0FA2h ;# 
  2053  0000                     # 3896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2054                           PIE3 equ 0FA3h ;# 
  2055  0000                     # 3988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2056                           PIR3 equ 0FA4h ;# 
  2057  0000                     # 4048 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2058                           IPR3 equ 0FA5h ;# 
  2059  0000                     # 4108 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2060                           EECON1 equ 0FA6h ;# 
  2061  0000                     # 4174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2062                           EECON2 equ 0FA7h ;# 
  2063  0000                     # 4181 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2064                           EEDATA equ 0FA8h ;# 
  2065  0000                     # 4188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2066                           EEADR equ 0FA9h ;# 
  2067  0000                     # 4195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2068                           BAUDCON equ 0FAAh ;# 
  2069  0000                     # 4200 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2070                           BAUDCTL equ 0FAAh ;# 
  2071  0000                     # 4375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2072                           RCSTA equ 0FABh ;# 
  2073  0000                     # 4380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2074                           RCSTA1 equ 0FABh ;# 
  2075  0000                     # 4585 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2076                           TXSTA equ 0FACh ;# 
  2077  0000                     # 4590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2078                           TXSTA1 equ 0FACh ;# 
  2079  0000                     # 4841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2080                           TXREG equ 0FADh ;# 
  2081  0000                     # 4846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2082                           TXREG1 equ 0FADh ;# 
  2083  0000                     # 4853 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2084                           RCREG equ 0FAEh ;# 
  2085  0000                     # 4858 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2086                           RCREG1 equ 0FAEh ;# 
  2087  0000                     # 4865 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2088                           SPBRG equ 0FAFh ;# 
  2089  0000                     # 4870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2090                           SPBRG1 equ 0FAFh ;# 
  2091  0000                     # 4877 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2092                           SPBRGH equ 0FB0h ;# 
  2093  0000                     # 4884 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2094                           QEICON equ 0FB6h ;# 
  2095  0000                     # 5036 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2096                           T5CON equ 0FB7h ;# 
  2097  0000                     # 5154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2098                           ANSEL0 equ 0FB8h ;# 
  2099  0000                     # 5216 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2100                           ANSEL1 equ 0FB9h ;# 
  2101  0000                     # 5236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2102                           CCP2CON equ 0FBAh ;# 
  2103  0000                     # 5315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2104                           CCPR2 equ 0FBBh ;# 
  2105  0000                     # 5322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2106                           CCPR2L equ 0FBBh ;# 
  2107  0000                     # 5329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2108                           CCPR2H equ 0FBCh ;# 
  2109  0000                     # 5336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2110                           CCP1CON equ 0FBDh ;# 
  2111  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2112                           CCPR1 equ 0FBEh ;# 
  2113  0000                     # 5422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2114                           CCPR1L equ 0FBEh ;# 
  2115  0000                     # 5429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2116                           CCPR1H equ 0FBFh ;# 
  2117  0000                     # 5436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2118                           ADCON2 equ 0FC0h ;# 
  2119  0000                     # 5512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2120                           ADCON1 equ 0FC1h ;# 
  2121  0000                     # 5608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2122                           ADCON0 equ 0FC2h ;# 
  2123  0000                     # 5727 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2124                           ADRES equ 0FC3h ;# 
  2125  0000                     # 5734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2126                           ADRESL equ 0FC3h ;# 
  2127  0000                     # 5741 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2128                           ADRESH equ 0FC4h ;# 
  2129  0000                     # 5748 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2130                           SSPCON equ 0FC6h ;# 
  2131  0000                     # 5753 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2132                           SSPCON1 equ 0FC6h ;# 
  2133  0000                     # 5886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2134                           SSPSTAT equ 0FC7h ;# 
  2135  0000                     # 6107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2136                           SSPADD equ 0FC8h ;# 
  2137  0000                     # 6114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2138                           SSPBUF equ 0FC9h ;# 
  2139  0000                     # 6121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2140                           T2CON equ 0FCAh ;# 
  2141  0000                     # 6219 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2142                           PR2 equ 0FCBh ;# 
  2143  0000                     # 6224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2144                           MEMCON equ 0FCBh ;# 
  2145  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2146                           TMR2 equ 0FCCh ;# 
  2147  0000                     # 6336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2148                           T1CON equ 0FCDh ;# 
  2149  0000                     # 6448 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2150                           TMR1 equ 0FCEh ;# 
  2151  0000                     # 6455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2152                           TMR1L equ 0FCEh ;# 
  2153  0000                     # 6462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2154                           TMR1H equ 0FCFh ;# 
  2155  0000                     # 6469 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2156                           RCON equ 0FD0h ;# 
  2157  0000                     # 6612 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2158                           WDTCON equ 0FD1h ;# 
  2159  0000                     # 6639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2160                           LVDCON equ 0FD2h ;# 
  2161  0000                     # 6704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2162                           OSCCON equ 0FD3h ;# 
  2163  0000                     # 6790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2164                           T0CON equ 0FD5h ;# 
  2165  0000                     # 6866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2166                           TMR0 equ 0FD6h ;# 
  2167  0000                     # 6873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2168                           TMR0L equ 0FD6h ;# 
  2169  0000                     # 6880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2170                           TMR0H equ 0FD7h ;# 
  2171  0000                     # 6887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2172                           STATUS equ 0FD8h ;# 
  2173  0000                     # 6958 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2174                           FSR2 equ 0FD9h ;# 
  2175  0000                     # 6965 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2176                           FSR2L equ 0FD9h ;# 
  2177  0000                     # 6972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2178                           FSR2H equ 0FDAh ;# 
  2179  0000                     # 6979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2180                           PLUSW2 equ 0FDBh ;# 
  2181  0000                     # 6986 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2182                           PREINC2 equ 0FDCh ;# 
  2183  0000                     # 6993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2184                           POSTDEC2 equ 0FDDh ;# 
  2185  0000                     # 7000 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2186                           POSTINC2 equ 0FDEh ;# 
  2187  0000                     # 7007 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2188                           INDF2 equ 0FDFh ;# 
  2189  0000                     # 7014 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2190                           BSR equ 0FE0h ;# 
  2191  0000                     # 7021 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2192                           FSR1 equ 0FE1h ;# 
  2193  0000                     # 7028 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2194                           FSR1L equ 0FE1h ;# 
  2195  0000                     # 7035 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2196                           FSR1H equ 0FE2h ;# 
  2197  0000                     # 7042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2198                           PLUSW1 equ 0FE3h ;# 
  2199  0000                     # 7049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2200                           PREINC1 equ 0FE4h ;# 
  2201  0000                     # 7056 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2202                           POSTDEC1 equ 0FE5h ;# 
  2203  0000                     # 7063 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2204                           POSTINC1 equ 0FE6h ;# 
  2205  0000                     # 7070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2206                           INDF1 equ 0FE7h ;# 
  2207  0000                     # 7077 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2208                           WREG equ 0FE8h ;# 
  2209  0000                     # 7084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2210                           FSR0 equ 0FE9h ;# 
  2211  0000                     # 7091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2212                           FSR0L equ 0FE9h ;# 
  2213  0000                     # 7098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2214                           FSR0H equ 0FEAh ;# 
  2215  0000                     # 7105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2216                           PLUSW0 equ 0FEBh ;# 
  2217  0000                     # 7112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2218                           PREINC0 equ 0FECh ;# 
  2219  0000                     # 7119 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2220                           POSTDEC0 equ 0FEDh ;# 
  2221  0000                     # 7126 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2222                           POSTINC0 equ 0FEEh ;# 
  2223  0000                     # 7133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2224                           INDF0 equ 0FEFh ;# 
  2225  0000                     # 7140 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2226                           INTCON3 equ 0FF0h ;# 
  2227  0000                     # 7232 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2228                           INTCON2 equ 0FF1h ;# 
  2229  0000                     # 7309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2230                           INTCON equ 0FF2h ;# 
  2231  0000                     # 7426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2232                           PROD equ 0FF3h ;# 
  2233  0000                     # 7433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2234                           PRODL equ 0FF3h ;# 
  2235  0000                     # 7440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2236                           PRODH equ 0FF4h ;# 
  2237  0000                     # 7447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2238                           TABLAT equ 0FF5h ;# 
  2239  0000                     # 7456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2240                           TBLPTR equ 0FF6h ;# 
  2241  0000                     # 7463 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2242                           TBLPTRL equ 0FF6h ;# 
  2243  0000                     # 7470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2244                           TBLPTRH equ 0FF7h ;# 
  2245  0000                     # 7477 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2246                           TBLPTRU equ 0FF8h ;# 
  2247  0000                     # 7486 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2248                           PCLAT equ 0FF9h ;# 
  2249  0000                     # 7493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2250                           PC equ 0FF9h ;# 
  2251  0000                     # 7500 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2252                           PCL equ 0FF9h ;# 
  2253  0000                     # 7507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2254                           PCLATH equ 0FFAh ;# 
  2255  0000                     # 7514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2256                           PCLATU equ 0FFBh ;# 
  2257  0000                     # 7521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2258                           STKPTR equ 0FFCh ;# 
  2259  0000                     # 7595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2260                           TOS equ 0FFDh ;# 
  2261  0000                     # 7602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2262                           TOSL equ 0FFDh ;# 
  2263  0000                     # 7609 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2264                           TOSH equ 0FFEh ;# 
  2265  0000                     # 7616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4331.h"
  2266                           TOSU equ 0FFFh ;# 
  2267  0000                     	FNCALL	_main,_findStrengths
  2268                           	FNCALL	_main,_initEusart
  2269                           	FNCALL	_main,_initIR
  2270                           	FNCALL	_main,_initLCD
  2271                           	FNCALL	_main,_initPWM
  2272                           	FNCALL	_main,_move
  2273                           	FNCALL	_main,_setMotorPWM
  2274                           	FNCALL	_main,_stop
  2275                           	FNCALL	_move,_setMotorsFullSpeed
  2276                           	FNCALL	_move,_stop
  2277                           	FNCALL	_stop,_setMotorPWM
  2278                           	FNCALL	_setMotorsFullSpeed,_setMotorPWM
  2279                           	FNCALL	_setMotorPWM,___wmul
  2280                           	FNCALL	_initLCD,_LCDout
  2281                           	FNCALL	_initLCD,_SendLCD
  2282                           	FNCALL	_SendLCD,_LCDout
  2283                           	FNCALL	_LCDout,_E_TOG
  2284                           	FNROOT	_main
  2285                           	FNCALL	_my_lp_isr,_sendRFID
  2286                           	FNCALL	_sendRFID,_LCD_String
  2287                           	FNCALL	_sendRFID,_SetLine
  2288                           	FNCALL	_sendRFID,_getCharSerial
  2289                           	FNCALL	_sendRFID,i1_SendLCD
  2290                           	FNCALL	_SetLine,i1_SendLCD
  2291                           	FNCALL	_LCD_String,i1_SendLCD
  2292                           	FNCALL	i1_SendLCD,i1_LCDout
  2293                           	FNCALL	i1_LCDout,i1_E_TOG
  2294                           	FNCALL	intlevel1,_my_lp_isr
  2295                           	global	intlevel1
  2296                           	FNROOT	intlevel1
  2297                           	FNCALL	intlevel2,_my_hp_isr
  2298                           	global	intlevel2
  2299                           	FNROOT	intlevel2
  2300                           	global	_index
  2301                           	global	_reset
  2302                           psect	idataCOMRAM,class=CODE,space=0,delta=1,noexec
  2303                           global __pidataCOMRAM
  2304                           __pidataCOMRAM:
  2305  000FFE                     	file	"RFID.c"
  2306                           	line	13
  2307                           
  2308                           ;initializer for _index
  2309                           	db	low(01h)
  2310  000FFE  01                 psect	idataBANK1,class=CODE,space=0,delta=1,noexec
  2311                           global __pidataBANK1
  2312                           __pidataBANK1:
  2313  000FFF                     	file	"main.c"
  2314                           	line	40
  2315                           
  2316                           ;initializer for _reset
  2317                           	db	low(01h)
  2318  000FFF  01                 	global	_a
  2319                           	global	_checkSum
  2320                           	global	_currentVal
  2321                           	global	_debouncer
  2322                           	global	_IRsource
  2323                           	global	_RFIDread
  2324                           	global	_robotOn
  2325                           	global	_motorR
  2326                           	global	_motorL
  2327                           	global	_CAP3BUFH
  2328                           _CAP3BUFH	set	0xF65
  2329  0000                     	global	_CAP3BUFL
  2330                           _CAP3BUFL	set	0xF64
  2331  0000                     	global	_CAP2BUFH
  2332                           _CAP2BUFH	set	0xF67
  2333  0000                     	global	_CAP2BUFL
  2334                           _CAP2BUFL	set	0xF66
  2335  0000                     	global	_CAP3CON
  2336                           _CAP3CON	set	0xF61
  2337  0000                     	global	_CAP2CON
  2338                           _CAP2CON	set	0xF62
  2339  0000                     	global	_TRISAbits
  2340                           _TRISAbits	set	0xF92
  2341  0000                     	global	_LATAbits
  2342                           _LATAbits	set	0xF89
  2343  0000                     	global	_LATD
  2344                           _LATD	set	0xF8C
  2345  0000                     	global	_LATC
  2346                           _LATC	set	0xF8B
  2347  0000                     	global	_LATB
  2348                           _LATB	set	0xF8A
  2349  0000                     	global	_PDC3H
  2350                           _PDC3H	set	0xF72
  2351  0000                     	global	_PDC3L
  2352                           _PDC3L	set	0xF73
  2353  0000                     	global	_PDC2H
  2354                           _PDC2H	set	0xF74
  2355  0000                     	global	_PDC2L
  2356                           _PDC2L	set	0xF75
  2357  0000                     	global	_PTPERH
  2358                           _PTPERH	set	0xF7A
  2359  0000                     	global	_PTPERL
  2360                           _PTPERL	set	0xF7B
  2361  0000                     	global	_PWMCON1
  2362                           _PWMCON1	set	0xF6E
  2363  0000                     	global	_PWMCON0
  2364                           _PWMCON0	set	0xF6F
  2365  0000                     	global	_PTCON1
  2366                           _PTCON1	set	0xF7E
  2367  0000                     	global	_PTCON0
  2368                           _PTCON0	set	0xF7F
  2369  0000                     	global	_TRISBbits
  2370                           _TRISBbits	set	0xF93
  2371  0000                     	global	_LATBbits
  2372                           _LATBbits	set	0xF8A
  2373  0000                     	global	_TRISDbits
  2374                           _TRISDbits	set	0xF95
  2375  0000                     	global	_LATDbits
  2376                           _LATDbits	set	0xF8C
  2377  0000                     	global	_TRISCbits
  2378                           _TRISCbits	set	0xF94
  2379  0000                     	global	_LATCbits
  2380                           _LATCbits	set	0xF8B
  2381  0000                     	global	_PDC1H
  2382                           _PDC1H	set	0xF76
  2383  0000                     	global	_PDC1L
  2384                           _PDC1L	set	0xF77
  2385  0000                     	global	_PDC0H
  2386                           _PDC0H	set	0xF78
  2387  0000                     	global	_PDC0L
  2388                           _PDC0L	set	0xF79
  2389  0000                     	global	_T5CON
  2390                           _T5CON	set	0xFB7
  2391  0000                     	global	_ANSEL1
  2392                           _ANSEL1	set	0xFB9
  2393  0000                     	global	_ANSEL0
  2394                           _ANSEL0	set	0xFB8
  2395  0000                     	global	_TXREG
  2396                           _TXREG	set	0xFAD
  2397  0000                     	global	_RCREG
  2398                           _RCREG	set	0xFAE
  2399  0000                     	global	_PIR1bits
  2400                           _PIR1bits	set	0xF9E
  2401  0000                     	global	_RCSTAbits
  2402                           _RCSTAbits	set	0xFAB
  2403  0000                     	global	_TXSTAbits
  2404                           _TXSTAbits	set	0xFAC
  2405  0000                     	global	_BAUDCONbits
  2406                           _BAUDCONbits	set	0xFAA
  2407  0000                     	global	_SPBRGH
  2408                           _SPBRGH	set	0xFB0
  2409  0000                     	global	_SPBRG
  2410                           _SPBRG	set	0xFAF
  2411  0000                     	global	_RCONbits
  2412                           _RCONbits	set	0xFD0
  2413  0000                     	global	_PIR1
  2414                           _PIR1	set	0xF9E
  2415  0000                     	global	_OSCCONbits
  2416                           _OSCCONbits	set	0xFD3
  2417  0000                     	global	_OSCCON
  2418                           _OSCCON	set	0xFD3
  2419  0000                     	global	_INTCON2bits
  2420                           _INTCON2bits	set	0xFF1
  2421  0000                     	global	_INTCON3bits
  2422                           _INTCON3bits	set	0xFF0
  2423  0000                     	global	_INTCONbits
  2424                           _INTCONbits	set	0xFF2
  2425  0000                     psect	smallconst,class=SMALLCONST,space=0,reloc=2,noexec
  2426                           global __psmallconst
  2427                           __psmallconst:
  2428  000300                     	db	0
  2429  000300  00                 	
  2430                           STR_2:
  2431  000301                     	db	78	;'N'
  2432  000301  4E                 	db	111	;'o'
  2433  000302  6F                 	db	32
  2434  000303  20                 	db	77	;'M'
  2435  000304  4D                 	db	97	;'a'
  2436  000305  61                 	db	116	;'t'
  2437  000306  74                 	db	99	;'c'
  2438  000307  63                 	db	104	;'h'
  2439  000308  68                 	db	0
  2440  000309  00                 STR_1	equ	STR_2+3
  2441  0000                     ; #config settings
  2442                           global __CFG_OSC$IRCIO
  2443                           __CFG_OSC$IRCIO equ 0x0
  2444  0000                     global __CFG_WDTEN$OFF
  2445                           __CFG_WDTEN$OFF equ 0x0
  2446  0000                     global __CFG_MCLRE$OFF
  2447                           __CFG_MCLRE$OFF equ 0x0
  2448  0000                     global __CFG_LVP$OFF
  2449                           __CFG_LVP$OFF equ 0x0
  2450  0000                     	file	"C:\Users\yn2217\AppData\Local\Temp\sj5o."
  2451                           	line	#
  2452                           psect	cinit,class=CODE,delta=1,reloc=2
  2453                           global __pcinit
  2454                           __pcinit:
  2455  000DE8                     global start_initialization
  2456                           start_initialization:
  2457  000DE8                     
  2458                           global __initialization
  2459                           __initialization:
  2460  000DE8                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
  2461                           global __pbssCOMRAM
  2462                           __pbssCOMRAM:
  2463  00002E                     	global	_a
  2464                           _a:
  2465  00002E                            ds      1
  2466  00002E                     	global	_checkSum
  2467                           _checkSum:
  2468  00002F                            ds      1
  2469  00002F                     	global	_currentVal
  2470                           _currentVal:
  2471  000030                            ds      1
  2472  000030                     	global	_debouncer
  2473                           _debouncer:
  2474  000031                            ds      1
  2475  000031                     psect	dataCOMRAM,class=COMRAM,space=1,noexec
  2476                           global __pdataCOMRAM
  2477                           __pdataCOMRAM:
  2478  000032                     	file	"RFID.c"
  2479                           	line	13
  2480                           	global	_index
  2481                           _index:
  2482  000032                            ds      1
  2483  000032                     psect	bssBANK1,class=BANK1,space=1,noexec,lowdata
  2484                           global __pbssBANK1
  2485                           __pbssBANK1:
  2486  0001CE                     	global	_IRsource
  2487                           _IRsource:
  2488  0001CE                            ds      1
  2489  0001CE                     	global	_RFIDread
  2490                           _RFIDread:
  2491  0001CF                            ds      1
  2492  0001CF                     	global	_robotOn
  2493                           _robotOn:
  2494  0001D0                            ds      1
  2495  0001D0                     	global	_motorR
  2496                           _motorR:
  2497  0001D1                            ds      9
  2498  0001D1                     	global	_motorL
  2499                           _motorL:
  2500  0001DA                            ds      9
  2501  0001DA                     psect	dataBANK1,class=BANK1,space=1,noexec,lowdata
  2502                           global __pdataBANK1
  2503                           __pdataBANK1:
  2504  0001E3                     	file	"main.c"
  2505                           	line	40
  2506                           	global	_reset
  2507                           _reset:
  2508  0001E3                            ds      1
  2509  0001E3                     	file	"C:\Users\yn2217\AppData\Local\Temp\sj5o."
  2510                           	line	#
  2511                           psect	cinit
  2512                           ; Initialize objects allocated to BANK1 (1 bytes)
  2513                           	global __pidataBANK1
  2514                           	; load TBLPTR registers with __pidataBANK1
  2515                           	movlw	low (__pidataBANK1)
  2516  000DE8  0EFF               	movwf	tblptrl
  2517  000DEA  6EF6               	movlw	high(__pidataBANK1)
  2518  000DEC  0E0F               	movwf	tblptrh
  2519  000DEE  6EF7               	movlw	low highword(__pidataBANK1)
  2520  000DF0  0E00               	movwf	tblptru
  2521  000DF2  6EF8               	tblrd*+ ;fetch initializer
  2522  000DF4  0009               	movff	tablat, __pdataBANK1+0		
  2523  000DF6  CFF5 F1E3          ; Initialize objects allocated to COMRAM (1 bytes)
  2524                           	global __pidataCOMRAM
  2525                           	; load TBLPTR registers with __pidataCOMRAM
  2526                           	movlw	low (__pidataCOMRAM)
  2527  000DFA  0EFE               	movwf	tblptrl
  2528  000DFC  6EF6               	movlw	high(__pidataCOMRAM)
  2529  000DFE  0E0F               	movwf	tblptrh
  2530  000E00  6EF7               	movlw	low highword(__pidataCOMRAM)
  2531  000E02  0E00               	movwf	tblptru
  2532  000E04  6EF8               	tblrd*+ ;fetch initializer
  2533  000E06  0009               	movff	tablat, __pdataCOMRAM+0		
  2534  000E08  CFF5 F032          	line	#
  2535                           ; Clear objects allocated to BANK1 (21 bytes)
  2536                           	global __pbssBANK1
  2537                           lfsr	0,__pbssBANK1
  2538  000E0C  EE01  F0CE         movlw	21
  2539  000E10  0E15               clear_0:
  2540  000E12                     clrf	postinc0,c
  2541  000E12  6AEE               decf	wreg
  2542  000E14  06E8               bnz	clear_0
  2543  000E16  E1FD               ; Clear objects allocated to COMRAM (4 bytes)
  2544                           	global __pbssCOMRAM
  2545                           clrf	(__pbssCOMRAM+3)&0xffh,c
  2546  000E18  6A31               clrf	(__pbssCOMRAM+2)&0xffh,c
  2547  000E1A  6A30               clrf	(__pbssCOMRAM+1)&0xffh,c
  2548  000E1C  6A2F               clrf	(__pbssCOMRAM+0)&0xffh,c
  2549  000E1E  6A2E               psect cinit,class=CODE,delta=1
  2550                           global end_of_initialization,__end_of__initialization
  2551                           
  2552                           ;End of C runtime variable initialization code
  2553                           
  2554                           end_of_initialization:
  2555  000E20                     __end_of__initialization:
  2556  000E20                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
  2557  000E20  9033               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  2558  000E22  9233               	GLOBAL	__Lsmallconst
  2559                           	movlw	low highword(__Lsmallconst)
  2560  000E24  0E00               	movwf	tblptru
  2561  000E26  6EF8               	movlw	high(__Lsmallconst)
  2562  000E28  0E03               	movwf	tblptrh
  2563  000E2A  6EF7               movlb 0
  2564  000E2C  0100               goto _main	;jump to C main() function
  2565  000E2E  EF86  F001         psect	cstackBANK1,class=BANK1,space=1,noexec
  2566                           global __pcstackBANK1
  2567                           __pcstackBANK1:
  2568  000100                     	global	main@path
  2569                           main@path:	; 200 bytes @ 0x0
  2570  000100                     	ds   200
  2571  000100                     	global	main@c
  2572                           main@c:	; 1 bytes @ 0xC8
  2573  0001C8                     	ds   1
  2574  0001C8                     	global	main@leftIR
  2575                           main@leftIR:	; 2 bytes @ 0xC9
  2576  0001C9                     	ds   2
  2577  0001C9                     	global	main@rightIR
  2578                           main@rightIR:	; 2 bytes @ 0xCB
  2579  0001CB                     	ds   2
  2580  0001CB                     	global	main@i
  2581                           main@i:	; 1 bytes @ 0xCD
  2582  0001CD                     	ds   1
  2583  0001CD                     psect	cstackCOMRAM,class=COMRAM,space=1,noexec
  2584                           global __pcstackCOMRAM
  2585                           __pcstackCOMRAM:
  2586  000001                     ?_initEusart:	; 1 bytes @ 0x0
  2587  000001                     ?_initPWM:	; 1 bytes @ 0x0
  2588  000001                     ?_initLCD:	; 1 bytes @ 0x0
  2589  000001                     ?_initIR:	; 1 bytes @ 0x0
  2590  000001                     ?_sendRFID:	; 1 bytes @ 0x0
  2591  000001                     ?_main:	; 1 bytes @ 0x0
  2592  000001                     ?_my_hp_isr:	; 1 bytes @ 0x0
  2593  000001                     ??_my_hp_isr:	; 1 bytes @ 0x0
  2594  000001                     ?_my_lp_isr:	; 1 bytes @ 0x0
  2595  000001                     ?_getCharSerial:	; 1 bytes @ 0x0
  2596  000001                     ?_E_TOG:	; 1 bytes @ 0x0
  2597  000001                     ?_LCDout:	; 1 bytes @ 0x0
  2598  000001                     ?_SetLine:	; 1 bytes @ 0x0
  2599  000001                     ?i1_E_TOG:	; 1 bytes @ 0x0
  2600  000001                     ?i1_LCDout:	; 1 bytes @ 0x0
  2601  000001                     	ds   1
  2602  000001                     ??_getCharSerial:	; 1 bytes @ 0x1
  2603  000002                     ??i1_E_TOG:	; 1 bytes @ 0x1
  2604  000002                     ??i1_LCDout:	; 1 bytes @ 0x1
  2605  000002                     	ds   2
  2606  000002                     	global	i1LCDout@number
  2607                           i1LCDout@number:	; 1 bytes @ 0x3
  2608  000004                     	ds   1
  2609  000004                     ?i1_SendLCD:	; 1 bytes @ 0x4
  2610  000005                     	global	i1SendLCD@type
  2611                           i1SendLCD@type:	; 1 bytes @ 0x4
  2612  000005                     	ds   1
  2613  000005                     ??i1_SendLCD:	; 1 bytes @ 0x5
  2614  000006                     	global	i1SendLCD@HighBits
  2615                           i1SendLCD@HighBits:	; 1 bytes @ 0x5
  2616  000006                     	ds   1
  2617  000006                     	global	i1SendLCD@LowBits
  2618                           i1SendLCD@LowBits:	; 1 bytes @ 0x6
  2619  000007                     	ds   1
  2620  000007                     	global	i1SendLCD@Byte
  2621                           i1SendLCD@Byte:	; 1 bytes @ 0x7
  2622  000008                     	ds   1
  2623  000008                     ??_SetLine:	; 1 bytes @ 0x8
  2624  000009                     ?_LCD_String:	; 1 bytes @ 0x8
  2625  000009                     	global	SetLine@line
  2626                           SetLine@line:	; 1 bytes @ 0x8
  2627  000009                     	global	LCD_String@string
  2628                           LCD_String@string:	; 2 bytes @ 0x8
  2629  000009                     	ds   2
  2630  000009                     ??_LCD_String:	; 1 bytes @ 0xA
  2631  00000B                     	ds   1
  2632  00000B                     ??_sendRFID:	; 1 bytes @ 0xB
  2633  00000C                     ??_my_lp_isr:	; 1 bytes @ 0xB
  2634  00000C                     	ds   7
  2635  00000C                     ??_initEusart:	; 1 bytes @ 0x12
  2636  000013                     ??_initPWM:	; 1 bytes @ 0x12
  2637  000013                     ??_initIR:	; 1 bytes @ 0x12
  2638  000013                     ?_findStrengths:	; 1 bytes @ 0x12
  2639  000013                     ??_E_TOG:	; 1 bytes @ 0x12
  2640  000013                     ??_LCDout:	; 1 bytes @ 0x12
  2641  000013                     	global	?___wmul
  2642                           ?___wmul:	; 2 bytes @ 0x12
  2643  000013                     	global	findStrengths@leftIR
  2644                           findStrengths@leftIR:	; 2 bytes @ 0x12
  2645  000013                     	global	___wmul@multiplier
  2646                           ___wmul@multiplier:	; 2 bytes @ 0x12
  2647  000013                     	ds   2
  2648  000013                     	global	LCDout@number
  2649                           LCDout@number:	; 1 bytes @ 0x14
  2650  000015                     	global	findStrengths@rightIR
  2651                           findStrengths@rightIR:	; 2 bytes @ 0x14
  2652  000015                     	global	___wmul@multiplicand
  2653                           ___wmul@multiplicand:	; 2 bytes @ 0x14
  2654  000015                     	ds   1
  2655  000015                     ?_SendLCD:	; 1 bytes @ 0x15
  2656  000016                     	global	SendLCD@type
  2657                           SendLCD@type:	; 1 bytes @ 0x15
  2658  000016                     	ds   1
  2659  000016                     ??_findStrengths:	; 1 bytes @ 0x16
  2660  000017                     ??_SendLCD:	; 1 bytes @ 0x16
  2661  000017                     ??___wmul:	; 1 bytes @ 0x16
  2662  000017                     	global	SendLCD@HighBits
  2663                           SendLCD@HighBits:	; 1 bytes @ 0x16
  2664  000017                     	global	___wmul@product
  2665                           ___wmul@product:	; 2 bytes @ 0x16
  2666  000017                     	ds   1
  2667  000017                     	global	SendLCD@LowBits
  2668                           SendLCD@LowBits:	; 1 bytes @ 0x17
  2669  000018                     	ds   1
  2670  000018                     ?_setMotorPWM:	; 1 bytes @ 0x18
  2671  000019                     	global	SendLCD@Byte
  2672                           SendLCD@Byte:	; 1 bytes @ 0x18
  2673  000019                     	global	setMotorPWM@m
  2674                           setMotorPWM@m:	; 2 bytes @ 0x18
  2675  000019                     	ds   1
  2676  000019                     ??_initLCD:	; 1 bytes @ 0x19
  2677  00001A                     	ds   1
  2678  00001A                     ??_setMotorPWM:	; 1 bytes @ 0x1A
  2679  00001B                     	ds   4
  2680  00001B                     	global	setMotorPWM@PWMduty
  2681                           setMotorPWM@PWMduty:	; 2 bytes @ 0x1E
  2682  00001F                     	ds   2
  2683  00001F                     ?_stop:	; 1 bytes @ 0x20
  2684  000021                     ?_setMotorsFullSpeed:	; 1 bytes @ 0x20
  2685  000021                     	global	setMotorsFullSpeed@mL
  2686                           setMotorsFullSpeed@mL:	; 2 bytes @ 0x20
  2687  000021                     	global	stop@mL
  2688                           stop@mL:	; 2 bytes @ 0x20
  2689  000021                     	ds   2
  2690  000021                     	global	setMotorsFullSpeed@mR
  2691                           setMotorsFullSpeed@mR:	; 2 bytes @ 0x22
  2692  000023                     	global	stop@mR
  2693                           stop@mR:	; 2 bytes @ 0x22
  2694  000023                     	ds   2
  2695  000023                     ??_stop:	; 1 bytes @ 0x24
  2696  000025                     ??_setMotorsFullSpeed:	; 1 bytes @ 0x24
  2697  000025                     	ds   1
  2698  000025                     ?_move:	; 1 bytes @ 0x25
  2699  000026                     	global	move@mL
  2700                           move@mL:	; 2 bytes @ 0x25
  2701  000026                     	ds   2
  2702  000026                     	global	move@mR
  2703                           move@mR:	; 2 bytes @ 0x27
  2704  000028                     	ds   2
  2705  000028                     	global	move@dir
  2706                           move@dir:	; 1 bytes @ 0x29
  2707  00002A                     	ds   1
  2708  00002A                     ??_move:	; 1 bytes @ 0x2A
  2709  00002B                     ??_main:	; 1 bytes @ 0x2A
  2710  00002B                     	ds   3
  2711  00002B                     ;!
  2712                           ;!Data Sizes:
  2713                           ;!    Strings     9
  2714                           ;!    Constant    0
  2715                           ;!    Data        2
  2716                           ;!    BSS         25
  2717                           ;!    Persistent  0
  2718                           ;!    Stack       0
  2719                           ;!
  2720                           ;!Auto Spaces:
  2721                           ;!    Space          Size  Autos    Used
  2722                           ;!    COMRAM           94     45      50
  2723                           ;!    BANK0           160      0       0
  2724                           ;!    BANK1           256    206     228
  2725                           ;!    BANK2           244      0       0
  2726                           
  2727                           ;!
  2728                           ;!Pointer List with Targets:
  2729                           ;!
  2730                           ;!    findStrengths@rightIR	PTR int  size(2) Largest target is 2
  2731                           ;!		 -> main@rightIR(BANK1[2]), 
  2732                           ;!
  2733                           ;!    findStrengths@leftIR	PTR int  size(2) Largest target is 2
  2734                           ;!		 -> main@leftIR(BANK1[2]), 
  2735                           ;!
  2736                           ;!    LCD_String@string	PTR unsigned char  size(2) Largest target is 9
  2737                           ;!		 -> STR_2(CODE[9]), STR_1(CODE[6]), 
  2738                           ;!
  2739                           ;!    move@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
  2740                           ;!		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 
  2741                           ;!
  2742                           ;!    move@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
  2743                           ;!		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 
  2744                           ;!
  2745                           ;!    move@mR	PTR struct DC_motor size(2) Largest target is 11
  2746                           ;!		 -> motorR(BANK1[9]), 
  2747                           ;!
  2748                           ;!    move@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
  2749                           ;!		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 
  2750                           ;!
  2751                           ;!    move@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
  2752                           ;!		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 
  2753                           ;!
  2754                           ;!    move@mL	PTR struct DC_motor size(2) Largest target is 11
  2755                           ;!		 -> motorL(BANK1[9]), 
  2756                           ;!
  2757                           ;!    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
  2758                           ;!		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 
  2759                           ;!
  2760                           ;!    stop@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
  2761                           ;!		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 
  2762                           ;!
  2763                           ;!    stop@mR	PTR struct DC_motor size(2) Largest target is 11
  2764                           ;!		 -> motorR(BANK1[9]), 
  2765                           ;!
  2766                           ;!    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
  2767                           ;!		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 
  2768                           ;!
  2769                           ;!    stop@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
  2770                           ;!		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 
  2771                           ;!
  2772                           ;!    stop@mL	PTR struct DC_motor size(2) Largest target is 11
  2773                           ;!		 -> motorL(BANK1[9]), 
  2774                           ;!
  2775                           ;!    setMotorsFullSpeed@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1

  2776                           ;!		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 
  2777                           ;!
  2778                           ;!    setMotorsFullSpeed@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
  2779                           ;!		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 
  2780                           ;!
  2781                           ;!    setMotorsFullSpeed@mR	PTR struct DC_motor size(2) Largest target is 11
  2782                           ;!		 -> motorR(BANK1[9]), 
  2783                           ;!
  2784                           ;!    setMotorsFullSpeed@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1

  2785                           ;!		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 
  2786                           ;!
  2787                           ;!    setMotorsFullSpeed@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
  2788                           ;!		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 
  2789                           ;!
  2790                           ;!    setMotorsFullSpeed@mL	PTR struct DC_motor size(2) Largest target is 11
  2791                           ;!		 -> motorL(BANK1[9]), 
  2792                           ;!
  2793                           ;!    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
  2794                           ;!		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 
  2795                           ;!
  2796                           ;!    setMotorPWM@m.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
  2797                           ;!		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 
  2798                           ;!
  2799                           ;!    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
  2800                           ;!		 -> motorL(BANK1[9]), motorR(BANK1[9]), 
  2801                           ;!
  2802                           ;!    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
  2803                           ;!		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 
  2804                           ;!
  2805                           ;!    motorR.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
  2806                           ;!		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 
  2807                           ;!
  2808                           ;!    S24DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
  2809                           ;!		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 
  2810                           ;!
  2811                           ;!    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
  2812                           ;!		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 
  2813                           ;!
  2814                           ;!    S24DC_motor$dutyLowByte	PTR unsigned char  size(2) Largest target is 1
  2815                           ;!		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 
  2816                           ;!
  2817                           ;!    motorL.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
  2818                           ;!		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 
  2819                           ;!
  2820                           
  2821                           
  2822                           ;!
  2823                           ;!Critical Paths under _main in COMRAM
  2824                           ;!
  2825                           ;!    _main->_move
  2826                           ;!    _move->_setMotorsFullSpeed
  2827                           ;!    _move->_stop
  2828                           ;!    _stop->_setMotorPWM
  2829                           ;!    _setMotorsFullSpeed->_setMotorPWM
  2830                           ;!    _setMotorPWM->___wmul
  2831                           ;!    _initLCD->_SendLCD
  2832                           ;!    _SendLCD->_LCDout
  2833                           ;!
  2834                           ;!Critical Paths under _my_lp_isr in COMRAM
  2835                           ;!
  2836                           ;!    _sendRFID->_LCD_String
  2837                           ;!    _SetLine->i1_SendLCD
  2838                           ;!    _LCD_String->i1_SendLCD
  2839                           ;!    i1_SendLCD->i1_LCDout
  2840                           ;!
  2841                           ;!Critical Paths under _my_hp_isr in COMRAM
  2842                           ;!
  2843                           ;!    None.
  2844                           ;!
  2845                           ;!Critical Paths under _main in BANK0
  2846                           ;!
  2847                           ;!    None.
  2848                           ;!
  2849                           ;!Critical Paths under _my_lp_isr in BANK0
  2850                           ;!
  2851                           ;!    None.
  2852                           ;!
  2853                           ;!Critical Paths under _my_hp_isr in BANK0
  2854                           ;!
  2855                           ;!    None.
  2856                           ;!
  2857                           ;!Critical Paths under _main in BANK1
  2858                           ;!
  2859                           ;!    None.
  2860                           ;!
  2861                           ;!Critical Paths under _my_lp_isr in BANK1
  2862                           ;!
  2863                           ;!    None.
  2864                           ;!
  2865                           ;!Critical Paths under _my_hp_isr in BANK1
  2866                           ;!
  2867                           ;!    None.
  2868                           ;!
  2869                           ;!Critical Paths under _main in BANK2
  2870                           ;!
  2871                           ;!    None.
  2872                           ;!
  2873                           ;!Critical Paths under _my_lp_isr in BANK2
  2874                           ;!
  2875                           ;!    None.
  2876                           ;!
  2877                           ;!Critical Paths under _my_hp_isr in BANK2
  2878                           ;!
  2879                           ;!    None.
  2880                           
  2881 ;;
  2882 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2883 ;;
  2884                           
  2885                           ;!
  2886                           ;!Call Graph Tables:
  2887                           ;!
  2888                           ;! ---------------------------------------------------------------------------------
  2889                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2890                           ;! ---------------------------------------------------------------------------------
  2891                           ;! (0) _main                                               209   209      0    9939
  2892                           ;!                                             42 COMRAM     3     3      0
  2893                           ;!                                              0 BANK1    206   206      0
  2894                           ;!                      _findStrengths
  2895                           ;!                         _initEusart
  2896                           ;!                             _initIR
  2897                           ;!                            _initLCD
  2898                           ;!                            _initPWM
  2899                           ;!                               _move
  2900                           ;!                        _setMotorPWM
  2901                           ;!                               _stop
  2902                           ;! ---------------------------------------------------------------------------------
  2903                           ;! (1) _move                                                 5     0      5    4632
  2904                           ;!                                             37 COMRAM     5     0      5
  2905                           ;!                 _setMotorsFullSpeed
  2906                           ;!                               _stop
  2907                           ;! ---------------------------------------------------------------------------------
  2908                           ;! (1) _stop                                                 5     1      4    1810
  2909                           ;!                                             32 COMRAM     5     1      4
  2910                           ;!                        _setMotorPWM
  2911                           ;! ---------------------------------------------------------------------------------
  2912                           ;! (2) _setMotorsFullSpeed                                   5     1      4    1506
  2913                           ;!                                             32 COMRAM     5     1      4
  2914                           ;!                        _setMotorPWM
  2915                           ;! ---------------------------------------------------------------------------------
  2916                           ;! (2) _setMotorPWM                                          8     6      2    1244
  2917                           ;!                                             24 COMRAM     8     6      2
  2918                           ;!                             ___wmul
  2919                           ;! ---------------------------------------------------------------------------------
  2920                           ;! (3) ___wmul                                               6     2      4     257
  2921                           ;!                                             18 COMRAM     6     2      4
  2922                           ;! ---------------------------------------------------------------------------------
  2923                           ;! (1) _initPWM                                              0     0      0       0
  2924                           ;! ---------------------------------------------------------------------------------
  2925                           ;! (1) _initLCD                                              1     1      0     780
  2926                           ;!                                             25 COMRAM     1     1      0
  2927                           ;!                             _LCDout
  2928                           ;!                            _SendLCD
  2929                           ;! ---------------------------------------------------------------------------------
  2930                           ;! (2) _SendLCD                                              4     3      1     736
  2931                           ;!                                             21 COMRAM     4     3      1
  2932                           ;!                             _LCDout
  2933                           ;! ---------------------------------------------------------------------------------
  2934                           ;! (3) _LCDout                                               3     3      0      44
  2935                           ;!                                             18 COMRAM     3     3      0
  2936                           ;!                              _E_TOG
  2937                           ;! ---------------------------------------------------------------------------------
  2938                           ;! (4) _E_TOG                                                0     0      0       0
  2939                           ;! ---------------------------------------------------------------------------------
  2940                           ;! (1) _initIR                                               0     0      0       0
  2941                           ;! ---------------------------------------------------------------------------------
  2942                           ;! (1) _initEusart                                           0     0      0       0
  2943                           ;! ---------------------------------------------------------------------------------
  2944                           ;! (1) _findStrengths                                        8     4      4     652
  2945                           ;!                                             18 COMRAM     8     4      4
  2946                           ;! ---------------------------------------------------------------------------------
  2947                           ;! Estimated maximum stack depth 4
  2948                           ;! ---------------------------------------------------------------------------------
  2949                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2950                           ;! ---------------------------------------------------------------------------------
  2951                           ;! (5) _my_lp_isr                                            7     7      0    1021
  2952                           ;!                                             11 COMRAM     7     7      0
  2953                           ;!                           _sendRFID
  2954                           ;! ---------------------------------------------------------------------------------
  2955                           ;! (6) _sendRFID                                             0     0      0    1021
  2956                           ;!                         _LCD_String
  2957                           ;!                            _SetLine
  2958                           ;!                      _getCharSerial
  2959                           ;!                          i1_SendLCD
  2960                           ;! ---------------------------------------------------------------------------------
  2961                           ;! (7) _getCharSerial                                        0     0      0       0
  2962                           ;! ---------------------------------------------------------------------------------
  2963                           ;! (7) _SetLine                                              1     1      0     304
  2964                           ;!                                              8 COMRAM     1     1      0
  2965                           ;!                          i1_SendLCD
  2966                           ;! ---------------------------------------------------------------------------------
  2967                           ;! (7) _LCD_String                                           3     1      2     457
  2968                           ;!                                              8 COMRAM     3     1      2
  2969                           ;!                          i1_SendLCD
  2970                           ;! ---------------------------------------------------------------------------------
  2971                           ;! (7) i1_SendLCD                                            4     3      1     260
  2972                           ;!                                              4 COMRAM     4     3      1
  2973                           ;!                           i1_LCDout
  2974                           ;! ---------------------------------------------------------------------------------
  2975                           ;! (8) i1_LCDout                                             3     3      0      44
  2976                           ;!                                              1 COMRAM     3     3      0
  2977                           ;!                            i1_E_TOG
  2978                           ;! ---------------------------------------------------------------------------------
  2979                           ;! (9) i1_E_TOG                                              0     0      0       0
  2980                           ;! ---------------------------------------------------------------------------------
  2981                           ;! Estimated maximum stack depth 9
  2982                           ;! ---------------------------------------------------------------------------------
  2983                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2984                           ;! ---------------------------------------------------------------------------------
  2985                           ;! (11) _my_hp_isr                                           1     1      0       0
  2986                           ;!                                              0 COMRAM     1     1      0
  2987                           ;! ---------------------------------------------------------------------------------
  2988                           ;! Estimated maximum stack depth 11
  2989                           ;! ---------------------------------------------------------------------------------
  2990                           ;!
  2991                           ;! Call Graph Graphs:
  2992                           ;!
  2993                           ;! _main (ROOT)
  2994                           ;!   _findStrengths
  2995                           ;!   _initEusart
  2996                           ;!   _initIR
  2997                           ;!   _initLCD
  2998                           ;!     _LCDout
  2999                           ;!       _E_TOG
  3000                           ;!     _SendLCD
  3001                           ;!       _LCDout
  3002                           ;!         _E_TOG
  3003                           ;!   _initPWM
  3004                           ;!   _move
  3005                           ;!     _setMotorsFullSpeed
  3006                           ;!       _setMotorPWM
  3007                           ;!         ___wmul
  3008                           ;!     _stop
  3009                           ;!       _setMotorPWM
  3010                           ;!         ___wmul
  3011                           ;!   _setMotorPWM
  3012                           ;!     ___wmul
  3013                           ;!   _stop
  3014                           ;!     _setMotorPWM
  3015                           ;!       ___wmul
  3016                           ;!
  3017                           ;! _my_lp_isr (ROOT)
  3018                           ;!   _sendRFID
  3019                           ;!     _LCD_String
  3020                           ;!       i1_SendLCD
  3021                           ;!         i1_LCDout
  3022                           ;!           i1_E_TOG
  3023                           ;!     _SetLine
  3024                           ;!       i1_SendLCD
  3025                           ;!         i1_LCDout
  3026                           ;!           i1_E_TOG
  3027                           ;!     _getCharSerial
  3028                           ;!     i1_SendLCD
  3029                           ;!       i1_LCDout
  3030                           ;!         i1_E_TOG
  3031                           ;!
  3032                           ;! _my_hp_isr (ROOT)
  3033                           ;!
  3034                           
  3035                           ;! Address spaces:
  3036                           
  3037                           ;!Name               Size   Autos  Total    Cost      Usage
  3038                           ;!BIGRAM             2F3      0       0      10        0.0%
  3039                           ;!EEDATA             100      0       0       0        0.0%
  3040                           ;!BITBANK1           100      0       0       6        0.0%
  3041                           ;!BANK1              100     CE      E4       7       89.1%
  3042                           ;!BITBANK2            F4      0       0       8        0.0%
  3043                           ;!BANK2               F4      0       0       9        0.0%
  3044                           ;!BITBANK0            A0      0       0       3        0.0%
  3045                           ;!BANK0               A0      0       0       4        0.0%
  3046                           ;!BITCOMRAM           5E      0       0       0        0.0%
  3047                           ;!COMRAM              5E     2D      32       1       53.2%
  3048                           ;!BITSFR_5             0      0       0     200        0.0%
  3049                           ;!SFR_5                0      0       0     200        0.0%
  3050                           ;!BITSFR_4             0      0       0     200        0.0%
  3051                           ;!SFR_4                0      0       0     200        0.0%
  3052                           ;!BITSFR_3             0      0       0     200        0.0%
  3053                           ;!SFR_3                0      0       0     200        0.0%
  3054                           ;!BITSFR_2             0      0       0     200        0.0%
  3055                           ;!SFR_2                0      0       0     200        0.0%
  3056                           ;!BITSFR_1             0      0       0     200        0.0%
  3057                           ;!SFR_1                0      0       0     200        0.0%
  3058                           ;!BITSFR               0      0       0     200        0.0%
  3059                           ;!SFR                  0      0       0     200        0.0%
  3060                           ;!STACK                0      0       0       2        0.0%
  3061                           ;!NULL                 0      0       0       0        0.0%
  3062                           ;!ABS                  0      0     116       5        0.0%
  3063                           ;!DATA                 0      0     116      11        0.0%
  3064                           ;!CODE                 0      0       0       0        0.0%
  3065                           
  3066                           	global	_main
  3067                           
  3068 ;; *************** function _main *****************
  3069 ;; Defined at:
  3070 ;;		line 51 in file "main.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;		None
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;  path          200    0[BANK1 ] unsigned char [200]
  3075 ;;  rightIR         2  203[BANK1 ] int 
  3076 ;;  leftIR          2  201[BANK1 ] int 
  3077 ;;  i               1  205[BANK1 ] unsigned char 
  3078 ;;  c               1  200[BANK1 ] unsigned char 
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  1    wreg      void 
  3081 ;; Registers used:
  3082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3088 ;;      Params:         0       0       0       0
  3089 ;;      Locals:         0       0     206       0
  3090 ;;      Temps:          3       0       0       0
  3091 ;;      Totals:         3       0     206       0
  3092 ;;Total ram usage:      209 bytes
  3093 ;; Hardware stack levels required when called:   11
  3094 ;; This function calls:
  3095 ;;		_findStrengths
  3096 ;;		_initEusart
  3097 ;;		_initIR
  3098 ;;		_initLCD
  3099 ;;		_initPWM
  3100 ;;		_move
  3101 ;;		_setMotorPWM
  3102 ;;		_stop
  3103 ;; This function is called by:
  3104 ;;		Startup code after reset
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           psect	text0,class=CODE,space=0,reloc=2,group=0
  3108                           	file	"main.c"
  3109                           	line	51
  3110                           global __ptext0
  3111                           __ptext0:
  3112  00030C                     psect	text0
  3113                           	file	"main.c"
  3114                           	line	51
  3115                           	global	__size_of_main
  3116                           	__size_of_main	equ	__end_of_main-_main
  3117  0000                     	
  3118                           _main:
  3119  00030C                     ;incstack = 0
  3120                           	opt	stack 20
  3121                           	line	54
  3122                           	
  3123                           l1671:
  3124  00030C                     ;main.c: 54: 
  3125                           	movlw	low(072h)
  3126  00030C  0E72               	movwf	((c:4051)),c	;volatile
  3127  00030E  6ED3               	line	55
  3128                           ;main.c: 55: 
  3129                           	goto	l67
  3130  000310  EF8A  F001         	
  3131                           l68:
  3132  000314                     	
  3133                           l67:
  3134  000314                     	btfss	((c:4051)),c,2	;volatile
  3135  000314  A4D3               	goto	u771
  3136  000316  EF8F  F001         	goto	u770
  3137  00031A  EF91  F001         u771:
  3138  00031E                     	goto	l67
  3139  00031E  EF8A  F001         u770:
  3140  000322                     	
  3141                           l69:
  3142  000322                     	line	59
  3143                           ;main.c: 59: 
  3144                           	bcf	((c:3979)),c,3	;volatile
  3145  000322  968B               	line	60
  3146                           ;main.c: 60:     initLCD();
  3147                           	bsf	((c:3988)),c,3	;volatile
  3148  000324  8694               	line	62
  3149                           	bcf	((c:3979)),c,5	;volatile
  3150  000326  9A8B               	line	63
  3151                           	bsf	((c:3988)),c,5	;volatile
  3152  000328  8A94               	line	65
  3153                           	bcf	((c:3979)),c,4	;volatile
  3154  00032A  988B               	line	66
  3155                           	bcf	((c:3988)),c,4	;volatile
  3156  00032C  9894               	line	70
  3157                           	bcf	((c:3980)),c,2	;volatile
  3158  00032E  948C               	line	71
  3159                           	bcf	((c:3989)),c,2	;volatile
  3160  000330  9495               	line	73
  3161                           	bcf	((c:3980)),c,3	;volatile
  3162  000332  968C               	line	74
  3163                           	bcf	((c:3989)),c,3	;volatile
  3164  000334  9695               	line	78
  3165                           	
  3166                           l1673:
  3167  000336                     	movlw	low(0)
  3168  000336  0E00               	movwf	((c:3998)),c	;volatile
  3169  000338  6E9E               	line	80
  3170                           	
  3171                           l1675:
  3172  00033A                     	bsf	((c:4082)),c,7	;volatile
  3173  00033A  8EF2               	line	81
  3174                           	
  3175                           l1677:
  3176  00033C                     	bsf	((c:4082)),c,6	;volatile
  3177  00033C  8CF2               	line	82
  3178                           	
  3179                           l1679:
  3180  00033E                     	bsf	((c:4048)),c,7	;volatile
  3181  00033E  8ED0               	line	84
  3182                           	
  3183                           l1681:
  3184  000340                     	bsf	((c:4082)),c,4	;volatile
  3185  000340  88F2               	line	86
  3186                           	
  3187                           l1683:
  3188  000342                     	bsf	((c:4080)),c,4	;volatile
  3189  000342  88F0               	line	87
  3190                           	
  3191                           l1685:
  3192  000344                     	bcf	((c:4080)),c,7	;volatile
  3193  000344  9EF0               	line	88
  3194                           	
  3195                           l1687:
  3196  000346                     	bcf	((c:4081)),c,4	;volatile
  3197  000346  98F1               	line	93
  3198                           	
  3199                           l1689:
  3200  000348                     	call	_initEusart	;wreg free
  3201  000348  ECE5  F007         	line	94
  3202                           	
  3203                           l1691:
  3204  00034C                     	call	_initPWM	;wreg free
  3205  00034C  EC50  F006         	line	96
  3206                           	
  3207                           l1693:
  3208  000350                     	call	_initLCD	;wreg free
  3209  000350  EC51  F005         	line	97
  3210                           	
  3211                           l1695:
  3212  000354                     	call	_initIR	;wreg free
  3213  000354  ECC7  F007         	line	106
  3214                           	
  3215                           l1697:
  3216  000358                     ;main.c: 106:     motorR.power = 0;
  3217                           	movlw	low(0)
  3218  000358  0E00               	movlb	1	; () banked
  3219  00035A  0101               	movwf	((_motorR))&0ffh
  3220  00035C  6FD1               	line	107
  3221                           	
  3222                           l1699:; BSR set to: 1
  3223  00035E                     
  3224                           ;main.c: 107:     motorR.direction = 0;
  3225                           	movlw	low(0)
  3226  00035E  0E00               	movwf	(0+(_motorR+01h))&0ffh
  3227  000360  6FD2               	line	108
  3228                           ;main.c: 108:     motorR.dutyLowByte = (unsigned char *) (&PDC0L);
  3229                           		movlw	low(3961)
  3230  000362  0E79               	movwf	(0+(_motorR+02h))&0ffh
  3231  000364  6FD3               	movlw	high(3961)
  3232  000366  0E0F               	movwf	(1+(_motorR+02h))&0ffh
  3233  000368  6FD4               
  3234                           	line	109
  3235                           ;main.c: 109:     motorR.dutyHighByte = (unsigned char *) (&PDC0H);
  3236                           		movlw	low(3960)
  3237  00036A  0E78               	movwf	(0+(_motorR+04h))&0ffh
  3238  00036C  6FD5               	movlw	high(3960)
  3239  00036E  0E0F               	movwf	(1+(_motorR+04h))&0ffh
  3240  000370  6FD6               
  3241                           	line	110
  3242                           	
  3243                           l1701:; BSR set to: 1
  3244  000372                     
  3245                           ;main.c: 110:     motorR.dir_pin = 0;
  3246                           	movlw	low(0)
  3247  000372  0E00               	movwf	(0+(_motorR+06h))&0ffh
  3248  000374  6FD7               	line	111
  3249                           	
  3250                           l1703:; BSR set to: 1
  3251  000376                     
  3252                           ;main.c: 111:     motorR.PWMperiod = 199;
  3253                           	movlw	high(0C7h)
  3254  000376  0E00               	movwf	(1+(_motorR+07h))&0ffh
  3255  000378  6FD9               	movlw	low(0C7h)
  3256  00037A  0EC7               	movwf	(0+(_motorR+07h))&0ffh
  3257  00037C  6FD8               	line	114
  3258                           	
  3259                           l1705:; BSR set to: 1
  3260  00037E                     
  3261                           ;main.c: 114:     motorL.power = 0;
  3262                           	movlw	low(0)
  3263  00037E  0E00               	movwf	((_motorL))&0ffh
  3264  000380  6FDA               	line	115
  3265                           	
  3266                           l1707:; BSR set to: 1
  3267  000382                     
  3268                           ;main.c: 115:     motorL.direction = 0;
  3269                           	movlw	low(0)
  3270  000382  0E00               	movwf	(0+(_motorL+01h))&0ffh
  3271  000384  6FDB               	line	116
  3272                           ;main.c: 116:     motorL.dutyLowByte = (unsigned char *) (&PDC1L);
  3273                           		movlw	low(3959)
  3274  000386  0E77               	movwf	(0+(_motorL+02h))&0ffh
  3275  000388  6FDC               	movlw	high(3959)
  3276  00038A  0E0F               	movwf	(1+(_motorL+02h))&0ffh
  3277  00038C  6FDD               
  3278                           	line	117
  3279                           ;main.c: 117:     motorL.dutyHighByte = (unsigned char *) (&PDC1H);
  3280                           		movlw	low(3958)
  3281  00038E  0E76               	movwf	(0+(_motorL+04h))&0ffh
  3282  000390  6FDE               	movlw	high(3958)
  3283  000392  0E0F               	movwf	(1+(_motorL+04h))&0ffh
  3284  000394  6FDF               
  3285                           	line	118
  3286                           	
  3287                           l1709:; BSR set to: 1
  3288  000396                     
  3289                           ;main.c: 118:     motorL.dir_pin = 2;
  3290                           	movlw	low(02h)
  3291  000396  0E02               	movwf	(0+(_motorL+06h))&0ffh
  3292  000398  6FE0               	line	119
  3293                           	
  3294                           l1711:; BSR set to: 1
  3295  00039A                     
  3296                           ;main.c: 119:     motorL.PWMperiod = 199;
  3297                           	movlw	high(0C7h)
  3298  00039A  0E00               	movwf	(1+(_motorL+07h))&0ffh
  3299  00039C  6FE2               	movlw	low(0C7h)
  3300  00039E  0EC7               	movwf	(0+(_motorL+07h))&0ffh
  3301  0003A0  6FE1               	line	123
  3302                           	
  3303                           l1713:; BSR set to: 1
  3304  0003A2                     
  3305                           ;main.c: 123:     setMotorPWM(&motorL);
  3306                           		movlw	low(_motorL)
  3307  0003A2  0EDA               	movwf	((c:setMotorPWM@m)),c
  3308  0003A4  6E19               	movlw	high(_motorL)
  3309  0003A6  0E01               	movwf	((c:setMotorPWM@m+1)),c
  3310  0003A8  6E1A               
  3311                           	call	_setMotorPWM	;wreg free
  3312  0003AA  ECD5  F003         	line	124
  3313                           	
  3314                           l1715:
  3315  0003AE                     ;main.c: 124:     setMotorPWM(&motorR);
  3316                           		movlw	low(_motorR)
  3317  0003AE  0ED1               	movwf	((c:setMotorPWM@m)),c
  3318  0003B0  6E19               	movlw	high(_motorR)
  3319  0003B2  0E01               	movwf	((c:setMotorPWM@m+1)),c
  3320  0003B4  6E1A               
  3321                           	call	_setMotorPWM	;wreg free
  3322  0003B6  ECD5  F003         	line	130
  3323                           	
  3324                           l1717:
  3325  0003BA                     ;main.c: 127:     int leftIR;;main.c: 128:     int rightIR;;main.c: 130:     char i = 0;
                                 
  3326                           	movlw	low(0)
  3327  0003BA  0E00               	movlb	1	; () banked
  3328  0003BC  0101               	movwf	((main@i))&0ffh
  3329  0003BE  6FCD               	line	134
  3330                           	
  3331                           l1719:; BSR set to: 1
  3332  0003C0                     
  3333                           ;main.c: 131:     char path[200];;main.c: 134:     char c = 0;
  3334                           	movlw	low(0)
  3335  0003C0  0E00               	movwf	((main@c))&0ffh
  3336  0003C2  6FC8               	line	137
  3337                           ;main.c: 137:     while (1) {
  3338                           	
  3339                           l70:
  3340  0003C4                     	line	138
  3341                           ;main.c: 138:         if (robotOn == 1) {
  3342                           	movlb	1	; () banked
  3343  0003C4  0101               		decf	((_robotOn))&0ffh,w
  3344  0003C6  05D0               	btfss	status,2
  3345  0003C8  A4D8               	goto	u781
  3346  0003CA  EFE9  F001         	goto	u780
  3347  0003CE  EFEB  F001         
  3348                           u781:
  3349  0003D2                     	goto	l1805
  3350  0003D2  EF88  F003         u780:
  3351  0003D6                     	goto	l1731
  3352  0003D6  EF13  F002         	line	142
  3353                           	
  3354                           l1721:; BSR set to: 1
  3355  0003DA                     
  3356                           ;main.c: 142:             while ((leftIR < 2000 || rightIR < 2000) && robotOn==1 && IRso
                                 urce==0 ) {
  3357                           	goto	l1731
  3358  0003DA  EF13  F002         	
  3359                           l73:; BSR set to: 1
  3360  0003DE                     
  3361                           	line	144
  3362                           	
  3363                           l1723:; BSR set to: 1
  3364  0003DE                     
  3365                           ;main.c: 144:                 move(&motorL, &motorR, 0b10);
  3366                           		movlw	low(_motorL)
  3367  0003DE  0EDA               	movwf	((c:move@mL)),c
  3368  0003E0  6E26               	movlw	high(_motorL)
  3369  0003E2  0E01               	movwf	((c:move@mL+1)),c
  3370  0003E4  6E27               
  3371                           		movlw	low(_motorR)
  3372  0003E6  0ED1               	movwf	((c:move@mR)),c
  3373  0003E8  6E28               	movlw	high(_motorR)
  3374  0003EA  0E01               	movwf	((c:move@mR+1)),c
  3375  0003EC  6E29               
  3376                           	movlw	low(02h)
  3377  0003EE  0E02               	movwf	((c:move@dir)),c
  3378  0003F0  6E2A               	call	_move	;wreg free
  3379  0003F2  EC7D  F006         	line	146
  3380                           	
  3381                           l1725:
  3382  0003F6                     ;main.c: 146:                 path[i] = 0b10;
  3383                           	movlb	1	; () banked
  3384  0003F6  0101               	movf	((main@i))&0ffh,w
  3385  0003F8  51CD               	mullw	01h
  3386  0003FA  0D01               	movlw	low(main@path)
  3387  0003FC  0E00               	addwf	(prodl),c,w
  3388  0003FE  24F3               	movwf	c:fsr2l
  3389  000400  6ED9               	movlw	high(main@path)
  3390  000402  0E01               	addwfc	prod+1,w
  3391  000404  20F4               	movwf	1+c:fsr2l
  3392  000406  6EDA               	movlw	low(02h)
  3393  000408  0E02               	movwf	indf2
  3394  00040A  6EDF               	line	147
  3395                           	
  3396                           l1727:; BSR set to: 1
  3397  00040C                     
  3398                           ;main.c: 147:                 i+=1;
  3399                           	incf	((main@i))&0ffh
  3400  00040C  2BCD               	line	148
  3401                           	
  3402                           l1729:; BSR set to: 1
  3403  00040E                     
  3404                           ;main.c: 148:                 findStrengths(&leftIR, &rightIR);
  3405                           		movlw	low(main@leftIR)
  3406  00040E  0EC9               	movwf	((c:findStrengths@leftIR)),c
  3407  000410  6E13               	movlw	high(main@leftIR)
  3408  000412  0E01               	movwf	((c:findStrengths@leftIR+1)),c
  3409  000414  6E14               
  3410                           		movlw	low(main@rightIR)
  3411  000416  0ECB               	movwf	((c:findStrengths@rightIR)),c
  3412  000418  6E15               	movlw	high(main@rightIR)
  3413  00041A  0E01               	movwf	((c:findStrengths@rightIR+1)),c
  3414  00041C  6E16               
  3415                           	call	_findStrengths	;wreg free
  3416  00041E  EC19  F007         	goto	l1731
  3417  000422  EF13  F002         	line	150
  3418                           ;main.c: 150:             }
  3419                           	
  3420                           l72:
  3421  000426                     	line	142
  3422                           	
  3423                           l1731:
  3424  000426                     ;main.c: 142:             while ((leftIR < 2000 || rightIR < 2000) && robotOn==1 && IRso
                                 urce==0 ) {
  3425                           	movlb	1	; () banked
  3426  000426  0101               	btfsc	((main@leftIR+1))&0ffh,7
  3427  000428  BFCA               	goto	u791
  3428  00042A  EF20  F002         	movlw	208
  3429  00042E  0ED0               	subwf	 ((main@leftIR))&0ffh,w
  3430  000430  5DC9               	movlw	7
  3431  000432  0E07               	subwfb	((main@leftIR+1))&0ffh,w
  3432  000434  59CA               	btfss	status,0
  3433  000436  A0D8               	goto	u791
  3434  000438  EF20  F002         	goto	u790
  3435  00043C  EF22  F002         
  3436                           u791:
  3437  000440                     	goto	l1735
  3438  000440  EF32  F002         u790:
  3439  000444                     	
  3440                           l1733:; BSR set to: 1
  3441  000444                     
  3442                           	btfsc	((main@rightIR+1))&0ffh,7
  3443  000444  BFCC               	goto	u800
  3444  000446  EF30  F002         	movlw	208
  3445  00044A  0ED0               	subwf	 ((main@rightIR))&0ffh,w
  3446  00044C  5DCB               	movlw	7
  3447  00044E  0E07               	subwfb	((main@rightIR+1))&0ffh,w
  3448  000450  59CC               	btfsc	status,0
  3449  000452  B0D8               	goto	u801
  3450  000454  EF2E  F002         	goto	u800
  3451  000458  EF30  F002         
  3452                           u801:
  3453  00045C                     	goto	l1739
  3454  00045C  EF46  F002         u800:
  3455  000460                     	goto	l1735
  3456  000460  EF32  F002         	
  3457                           l77:; BSR set to: 1
  3458  000464                     
  3459                           	
  3460                           l1735:; BSR set to: 1
  3461  000464                     
  3462                           		decf	((_robotOn))&0ffh,w
  3463  000464  05D0               	btfss	status,2
  3464  000466  A4D8               	goto	u811
  3465  000468  EF38  F002         	goto	u810
  3466  00046C  EF3A  F002         
  3467                           u811:
  3468  000470                     	goto	l1739
  3469  000470  EF46  F002         u810:
  3470  000474                     	
  3471                           l1737:; BSR set to: 1
  3472  000474                     
  3473                           	movf	((_IRsource))&0ffh,w
  3474  000474  51CE               	btfsc	status,2
  3475  000476  B4D8               	goto	u821
  3476  000478  EF40  F002         	goto	u820
  3477  00047C  EF42  F002         u821:
  3478  000480                     	goto	l1723
  3479  000480  EFEF  F001         u820:
  3480  000484                     	goto	l1739
  3481  000484  EF46  F002         	
  3482                           l75:; BSR set to: 1
  3483  000488                     
  3484                           	goto	l1739
  3485  000488  EF46  F002         	
  3486                           l78:; BSR set to: 1
  3487  00048C                     
  3488                           	line	151
  3489                           	
  3490                           l1739:; BSR set to: 1
  3491  00048C                     
  3492                           ;main.c: 151:             IRsource = 1;
  3493                           	movlw	low(01h)
  3494  00048C  0E01               	movwf	((_IRsource))&0ffh
  3495  00048E  6FCE               	line	154
  3496                           	
  3497                           l1741:; BSR set to: 1
  3498  000490                     
  3499                           ;main.c: 154:             if (RFIDread == 1) {
  3500                           		decf	((_RFIDread))&0ffh,w
  3501  000490  05CF               	btfss	status,2
  3502  000492  A4D8               	goto	u831
  3503  000494  EF4E  F002         	goto	u830
  3504  000498  EF50  F002         
  3505                           u831:
  3506  00049C                     	goto	l1753
  3507  00049C  EF83  F002         u830:
  3508  0004A0                     	goto	l1749
  3509  0004A0  EF6C  F002         	line	157
  3510                           	
  3511                           l1743:; BSR set to: 1
  3512  0004A4                     
  3513                           ;main.c: 157:                 while (i > 0) {
  3514                           	goto	l1749
  3515  0004A4  EF6C  F002         	
  3516                           l81:; BSR set to: 1
  3517  0004A8                     
  3518                           	line	158
  3519                           	
  3520                           l1745:; BSR set to: 1
  3521  0004A8                     
  3522                           ;main.c: 158:                     --i;
  3523                           	decf	((main@i))&0ffh
  3524  0004A8  07CD               	line	159
  3525                           	
  3526                           l1747:; BSR set to: 1
  3527  0004AA                     
  3528                           ;main.c: 159:                     move(&motorL,&motorR,~(path[i]));
  3529                           		movlw	low(_motorL)
  3530  0004AA  0EDA               	movwf	((c:move@mL)),c
  3531  0004AC  6E26               	movlw	high(_motorL)
  3532  0004AE  0E01               	movwf	((c:move@mL+1)),c
  3533  0004B0  6E27               
  3534                           		movlw	low(_motorR)
  3535  0004B2  0ED1               	movwf	((c:move@mR)),c
  3536  0004B4  6E28               	movlw	high(_motorR)
  3537  0004B6  0E01               	movwf	((c:move@mR+1)),c
  3538  0004B8  6E29               
  3539                           	movf	((main@i))&0ffh,w
  3540  0004BA  51CD               	mullw	01h
  3541  0004BC  0D01               	movlw	low(main@path)
  3542  0004BE  0E00               	addwf	(prodl),c,w
  3543  0004C0  24F3               	movwf	c:fsr2l
  3544  0004C2  6ED9               	movlw	high(main@path)
  3545  0004C4  0E01               	addwfc	prod+1,w
  3546  0004C6  20F4               	movwf	1+c:fsr2l
  3547  0004C8  6EDA               	movf	indf2,w
  3548  0004CA  50DF               	xorlw	0ffh
  3549  0004CC  0AFF               	movwf	((c:move@dir)),c
  3550  0004CE  6E2A               	call	_move	;wreg free
  3551  0004D0  EC7D  F006         	goto	l1749
  3552  0004D4  EF6C  F002         	line	160
  3553                           ;main.c: 160:                 }
  3554                           	
  3555                           l80:
  3556  0004D8                     	line	157
  3557                           	
  3558                           l1749:
  3559  0004D8                     ;main.c: 157:                 while (i > 0) {
  3560                           	movlb	1	; () banked
  3561  0004D8  0101               	movf	((main@i))&0ffh,w
  3562  0004DA  51CD               	btfss	status,2
  3563  0004DC  A4D8               	goto	u841
  3564  0004DE  EF73  F002         	goto	u840
  3565  0004E2  EF75  F002         u841:
  3566  0004E6                     	goto	l1745
  3567  0004E6  EF54  F002         u840:
  3568  0004EA                     	goto	l1751
  3569  0004EA  EF77  F002         	
  3570                           l82:; BSR set to: 1
  3571  0004EE                     
  3572                           	line	161
  3573                           	
  3574                           l1751:; BSR set to: 1
  3575  0004EE                     
  3576                           ;main.c: 161:                 stop(&motorL, &motorR);
  3577                           		movlw	low(_motorL)
  3578  0004EE  0EDA               	movwf	((c:stop@mL)),c
  3579  0004F0  6E21               	movlw	high(_motorL)
  3580  0004F2  0E01               	movwf	((c:stop@mL+1)),c
  3581  0004F4  6E22               
  3582                           		movlw	low(_motorR)
  3583  0004F6  0ED1               	movwf	((c:stop@mR)),c
  3584  0004F8  6E23               	movlw	high(_motorR)
  3585  0004FA  0E01               	movwf	((c:stop@mR+1)),c
  3586  0004FC  6E24               
  3587                           	call	_stop	;wreg free
  3588  0004FE  ECF0  F005         	line	164
  3589                           ;main.c: 164:             } else {
  3590                           	goto	l70
  3591  000502  EFE2  F001         	
  3592                           l79:
  3593  000506                     	line	166
  3594                           	
  3595                           l1753:
  3596  000506                     ;main.c: 166:                 move(&motorL, &motorR, 0b00);
  3597                           		movlw	low(_motorL)
  3598  000506  0EDA               	movwf	((c:move@mL)),c
  3599  000508  6E26               	movlw	high(_motorL)
  3600  00050A  0E01               	movwf	((c:move@mL+1)),c
  3601  00050C  6E27               
  3602                           		movlw	low(_motorR)
  3603  00050E  0ED1               	movwf	((c:move@mR)),c
  3604  000510  6E28               	movlw	high(_motorR)
  3605  000512  0E01               	movwf	((c:move@mR+1)),c
  3606  000514  6E29               
  3607                           	movlw	low(0)
  3608  000516  0E00               	movwf	((c:move@dir)),c
  3609  000518  6E2A               	call	_move	;wreg free
  3610  00051A  EC7D  F006         	line	168
  3611                           	
  3612                           l1755:
  3613  00051E                     ;main.c: 168:                 path[i] = 0b00;
  3614                           	movlb	1	; () banked
  3615  00051E  0101               	movf	((main@i))&0ffh,w
  3616  000520  51CD               	mullw	01h
  3617  000522  0D01               	movlw	low(main@path)
  3618  000524  0E00               	addwf	(prodl),c,w
  3619  000526  24F3               	movwf	c:fsr2l
  3620  000528  6ED9               	movlw	high(main@path)
  3621  00052A  0E01               	addwfc	prod+1,w
  3622  00052C  20F4               	movwf	1+c:fsr2l
  3623  00052E  6EDA               	movlw	low(0)
  3624  000530  0E00               	movwf	indf2
  3625  000532  6EDF               	line	169
  3626                           	
  3627                           l1757:; BSR set to: 1
  3628  000534                     
  3629                           ;main.c: 169:                 i += 1;
  3630                           	incf	((main@i))&0ffh
  3631  000534  2BCD               	line	170
  3632                           	
  3633                           l1759:; BSR set to: 1
  3634  000536                     
  3635                           ;main.c: 170:                 findStrengths(&leftIR,&rightIR);
  3636                           		movlw	low(main@leftIR)
  3637  000536  0EC9               	movwf	((c:findStrengths@leftIR)),c
  3638  000538  6E13               	movlw	high(main@leftIR)
  3639  00053A  0E01               	movwf	((c:findStrengths@leftIR+1)),c
  3640  00053C  6E14               
  3641                           		movlw	low(main@rightIR)
  3642  00053E  0ECB               	movwf	((c:findStrengths@rightIR)),c
  3643  000540  6E15               	movlw	high(main@rightIR)
  3644  000542  0E01               	movwf	((c:findStrengths@rightIR+1)),c
  3645  000544  6E16               
  3646                           	call	_findStrengths	;wreg free
  3647  000546  EC19  F007         	line	173
  3648                           	
  3649                           l1761:
  3650  00054A                     ;main.c: 173:                 if (leftIR > rightIR + 200) {
  3651                           	movlw	0C8h
  3652  00054A  0EC8               	movlb	1	; () banked
  3653  00054C  0101               	addwf	((main@rightIR))&0ffh,w
  3654  00054E  25CB               	movwf	(??_main+0+0)&0ffh,c
  3655  000550  6E2B               	movlw	0
  3656  000552  0E00               	addwfc	((main@rightIR+1))&0ffh,w
  3657  000554  21CC               	movwf	(??_main+0+0+1)&0ffh,c
  3658  000556  6E2C               		movf	((main@leftIR))&0ffh,w
  3659  000558  51C9               	subwf	(??_main+0+0),c,w
  3660  00055A  5C2B               	movf	(??_main+0+1),c,w
  3661  00055C  502C               	xorlw	80h
  3662  00055E  0A80               	movwf	(??_main+2+0)&0ffh,c
  3663  000560  6E2D               	movf	((main@leftIR+1))&0ffh,w
  3664  000562  51CA               	xorlw	80h
  3665  000564  0A80               	subwfb	(??_main+2+0)&0ffh,c,w
  3666  000566  582D               	btfsc	status,0
  3667  000568  B0D8               	goto	u851
  3668  00056A  EFB9  F002         	goto	u850
  3669  00056E  EFBB  F002         
  3670                           u851:
  3671  000572                     	goto	l1783
  3672  000572  EF14  F003         u850:
  3673  000576                     	line	175
  3674                           	
  3675                           l1763:; BSR set to: 1
  3676  000576                     
  3677                           ;main.c: 175:                     c+=1;
  3678                           	incf	((main@c))&0ffh
  3679  000576  2BC8               	line	177
  3680                           ;main.c: 177:                     while (leftIR > (rightIR+200) && c<4){
  3681                           	goto	l1777
  3682  000578  EFEF  F002         	
  3683                           l86:; BSR set to: 1
  3684  00057C                     
  3685                           	line	179
  3686                           	
  3687                           l1765:; BSR set to: 1
  3688  00057C                     
  3689                           ;main.c: 179:                         findStrengths(&leftIR,&rightIR);
  3690                           		movlw	low(main@leftIR)
  3691  00057C  0EC9               	movwf	((c:findStrengths@leftIR)),c
  3692  00057E  6E13               	movlw	high(main@leftIR)
  3693  000580  0E01               	movwf	((c:findStrengths@leftIR+1)),c
  3694  000582  6E14               
  3695                           		movlw	low(main@rightIR)
  3696  000584  0ECB               	movwf	((c:findStrengths@rightIR)),c
  3697  000586  6E15               	movlw	high(main@rightIR)
  3698  000588  0E01               	movwf	((c:findStrengths@rightIR+1)),c
  3699  00058A  6E16               
  3700                           	call	_findStrengths	;wreg free
  3701  00058C  EC19  F007         	line	181
  3702                           	
  3703                           l1767:
  3704  000590                     ;main.c: 181:                         if (c==3){
  3705                           		movlw	3
  3706  000590  0E03               	movlb	1	; () banked
  3707  000592  0101               	xorwf	((main@c))&0ffh,w
  3708  000594  19C8               	btfss	status,2
  3709  000596  A4D8               	goto	u861
  3710  000598  EFD0  F002         	goto	u860
  3711  00059C  EFD2  F002         
  3712                           u861:
  3713  0005A0                     	goto	l1775
  3714  0005A0  EFEC  F002         u860:
  3715  0005A4                     	line	183
  3716                           	
  3717                           l1769:; BSR set to: 1
  3718  0005A4                     
  3719                           ;main.c: 183:                             move(&motorL,&motorR,0b10);
  3720                           		movlw	low(_motorL)
  3721  0005A4  0EDA               	movwf	((c:move@mL)),c
  3722  0005A6  6E26               	movlw	high(_motorL)
  3723  0005A8  0E01               	movwf	((c:move@mL+1)),c
  3724  0005AA  6E27               
  3725                           		movlw	low(_motorR)
  3726  0005AC  0ED1               	movwf	((c:move@mR)),c
  3727  0005AE  6E28               	movlw	high(_motorR)
  3728  0005B0  0E01               	movwf	((c:move@mR+1)),c
  3729  0005B2  6E29               
  3730                           	movlw	low(02h)
  3731  0005B4  0E02               	movwf	((c:move@dir)),c
  3732  0005B6  6E2A               	call	_move	;wreg free
  3733  0005B8  EC7D  F006         	line	184
  3734                           	
  3735                           l1771:
  3736  0005BC                     ;main.c: 184:                             path[i] = 0b10;
  3737                           	movlb	1	; () banked
  3738  0005BC  0101               	movf	((main@i))&0ffh,w
  3739  0005BE  51CD               	mullw	01h
  3740  0005C0  0D01               	movlw	low(main@path)
  3741  0005C2  0E00               	addwf	(prodl),c,w
  3742  0005C4  24F3               	movwf	c:fsr2l
  3743  0005C6  6ED9               	movlw	high(main@path)
  3744  0005C8  0E01               	addwfc	prod+1,w
  3745  0005CA  20F4               	movwf	1+c:fsr2l
  3746  0005CC  6EDA               	movlw	low(02h)
  3747  0005CE  0E02               	movwf	indf2
  3748  0005D0  6EDF               	line	185
  3749                           	
  3750                           l1773:; BSR set to: 1
  3751  0005D2                     
  3752                           ;main.c: 185:                             i +=1;
  3753                           	incf	((main@i))&0ffh
  3754  0005D2  2BCD               	goto	l1775
  3755  0005D4  EFEC  F002         	line	186
  3756                           ;main.c: 186:                         }
  3757                           	
  3758                           l87:; BSR set to: 1
  3759  0005D8                     
  3760                           	line	189
  3761                           	
  3762                           l1775:; BSR set to: 1
  3763  0005D8                     
  3764                           ;main.c: 189:                         c+=1;
  3765                           	incf	((main@c))&0ffh
  3766  0005D8  2BC8               	goto	l1777
  3767  0005DA  EFEF  F002         	line	190
  3768                           ;main.c: 190:                     }
  3769                           	
  3770                           l85:; BSR set to: 1
  3771  0005DE                     
  3772                           	line	177
  3773                           	
  3774                           l1777:; BSR set to: 1
  3775  0005DE                     
  3776                           ;main.c: 177:                     while (leftIR > (rightIR+200) && c<4){
  3777                           	movlw	0C8h
  3778  0005DE  0EC8               	addwf	((main@rightIR))&0ffh,w
  3779  0005E0  25CB               	movwf	(??_main+0+0)&0ffh,c
  3780  0005E2  6E2B               	movlw	0
  3781  0005E4  0E00               	addwfc	((main@rightIR+1))&0ffh,w
  3782  0005E6  21CC               	movwf	(??_main+0+0+1)&0ffh,c
  3783  0005E8  6E2C               		movf	((main@leftIR))&0ffh,w
  3784  0005EA  51C9               	subwf	(??_main+0+0),c,w
  3785  0005EC  5C2B               	movf	(??_main+0+1),c,w
  3786  0005EE  502C               	xorlw	80h
  3787  0005F0  0A80               	movwf	(??_main+2+0)&0ffh,c
  3788  0005F2  6E2D               	movf	((main@leftIR+1))&0ffh,w
  3789  0005F4  51CA               	xorlw	80h
  3790  0005F6  0A80               	subwfb	(??_main+2+0)&0ffh,c,w
  3791  0005F8  582D               	btfsc	status,0
  3792  0005FA  B0D8               	goto	u871
  3793  0005FC  EF02  F003         	goto	u870
  3794  000600  EF04  F003         
  3795                           u871:
  3796  000604                     	goto	l1781
  3797  000604  EF10  F003         u870:
  3798  000608                     	
  3799                           l1779:; BSR set to: 1
  3800  000608                     
  3801                           		movlw	04h-1
  3802  000608  0E03               	cpfsgt	((main@c))&0ffh
  3803  00060A  65C8               	goto	u881
  3804  00060C  EF0A  F003         	goto	u880
  3805  000610  EF0C  F003         
  3806                           u881:
  3807  000614                     	goto	l1765
  3808  000614  EFBE  F002         u880:
  3809  000618                     	goto	l1781
  3810  000618  EF10  F003         	
  3811                           l89:; BSR set to: 1
  3812  00061C                     
  3813                           	goto	l1781
  3814  00061C  EF10  F003         	
  3815                           l90:; BSR set to: 1
  3816  000620                     
  3817                           	line	192
  3818                           	
  3819                           l1781:; BSR set to: 1
  3820  000620                     
  3821                           ;main.c: 192:                     c=0;
  3822                           	movlw	low(0)
  3823  000620  0E00               	movwf	((main@c))&0ffh
  3824  000622  6FC8               	line	194
  3825                           ;main.c: 194:                 } else if ((leftIR+200) < rightIR) {
  3826                           	goto	l70
  3827  000624  EFE2  F001         	
  3828                           l84:; BSR set to: 1
  3829  000628                     
  3830                           	
  3831                           l1783:; BSR set to: 1
  3832  000628                     
  3833                           	movlw	0C8h
  3834  000628  0EC8               	addwf	((main@leftIR))&0ffh,w
  3835  00062A  25C9               	movwf	(??_main+0+0)&0ffh,c
  3836  00062C  6E2B               	movlw	0
  3837  00062E  0E00               	addwfc	((main@leftIR+1))&0ffh,w
  3838  000630  21CA               	movwf	(??_main+0+0+1)&0ffh,c
  3839  000632  6E2C               		movf	((main@rightIR))&0ffh,w
  3840  000634  51CB               	subwf	(??_main+0+0),c,w
  3841  000636  5C2B               	movf	(??_main+0+1),c,w
  3842  000638  502C               	xorlw	80h
  3843  00063A  0A80               	movwf	(??_main+2+0)&0ffh,c
  3844  00063C  6E2D               	movf	((main@rightIR+1))&0ffh,w
  3845  00063E  51CC               	xorlw	80h
  3846  000640  0A80               	subwfb	(??_main+2+0)&0ffh,c,w
  3847  000642  582D               	btfsc	status,0
  3848  000644  B0D8               	goto	u891
  3849  000646  EF27  F003         	goto	u890
  3850  00064A  EF29  F003         
  3851                           u891:
  3852  00064E                     	goto	l70
  3853  00064E  EFE2  F001         u890:
  3854  000652                     	line	196
  3855                           	
  3856                           l1785:; BSR set to: 1
  3857  000652                     
  3858                           ;main.c: 196:                     c+=1;
  3859                           	incf	((main@c))&0ffh
  3860  000652  2BC8               	line	197
  3861                           ;main.c: 197:                     while ((leftIR+200)<rightIR && c<4){
  3862                           	goto	l1799
  3863  000654  EF5D  F003         	
  3864                           l94:; BSR set to: 1
  3865  000658                     
  3866                           	line	198
  3867                           	
  3868                           l1787:; BSR set to: 1
  3869  000658                     
  3870                           ;main.c: 198:                         findStrengths(&leftIR, &rightIR);
  3871                           		movlw	low(main@leftIR)
  3872  000658  0EC9               	movwf	((c:findStrengths@leftIR)),c
  3873  00065A  6E13               	movlw	high(main@leftIR)
  3874  00065C  0E01               	movwf	((c:findStrengths@leftIR+1)),c
  3875  00065E  6E14               
  3876                           		movlw	low(main@rightIR)
  3877  000660  0ECB               	movwf	((c:findStrengths@rightIR)),c
  3878  000662  6E15               	movlw	high(main@rightIR)
  3879  000664  0E01               	movwf	((c:findStrengths@rightIR+1)),c
  3880  000666  6E16               
  3881                           	call	_findStrengths	;wreg free
  3882  000668  EC19  F007         	line	199
  3883                           	
  3884                           l1789:
  3885  00066C                     ;main.c: 199:                         if (c==3){
  3886                           		movlw	3
  3887  00066C  0E03               	movlb	1	; () banked
  3888  00066E  0101               	xorwf	((main@c))&0ffh,w
  3889  000670  19C8               	btfss	status,2
  3890  000672  A4D8               	goto	u901
  3891  000674  EF3E  F003         	goto	u900
  3892  000678  EF40  F003         
  3893                           u901:
  3894  00067C                     	goto	l1797
  3895  00067C  EF5A  F003         u900:
  3896  000680                     	line	200
  3897                           	
  3898                           l1791:; BSR set to: 1
  3899  000680                     
  3900                           ;main.c: 200:                             move(&motorL,&motorR,0b01);
  3901                           		movlw	low(_motorL)
  3902  000680  0EDA               	movwf	((c:move@mL)),c
  3903  000682  6E26               	movlw	high(_motorL)
  3904  000684  0E01               	movwf	((c:move@mL+1)),c
  3905  000686  6E27               
  3906                           		movlw	low(_motorR)
  3907  000688  0ED1               	movwf	((c:move@mR)),c
  3908  00068A  6E28               	movlw	high(_motorR)
  3909  00068C  0E01               	movwf	((c:move@mR+1)),c
  3910  00068E  6E29               
  3911                           	movlw	low(01h)
  3912  000690  0E01               	movwf	((c:move@dir)),c
  3913  000692  6E2A               	call	_move	;wreg free
  3914  000694  EC7D  F006         	line	201
  3915                           	
  3916                           l1793:
  3917  000698                     ;main.c: 201:                             path[i] = 0b01;
  3918                           	movlb	1	; () banked
  3919  000698  0101               	movf	((main@i))&0ffh,w
  3920  00069A  51CD               	mullw	01h
  3921  00069C  0D01               	movlw	low(main@path)
  3922  00069E  0E00               	addwf	(prodl),c,w
  3923  0006A0  24F3               	movwf	c:fsr2l
  3924  0006A2  6ED9               	movlw	high(main@path)
  3925  0006A4  0E01               	addwfc	prod+1,w
  3926  0006A6  20F4               	movwf	1+c:fsr2l
  3927  0006A8  6EDA               	movlw	low(01h)
  3928  0006AA  0E01               	movwf	indf2
  3929  0006AC  6EDF               	line	202
  3930                           	
  3931                           l1795:; BSR set to: 1
  3932  0006AE                     
  3933                           ;main.c: 202:                             i+=1;
  3934                           	incf	((main@i))&0ffh
  3935  0006AE  2BCD               	goto	l1797
  3936  0006B0  EF5A  F003         	line	203
  3937                           ;main.c: 203:                         }
  3938                           	
  3939                           l95:; BSR set to: 1
  3940  0006B4                     
  3941                           	line	204
  3942                           	
  3943                           l1797:; BSR set to: 1
  3944  0006B4                     
  3945                           ;main.c: 204:                         c+=1;
  3946                           	incf	((main@c))&0ffh
  3947  0006B4  2BC8               	goto	l1799
  3948  0006B6  EF5D  F003         	line	205
  3949                           ;main.c: 205:                     }
  3950                           	
  3951                           l93:; BSR set to: 1
  3952  0006BA                     
  3953                           	line	197
  3954                           	
  3955                           l1799:; BSR set to: 1
  3956  0006BA                     
  3957                           ;main.c: 197:                     while ((leftIR+200)<rightIR && c<4){
  3958                           	movlw	0C8h
  3959  0006BA  0EC8               	addwf	((main@leftIR))&0ffh,w
  3960  0006BC  25C9               	movwf	(??_main+0+0)&0ffh,c
  3961  0006BE  6E2B               	movlw	0
  3962  0006C0  0E00               	addwfc	((main@leftIR+1))&0ffh,w
  3963  0006C2  21CA               	movwf	(??_main+0+0+1)&0ffh,c
  3964  0006C4  6E2C               		movf	((main@rightIR))&0ffh,w
  3965  0006C6  51CB               	subwf	(??_main+0+0),c,w
  3966  0006C8  5C2B               	movf	(??_main+0+1),c,w
  3967  0006CA  502C               	xorlw	80h
  3968  0006CC  0A80               	movwf	(??_main+2+0)&0ffh,c
  3969  0006CE  6E2D               	movf	((main@rightIR+1))&0ffh,w
  3970  0006D0  51CC               	xorlw	80h
  3971  0006D2  0A80               	subwfb	(??_main+2+0)&0ffh,c,w
  3972  0006D4  582D               	btfsc	status,0
  3973  0006D6  B0D8               	goto	u911
  3974  0006D8  EF70  F003         	goto	u910
  3975  0006DC  EF72  F003         
  3976                           u911:
  3977  0006E0                     	goto	l1803
  3978  0006E0  EF7E  F003         u910:
  3979  0006E4                     	
  3980                           l1801:; BSR set to: 1
  3981  0006E4                     
  3982                           		movlw	04h-1
  3983  0006E4  0E03               	cpfsgt	((main@c))&0ffh
  3984  0006E6  65C8               	goto	u921
  3985  0006E8  EF78  F003         	goto	u920
  3986  0006EC  EF7A  F003         
  3987                           u921:
  3988  0006F0                     	goto	l1787
  3989  0006F0  EF2C  F003         u920:
  3990  0006F4                     	goto	l1803
  3991  0006F4  EF7E  F003         	
  3992                           l97:; BSR set to: 1
  3993  0006F8                     
  3994                           	goto	l1803
  3995  0006F8  EF7E  F003         	
  3996                           l98:; BSR set to: 1
  3997  0006FC                     
  3998                           	line	206
  3999                           	
  4000                           l1803:; BSR set to: 1
  4001  0006FC                     
  4002                           ;main.c: 206:                     c=0;
  4003                           	movlw	low(0)
  4004  0006FC  0E00               	movwf	((main@c))&0ffh
  4005  0006FE  6FC8               	goto	l70
  4006  000700  EFE2  F001         	line	207
  4007                           ;main.c: 207:                 }
  4008                           	
  4009                           l92:; BSR set to: 1
  4010  000704                     
  4011                           	goto	l70
  4012  000704  EFE2  F001         	
  4013                           l91:; BSR set to: 1
  4014  000708                     
  4015                           	goto	l70
  4016  000708  EFE2  F001         	line	210
  4017                           ;main.c: 210:             }
  4018                           	
  4019                           l83:; BSR set to: 1
  4020  00070C                     
  4021                           	line	215
  4022                           ;main.c: 215:         } else {
  4023                           	goto	l70
  4024  00070C  EFE2  F001         	
  4025                           l71:; BSR set to: 1
  4026  000710                     
  4027                           	line	220
  4028                           	
  4029                           l1805:; BSR set to: 1
  4030  000710                     
  4031                           ;main.c: 220:         if (reset ==1){
  4032                           		decf	((_reset))&0ffh,w
  4033  000710  05E3               	btfss	status,2
  4034  000712  A4D8               	goto	u931
  4035  000714  EF8E  F003         	goto	u930
  4036  000718  EF90  F003         
  4037                           u931:
  4038  00071C                     	goto	l70
  4039  00071C  EFE2  F001         u930:
  4040  000720                     	line	221
  4041                           	
  4042                           l1807:; BSR set to: 1
  4043  000720                     
  4044                           ;main.c: 221:                 stop(&motorL, &motorR);
  4045                           		movlw	low(_motorL)
  4046  000720  0EDA               	movwf	((c:stop@mL)),c
  4047  000722  6E21               	movlw	high(_motorL)
  4048  000724  0E01               	movwf	((c:stop@mL+1)),c
  4049  000726  6E22               
  4050                           		movlw	low(_motorR)
  4051  000728  0ED1               	movwf	((c:stop@mR)),c
  4052  00072A  6E23               	movlw	high(_motorR)
  4053  00072C  0E01               	movwf	((c:stop@mR+1)),c
  4054  00072E  6E24               
  4055                           	call	_stop	;wreg free
  4056  000730  ECF0  F005         	line	222
  4057                           	
  4058                           l1809:
  4059  000734                     ;main.c: 222:                 reset=0;
  4060                           	movlw	low(0)
  4061  000734  0E00               	movlb	1	; () banked
  4062  000736  0101               	movwf	((_reset))&0ffh
  4063  000738  6FE3               	line	223
  4064                           	
  4065                           l1811:; BSR set to: 1
  4066  00073A                     
  4067                           ;main.c: 223:                 LATDbits.LATD2=0;
  4068                           	bcf	((c:3980)),c,2	;volatile
  4069  00073A  948C               	line	225
  4070                           ;main.c: 225:                 while (i>0){
  4071                           	goto	l1817
  4072  00073C  EFAD  F003         	
  4073                           l102:; BSR set to: 1
  4074  000740                     
  4075                           	line	226
  4076                           	
  4077                           l1813:; BSR set to: 1
  4078  000740                     
  4079                           ;main.c: 226:                     --i;
  4080                           	decf	((main@i))&0ffh
  4081  000740  07CD               	line	227
  4082                           	
  4083                           l1815:; BSR set to: 1
  4084  000742                     
  4085                           ;main.c: 227:                     path[i]=0;
  4086                           	movf	((main@i))&0ffh,w
  4087  000742  51CD               	mullw	01h
  4088  000744  0D01               	movlw	low(main@path)
  4089  000746  0E00               	addwf	(prodl),c,w
  4090  000748  24F3               	movwf	c:fsr2l
  4091  00074A  6ED9               	movlw	high(main@path)
  4092  00074C  0E01               	addwfc	prod+1,w
  4093  00074E  20F4               	movwf	1+c:fsr2l
  4094  000750  6EDA               	movlw	low(0)
  4095  000752  0E00               	movwf	indf2
  4096  000754  6EDF               	goto	l1817
  4097  000756  EFAD  F003         	line	228
  4098                           ;main.c: 228:                 }
  4099                           	
  4100                           l101:; BSR set to: 1
  4101  00075A                     
  4102                           	line	225
  4103                           	
  4104                           l1817:; BSR set to: 1
  4105  00075A                     
  4106                           ;main.c: 225:                 while (i>0){
  4107                           	movf	((main@i))&0ffh,w
  4108  00075A  51CD               	btfss	status,2
  4109  00075C  A4D8               	goto	u941
  4110  00075E  EFB3  F003         	goto	u940
  4111  000762  EFB5  F003         u941:
  4112  000766                     	goto	l1813
  4113  000766  EFA0  F003         u940:
  4114  00076A                     	goto	l1819
  4115  00076A  EFB7  F003         	
  4116                           l103:; BSR set to: 1
  4117  00076E                     
  4118                           	line	229
  4119                           	
  4120                           l1819:; BSR set to: 1
  4121  00076E                     
  4122                           ;main.c: 229:                 initLCD();
  4123                           	call	_initLCD	;wreg free
  4124  00076E  EC51  F005         	line	230
  4125                           	
  4126                           l1821:
  4127  000772                     ;main.c: 230:                 initPWM();
  4128                           	call	_initPWM	;wreg free
  4129  000772  EC50  F006         	line	231
  4130                           	
  4131                           l1823:
  4132  000776                     ;main.c: 231:                 initIR();
  4133                           	call	_initIR	;wreg free
  4134  000776  ECC7  F007         	line	232
  4135                           	
  4136                           l1825:
  4137  00077A                     ;main.c: 232:                 initEusart();
  4138                           	call	_initEusart	;wreg free
  4139  00077A  ECE5  F007         	line	236
  4140                           	
  4141                           l1827:
  4142  00077E                     ;main.c: 236:                 setMotorPWM(&motorL);
  4143                           		movlw	low(_motorL)
  4144  00077E  0EDA               	movwf	((c:setMotorPWM@m)),c
  4145  000780  6E19               	movlw	high(_motorL)
  4146  000782  0E01               	movwf	((c:setMotorPWM@m+1)),c
  4147  000784  6E1A               
  4148                           	call	_setMotorPWM	;wreg free
  4149  000786  ECD5  F003         	line	237
  4150                           	
  4151                           l1829:
  4152  00078A                     ;main.c: 237:                 setMotorPWM(&motorR);
  4153                           		movlw	low(_motorR)
  4154  00078A  0ED1               	movwf	((c:setMotorPWM@m)),c
  4155  00078C  6E19               	movlw	high(_motorR)
  4156  00078E  0E01               	movwf	((c:setMotorPWM@m+1)),c
  4157  000790  6E1A               
  4158                           	call	_setMotorPWM	;wreg free
  4159  000792  ECD5  F003         	goto	l70
  4160  000796  EFE2  F001         	line	238
  4161                           ;main.c: 238:         }
  4162                           	
  4163                           l100:
  4164  00079A                     	goto	l70
  4165  00079A  EFE2  F001         	line	240
  4166                           ;main.c: 240:         }
  4167                           	
  4168                           l99:
  4169  00079E                     	goto	l70
  4170  00079E  EFE2  F001         	line	242
  4171                           ;main.c: 242:     }
  4172                           	
  4173                           l104:
  4174  0007A2                     	goto	l70
  4175  0007A2  EFE2  F001         	
  4176                           l105:
  4177  0007A6                     	line	243
  4178                           	
  4179                           l106:
  4180  0007A6                     	global	start
  4181                           	goto	start
  4182  0007A6  EF48  F000         	opt stack 0
  4183                           GLOBAL	__end_of_main
  4184                           	__end_of_main:
  4185  0007AA                     	signat	_main,89
  4186                           	global	_move
  4187                           
  4188 ;; *************** function _move *****************
  4189 ;; Defined at:
  4190 ;;		line 138 in file "PWM.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;  mL              2   37[COMRAM] PTR struct DC_motor
  4193 ;;		 -> motorL(9), 
  4194 ;;  mR              2   39[COMRAM] PTR struct DC_motor
  4195 ;;		 -> motorR(9), 
  4196 ;;  dir             1   41[COMRAM] unsigned char 
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;		None
  4199 ;; Return value:  Size  Location     Type
  4200 ;;                  1    wreg      void 
  4201 ;; Registers used:
  4202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4203 ;; Tracked objects:
  4204 ;;		On entry : 0/0
  4205 ;;		On exit  : 0/0
  4206 ;;		Unchanged: 0/0
  4207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4208 ;;      Params:         5       0       0       0
  4209 ;;      Locals:         0       0       0       0
  4210 ;;      Temps:          0       0       0       0
  4211 ;;      Totals:         5       0       0       0
  4212 ;;Total ram usage:        5 bytes
  4213 ;; Hardware stack levels used:    1
  4214 ;; Hardware stack levels required when called:   10
  4215 ;; This function calls:
  4216 ;;		_setMotorsFullSpeed
  4217 ;;		_stop
  4218 ;; This function is called by:
  4219 ;;		_main
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           psect	text1,class=CODE,space=0,reloc=2,group=0
  4223                           	file	"PWM.c"
  4224                           	line	138
  4225                           global __ptext1
  4226                           __ptext1:
  4227  000CFA                     psect	text1
  4228                           	file	"PWM.c"
  4229                           	line	138
  4230                           	global	__size_of_move
  4231                           	__size_of_move	equ	__end_of_move-_move
  4232  0000                     	
  4233                           _move:
  4234  000CFA                     ;incstack = 0
  4235                           	opt	stack 20
  4236                           	line	139
  4237                           	
  4238                           l1615:
  4239  000CFA                     	lfsr	2,01h
  4240  000CFA  EE20 F001          	movf	((c:move@mL)),c,w
  4241  000CFE  5026               	addwf	fsr2l
  4242  000D00  26D9               	movf	((c:move@mL+1)),c,w
  4243  000D02  5027               	addwfc	fsr2h
  4244  000D04  22DA               	bcf	status,0
  4245  000D06  90D8               	rrcf	((c:move@dir)),c,w
  4246  000D08  302A               	andlw	low(01h)
  4247  000D0A  0B01               	movwf	indf2,c
  4248  000D0C  6EDF               
  4249                           	line	140
  4250                           	lfsr	2,01h
  4251  000D0E  EE20 F001          	movf	((c:move@mR)),c,w
  4252  000D12  5028               	addwf	fsr2l
  4253  000D14  26D9               	movf	((c:move@mR+1)),c,w
  4254  000D16  5029               	addwfc	fsr2h
  4255  000D18  22DA               	movf	((c:move@dir)),c,w
  4256  000D1A  502A               	andlw	low(01h)
  4257  000D1C  0B01               	movwf	indf2,c
  4258  000D1E  6EDF               
  4259                           	line	141
  4260                           	
  4261                           l1617:
  4262  000D20                     		movff	(c:move@mL),(c:setMotorsFullSpeed@mL)
  4263  000D20  C026  F021         	movff	(c:move@mL+1),(c:setMotorsFullSpeed@mL+1)
  4264  000D24  C027  F022         
  4265                           		movff	(c:move@mR),(c:setMotorsFullSpeed@mR)
  4266  000D28  C028  F023         	movff	(c:move@mR+1),(c:setMotorsFullSpeed@mR+1)
  4267  000D2C  C029  F024         
  4268                           	call	_setMotorsFullSpeed	;wreg free
  4269  000D30  EC20  F006         	line	142
  4270                           	
  4271                           l1619:
  4272  000D34                     		movff	(c:move@mL),(c:stop@mL)
  4273  000D34  C026  F021         	movff	(c:move@mL+1),(c:stop@mL+1)
  4274  000D38  C027  F022         
  4275                           		movff	(c:move@mR),(c:stop@mR)
  4276  000D3C  C028  F023         	movff	(c:move@mR+1),(c:stop@mR+1)
  4277  000D40  C029  F024         
  4278                           	call	_stop	;wreg free
  4279  000D44  ECF0  F005         	line	143
  4280                           	
  4281                           l222:
  4282  000D48                     	return	;funcret
  4283  000D48  0012               	opt stack 0
  4284                           GLOBAL	__end_of_move
  4285                           	__end_of_move:
  4286  000D4A                     	signat	_move,12409
  4287                           	global	_stop
  4288                           
  4289 ;; *************** function _stop *****************
  4290 ;; Defined at:
  4291 ;;		line 124 in file "PWM.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  4294 ;;		 -> motorL(9), 
  4295 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  4296 ;;		 -> motorR(9), 
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;		None
  4299 ;; Return value:  Size  Location     Type
  4300 ;;                  1    wreg      void 
  4301 ;; Registers used:
  4302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4308 ;;      Params:         4       0       0       0
  4309 ;;      Locals:         0       0       0       0
  4310 ;;      Temps:          1       0       0       0
  4311 ;;      Totals:         5       0       0       0
  4312 ;;Total ram usage:        5 bytes
  4313 ;; Hardware stack levels used:    1
  4314 ;; Hardware stack levels required when called:    9
  4315 ;; This function calls:
  4316 ;;		_setMotorPWM
  4317 ;; This function is called by:
  4318 ;;		_main
  4319 ;;		_move
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           psect	text2,class=CODE,space=0,reloc=2,group=0
  4323                           	line	124
  4324                           global __ptext2
  4325                           __ptext2:
  4326  000BE0                     psect	text2
  4327                           	file	"PWM.c"
  4328                           	line	124
  4329                           	global	__size_of_stop
  4330                           	__size_of_stop	equ	__end_of_stop-_stop
  4331  0000                     	
  4332                           _stop:
  4333  000BE0                     ;incstack = 0
  4334                           	opt	stack 21
  4335                           	line	126
  4336                           	
  4337                           l1497:
  4338  000BE0                     	goto	l1507
  4339  000BE0  EF11  F006         	
  4340                           l217:
  4341  000BE4                     	line	127
  4342                           	
  4343                           l1499:
  4344  000BE4                     		movff	(c:stop@mL),(c:setMotorPWM@m)
  4345  000BE4  C021  F019         	movff	(c:stop@mL+1),(c:setMotorPWM@m+1)
  4346  000BE8  C022  F01A         
  4347                           	call	_setMotorPWM	;wreg free
  4348  000BEC  ECD5  F003         	line	128
  4349                           		movff	(c:stop@mR),(c:setMotorPWM@m)
  4350  000BF0  C023  F019         	movff	(c:stop@mR+1),(c:setMotorPWM@m+1)
  4351  000BF4  C024  F01A         
  4352                           	call	_setMotorPWM	;wreg free
  4353  000BF8  ECD5  F003         	line	129
  4354                           	
  4355                           l1501:
  4356  000BFC                     	movff	(c:stop@mR),fsr2l
  4357  000BFC  C023  FFD9         	movff	(c:stop@mR+1),fsr2h
  4358  000C00  C024  FFDA         	decf	indf2
  4359  000C04  06DF               
  4360                           	line	130
  4361                           	
  4362                           l1503:
  4363  000C06                     	opt asmopt_push
  4364                           opt asmopt_off
  4365                           movlw	13
  4366  000C06  0E0D               movwf	(??_stop+0+0)&0ffh,c,f
  4367  000C08  6E25               	movlw	252
  4368  000C0A  0EFC               u1037:
  4369  000C0C                     decfsz	wreg,f
  4370  000C0C  2EE8               	bra	u1037
  4371  000C0E  D7FE               	decfsz	(??_stop+0+0)&0ffh,c,f
  4372  000C10  2E25               	bra	u1037
  4373  000C12  D7FC               opt asmopt_pop
  4374                           
  4375                           	line	131
  4376                           	
  4377                           l1505:
  4378  000C14                     	movff	(c:stop@mL),fsr2l
  4379  000C14  C021  FFD9         	movff	(c:stop@mL+1),fsr2h
  4380  000C18  C022  FFDA         	decf	indf2
  4381  000C1C  06DF               
  4382                           	goto	l1507
  4383  000C1E  EF11  F006         	
  4384                           l216:
  4385  000C22                     	
  4386                           l1507:
  4387  000C22                     	movff	(c:stop@mL),fsr2l
  4388  000C22  C021  FFD9         	movff	(c:stop@mL+1),fsr2h
  4389  000C26  C022  FFDA         	movf	indf2,w
  4390  000C2A  50DF               	btfss	status,2
  4391  000C2C  A4D8               	goto	u621
  4392  000C2E  EF1B  F006         	goto	u620
  4393  000C32  EF1D  F006         u621:
  4394  000C36                     	goto	l1499
  4395  000C36  EFF2  F005         u620:
  4396  000C3A                     	goto	l219
  4397  000C3A  EF1F  F006         	
  4398                           l218:
  4399  000C3E                     	line	132
  4400                           	
  4401                           l219:
  4402  000C3E                     	return	;funcret
  4403  000C3E  0012               	opt stack 0
  4404                           GLOBAL	__end_of_stop
  4405                           	__end_of_stop:
  4406  000C40                     	signat	_stop,8313
  4407                           	global	_setMotorsFullSpeed
  4408                           
  4409 ;; *************** function _setMotorsFullSpeed *****************
  4410 ;; Defined at:
  4411 ;;		line 110 in file "PWM.c"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  4414 ;;		 -> motorL(9), 
  4415 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  4416 ;;		 -> motorR(9), 
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;		None
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  1    wreg      void 
  4421 ;; Registers used:
  4422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4428 ;;      Params:         4       0       0       0
  4429 ;;      Locals:         0       0       0       0
  4430 ;;      Temps:          1       0       0       0
  4431 ;;      Totals:         5       0       0       0
  4432 ;;Total ram usage:        5 bytes
  4433 ;; Hardware stack levels used:    1
  4434 ;; Hardware stack levels required when called:    9
  4435 ;; This function calls:
  4436 ;;		_setMotorPWM
  4437 ;; This function is called by:
  4438 ;;		_move
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           psect	text3,class=CODE,space=0,reloc=2,group=0
  4442                           	line	110
  4443                           global __ptext3
  4444                           __ptext3:
  4445  000C40                     psect	text3
  4446                           	file	"PWM.c"
  4447                           	line	110
  4448                           	global	__size_of_setMotorsFullSpeed
  4449                           	__size_of_setMotorsFullSpeed	equ	__end_of_setMotorsFullSpeed-_setMotorsFullSpeed
  4450  0000                     	
  4451                           _setMotorsFullSpeed:
  4452  000C40                     ;incstack = 0
  4453                           	opt	stack 20
  4454                           	line	112
  4455                           	
  4456                           l1515:
  4457  000C40                     	goto	l1525
  4458  000C40  EF41  F006         	
  4459                           l211:
  4460  000C44                     	line	113
  4461                           	
  4462                           l1517:
  4463  000C44                     ;PWM.c: 113: 
  4464                           		movff	(c:setMotorsFullSpeed@mL),(c:setMotorPWM@m)
  4465  000C44  C021  F019         	movff	(c:setMotorsFullSpeed@mL+1),(c:setMotorPWM@m+1)
  4466  000C48  C022  F01A         
  4467                           	call	_setMotorPWM	;wreg free
  4468  000C4C  ECD5  F003         	line	114
  4469                           ;PWM.c: 114:     void move(struct DC_motor *mL,struct DC_motor *mR, char dir){
  4470                           		movff	(c:setMotorsFullSpeed@mR),(c:setMotorPWM@m)
  4471  000C50  C023  F019         	movff	(c:setMotorsFullSpeed@mR+1),(c:setMotorPWM@m+1)
  4472  000C54  C024  F01A         
  4473                           	call	_setMotorPWM	;wreg free
  4474  000C58  ECD5  F003         	line	115
  4475                           	
  4476                           l1519:
  4477  000C5C                     ;PWM.c: 115:         mL->direction=(dir>>1)&(0b01);
  4478                           	movff	(c:setMotorsFullSpeed@mR),fsr2l
  4479  000C5C  C023  FFD9         	movff	(c:setMotorsFullSpeed@mR+1),fsr2h
  4480  000C60  C024  FFDA         	incf	indf2
  4481  000C64  2ADF               
  4482                           	line	116
  4483                           	
  4484                           l1521:
  4485  000C66                     ;PWM.c: 116:         mR->direction=(dir)&(0b01);
  4486                           	opt asmopt_push
  4487                           opt asmopt_off
  4488                           movlw	13
  4489  000C66  0E0D               movwf	(??_setMotorsFullSpeed+0+0)&0ffh,c,f
  4490  000C68  6E25               	movlw	252
  4491  000C6A  0EFC               u1047:
  4492  000C6C                     decfsz	wreg,f
  4493  000C6C  2EE8               	bra	u1047
  4494  000C6E  D7FE               	decfsz	(??_setMotorsFullSpeed+0+0)&0ffh,c,f
  4495  000C70  2E25               	bra	u1047
  4496  000C72  D7FC               opt asmopt_pop
  4497                           
  4498                           	line	117
  4499                           	
  4500                           l1523:
  4501  000C74                     ;PWM.c: 117:         setMotorsFullSpeed(mL,mR);
  4502                           	movff	(c:setMotorsFullSpeed@mL),fsr2l
  4503  000C74  C021  FFD9         	movff	(c:setMotorsFullSpeed@mL+1),fsr2h
  4504  000C78  C022  FFDA         	incf	indf2
  4505  000C7C  2ADF               
  4506                           	goto	l1525
  4507  000C7E  EF41  F006         	
  4508                           l210:
  4509  000C82                     	
  4510                           l1525:
  4511  000C82                     	movff	(c:setMotorsFullSpeed@mL),fsr2l
  4512  000C82  C021  FFD9         	movff	(c:setMotorsFullSpeed@mL+1),fsr2h
  4513  000C86  C022  FFDA         		movlw	051h-1
  4514  000C8A  0E50               	cpfsgt	indf2
  4515  000C8C  64DF               	goto	u641
  4516  000C8E  EF4B  F006         	goto	u640
  4517  000C92  EF4D  F006         
  4518                           u641:
  4519  000C96                     	goto	l1517
  4520  000C96  EF22  F006         u640:
  4521  000C9A                     	goto	l213
  4522  000C9A  EF4F  F006         	
  4523                           l212:
  4524  000C9E                     	line	118
  4525                           	
  4526                           l213:
  4527  000C9E                     	return	;funcret
  4528  000C9E  0012               	opt stack 0
  4529                           GLOBAL	__end_of_setMotorsFullSpeed
  4530                           	__end_of_setMotorsFullSpeed:
  4531  000CA0                     	signat	_setMotorsFullSpeed,8313
  4532                           	global	_setMotorPWM
  4533                           
  4534 ;; *************** function _setMotorPWM *****************
  4535 ;; Defined at:
  4536 ;;		line 81 in file "PWM.c"
  4537 ;; Parameters:    Size  Location     Type
  4538 ;;  m               2   24[COMRAM] PTR struct DC_motor
  4539 ;;		 -> motorL(9), motorR(9), 
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;  PWMduty         2   30[COMRAM] int 
  4542 ;; Return value:  Size  Location     Type
  4543 ;;                  1    wreg      void 
  4544 ;; Registers used:
  4545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4546 ;; Tracked objects:
  4547 ;;		On entry : 0/0
  4548 ;;		On exit  : 0/0
  4549 ;;		Unchanged: 0/0
  4550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4551 ;;      Params:         2       0       0       0
  4552 ;;      Locals:         2       0       0       0
  4553 ;;      Temps:          4       0       0       0
  4554 ;;      Totals:         8       0       0       0
  4555 ;;Total ram usage:        8 bytes
  4556 ;; Hardware stack levels used:    1
  4557 ;; Hardware stack levels required when called:    8
  4558 ;; This function calls:
  4559 ;;		___wmul
  4560 ;; This function is called by:
  4561 ;;		_main
  4562 ;;		_setMotorsFullSpeed
  4563 ;;		_stop
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           psect	text4,class=CODE,space=0,reloc=2,group=0
  4567                           	line	81
  4568                           global __ptext4
  4569                           __ptext4:
  4570  0007AA                     psect	text4
  4571                           	file	"PWM.c"
  4572                           	line	81
  4573                           	global	__size_of_setMotorPWM
  4574                           	__size_of_setMotorPWM	equ	__end_of_setMotorPWM-_setMotorPWM
  4575  0000                     	
  4576                           _setMotorPWM:
  4577  0007AA                     ;incstack = 0
  4578                           	opt	stack 21
  4579                           	line	83
  4580                           	
  4581                           l1457:
  4582  0007AA                     ;PWM.c: 83: 
  4583                           	movff	(c:setMotorPWM@m),fsr2l
  4584  0007AA  C019  FFD9         	movff	(c:setMotorPWM@m+1),fsr2h
  4585  0007AE  C01A  FFDA         	movf	indf2,w
  4586  0007B2  50DF               	movwf	(??_setMotorPWM+0+0)&0ffh,c
  4587  0007B4  6E1B               	movf	((??_setMotorPWM+0+0)),c,w
  4588  0007B6  501B               	movwf	((c:___wmul@multiplier)),c
  4589  0007B8  6E13               	clrf	((c:___wmul@multiplier+1)),c
  4590  0007BA  6A14               	lfsr	2,07h
  4591  0007BC  EE20 F007          	movf	((c:setMotorPWM@m)),c,w
  4592  0007C0  5019               	addwf	fsr2l
  4593  0007C2  26D9               	movf	((c:setMotorPWM@m+1)),c,w
  4594  0007C4  501A               	addwfc	fsr2h
  4595  0007C6  22DA               	movff	postinc2,(c:___wmul@multiplicand)
  4596  0007C8  CFDE F015          	movff	postdec2,(c:___wmul@multiplicand+1)
  4597  0007CC  CFDD F016          	call	___wmul	;wreg free
  4598  0007D0  ECB2  F007         	movff	0+?___wmul,(c:setMotorPWM@PWMduty)
  4599  0007D4  C013  F01F         	movff	1+?___wmul,(c:setMotorPWM@PWMduty+1)
  4600  0007D8  C014  F020         	line	85
  4601                           	
  4602                           l1459:
  4603  0007DC                     ;PWM.c: 85: 
  4604                           	lfsr	2,01h
  4605  0007DC  EE20 F001          	movf	((c:setMotorPWM@m)),c,w
  4606  0007E0  5019               	addwf	fsr2l
  4607  0007E2  26D9               	movf	((c:setMotorPWM@m+1)),c,w
  4608  0007E4  501A               	addwfc	fsr2h
  4609  0007E6  22DA               	movf	indf2,w
  4610  0007E8  50DF               	btfsc	status,2
  4611  0007EA  B4D8               	goto	u531
  4612  0007EC  EFFA  F003         	goto	u530
  4613  0007F0  EFFC  F003         u531:
  4614  0007F4                     	goto	l1465
  4615  0007F4  EF32  F004         u530:
  4616  0007F8                     	line	87
  4617                           	
  4618                           l1461:
  4619  0007F8                     ;PWM.c: 87: 
  4620                           	movff	(c:setMotorPWM@PWMduty),??_setMotorPWM+0+0
  4621  0007F8  C01F  F01B         	movff	(c:setMotorPWM@PWMduty+1),??_setMotorPWM+0+0+1
  4622  0007FC  C020  F01C         	movlw	09h
  4623  000800  0E09               	movwf	(??_setMotorPWM+2+0)&0ffh,c
  4624  000802  6E1D               u545:
  4625  000804                     	rlcf	(??_setMotorPWM+0+1),c,w
  4626  000804  341C               	rrcf	(??_setMotorPWM+0+1),c
  4627  000806  321C               	rrcf	(??_setMotorPWM+0+0),c
  4628  000808  321B               	decfsz	(??_setMotorPWM+2+0)&0ffh,c
  4629  00080A  2E1D               	goto	u545
  4630  00080C  EF02  F004         	movf	((c:setMotorPWM@PWMduty)),c,w
  4631  000810  501F               	addwf	(??_setMotorPWM+0+0),c
  4632  000812  261B               	movf	((c:setMotorPWM@PWMduty+1)),c,w
  4633  000814  5020               	addwfc	(??_setMotorPWM+0+1),c
  4634  000816  221C               	movlw	07h
  4635  000818  0E07               	movwf	(??_setMotorPWM+3+0)&0ffh,c
  4636  00081A  6E1E               u555:
  4637  00081C                     	rlcf	(??_setMotorPWM+0+1),c,w
  4638  00081C  341C               	rrcf	(??_setMotorPWM+0+1),c
  4639  00081E  321C               	rrcf	(??_setMotorPWM+0+0),c
  4640  000820  321B               	decfsz	(??_setMotorPWM+3+0)&0ffh,c
  4641  000822  2E1E               	goto	u555
  4642  000824  EF0E  F004         	movff	??_setMotorPWM+0+0,(c:setMotorPWM@PWMduty)
  4643  000828  C01B  F01F         	movff	??_setMotorPWM+0+1,(c:setMotorPWM@PWMduty+1)
  4644  00082C  C01C  F020         	line	88
  4645                           	
  4646                           l1463:
  4647  000830                     ;PWM.c: 88:     for (mL->power; (mL->power)<=80;(mL->power)++) {
  4648                           	lfsr	2,07h
  4649  000830  EE20 F007          	movf	((c:setMotorPWM@m)),c,w
  4650  000834  5019               	addwf	fsr2l
  4651  000836  26D9               	movf	((c:setMotorPWM@m+1)),c,w
  4652  000838  501A               	addwfc	fsr2h
  4653  00083A  22DA               	movff	postinc2,??_setMotorPWM+0+0
  4654  00083C  CFDE F01B          	movff	postdec2,??_setMotorPWM+0+0+1
  4655  000840  CFDD F01C          	movff	(c:setMotorPWM@PWMduty),??_setMotorPWM+2+0
  4656  000844  C01F  F01D         	movff	(c:setMotorPWM@PWMduty+1),??_setMotorPWM+2+0+1
  4657  000848  C020  F01E         	comf	(??_setMotorPWM+2+0),c
  4658  00084C  1E1D               	comf	(??_setMotorPWM+2+1),c
  4659  00084E  1E1E               	infsnz	(??_setMotorPWM+2+0),c
  4660  000850  4A1D               	incf	(??_setMotorPWM+2+1),c
  4661  000852  2A1E               	movf	(??_setMotorPWM+0+0),c,w
  4662  000854  501B               	addwf	(??_setMotorPWM+2+0),c,w
  4663  000856  241D               	movwf	((c:setMotorPWM@PWMduty)),c
  4664  000858  6E1F               	movf	(??_setMotorPWM+0+1),c,w
  4665  00085A  501C               	addwfc	(??_setMotorPWM+2+1),c,w
  4666  00085C  201E               	movwf	1+((c:setMotorPWM@PWMduty)),c
  4667  00085E  6E20               	line	89
  4668                           ;PWM.c: 89:         setMotorPWM(mL);
  4669                           	goto	l1467
  4670  000860  EF50  F004         	line	90
  4671                           ;PWM.c: 90:         setMotorPWM(mR);
  4672                           	
  4673                           l203:
  4674  000864                     	line	92
  4675                           	
  4676                           l1465:
  4677  000864                     ;PWM.c: 92:        _delay((unsigned long)((5)*(8000000/4000.0)));
  4678                           	movff	(c:setMotorPWM@PWMduty),??_setMotorPWM+0+0
  4679  000864  C01F  F01B         	movff	(c:setMotorPWM@PWMduty+1),??_setMotorPWM+0+0+1
  4680  000868  C020  F01C         	movlw	09h
  4681  00086C  0E09               	movwf	(??_setMotorPWM+2+0)&0ffh,c
  4682  00086E  6E1D               u565:
  4683  000870                     	rlcf	(??_setMotorPWM+0+1),c,w
  4684  000870  341C               	rrcf	(??_setMotorPWM+0+1),c
  4685  000872  321C               	rrcf	(??_setMotorPWM+0+0),c
  4686  000874  321B               	decfsz	(??_setMotorPWM+2+0)&0ffh,c
  4687  000876  2E1D               	goto	u565
  4688  000878  EF38  F004         	movf	((c:setMotorPWM@PWMduty)),c,w
  4689  00087C  501F               	addwf	(??_setMotorPWM+0+0),c
  4690  00087E  261B               	movf	((c:setMotorPWM@PWMduty+1)),c,w
  4691  000880  5020               	addwfc	(??_setMotorPWM+0+1),c
  4692  000882  221C               	movlw	07h
  4693  000884  0E07               	movwf	(??_setMotorPWM+3+0)&0ffh,c
  4694  000886  6E1E               u575:
  4695  000888                     	rlcf	(??_setMotorPWM+0+1),c,w
  4696  000888  341C               	rrcf	(??_setMotorPWM+0+1),c
  4697  00088A  321C               	rrcf	(??_setMotorPWM+0+0),c
  4698  00088C  321B               	decfsz	(??_setMotorPWM+3+0)&0ffh,c
  4699  00088E  2E1E               	goto	u575
  4700  000890  EF44  F004         	movff	??_setMotorPWM+0+0,(c:setMotorPWM@PWMduty)
  4701  000894  C01B  F01F         	movff	??_setMotorPWM+0+1,(c:setMotorPWM@PWMduty+1)
  4702  000898  C01C  F020         	goto	l1467
  4703  00089C  EF50  F004         	line	93
  4704                           ;PWM.c: 93:     }
  4705                           	
  4706                           l204:
  4707  0008A0                     	line	95
  4708                           	
  4709                           l1467:
  4710  0008A0                     ;PWM.c: 95: 
  4711                           	movff	(c:setMotorPWM@PWMduty),??_setMotorPWM+0+0
  4712  0008A0  C01F  F01B         	movff	(c:setMotorPWM@PWMduty+1),??_setMotorPWM+0+0+1
  4713  0008A4  C020  F01C         	bcf	status,0
  4714  0008A8  90D8               	rlcf	(??_setMotorPWM+0+0),c
  4715  0008AA  361B               	rlcf	(??_setMotorPWM+0+1),c
  4716  0008AC  361C               	bcf	status,0
  4717  0008AE  90D8               	rlcf	(??_setMotorPWM+0+0),c
  4718  0008B0  361B               	rlcf	(??_setMotorPWM+0+1),c
  4719  0008B2  361C               	movff	??_setMotorPWM+0+0,(c:setMotorPWM@PWMduty)
  4720  0008B4  C01B  F01F         	movff	??_setMotorPWM+0+1,(c:setMotorPWM@PWMduty+1)
  4721  0008B8  C01C  F020         	line	96
  4722                           	
  4723                           l1469:
  4724  0008BC                     ;PWM.c: 96: 
  4725                           	lfsr	2,02h
  4726  0008BC  EE20 F002          	movf	((c:setMotorPWM@m)),c,w
  4727  0008C0  5019               	addwf	fsr2l
  4728  0008C2  26D9               	movf	((c:setMotorPWM@m+1)),c,w
  4729  0008C4  501A               	addwfc	fsr2h
  4730  0008C6  22DA               	movff	postinc2,??_setMotorPWM+0+0
  4731  0008C8  CFDE F01B          	movff	postdec2,??_setMotorPWM+0+0+1
  4732  0008CC  CFDD F01C          	movff	??_setMotorPWM+0+0,fsr2l
  4733  0008D0  C01B  FFD9         	movff	??_setMotorPWM+0+1,fsr2h
  4734  0008D4  C01C  FFDA         	movff	(c:setMotorPWM@PWMduty),indf2
  4735  0008D8  C01F  FFDF         
  4736                           	line	97
  4737                           	
  4738                           l1471:
  4739  0008DC                     ;PWM.c: 97: 
  4740                           	lfsr	2,04h
  4741  0008DC  EE20 F004          	movf	((c:setMotorPWM@m)),c,w
  4742  0008E0  5019               	addwf	fsr2l
  4743  0008E2  26D9               	movf	((c:setMotorPWM@m+1)),c,w
  4744  0008E4  501A               	addwfc	fsr2h
  4745  0008E6  22DA               	movff	postinc2,??_setMotorPWM+0+0
  4746  0008E8  CFDE F01B          	movff	postdec2,??_setMotorPWM+0+0+1
  4747  0008EC  CFDD F01C          	movff	??_setMotorPWM+0+0,fsr2l
  4748  0008F0  C01B  FFD9         	movff	??_setMotorPWM+0+1,fsr2h
  4749  0008F4  C01C  FFDA         	movf	((c:setMotorPWM@PWMduty+1)),c,w
  4750  0008F8  5020               	andlw	low(03Fh)
  4751  0008FA  0B3F               	movwf	indf2,c
  4752  0008FC  6EDF               
  4753                           	line	99
  4754                           	
  4755                           l1473:
  4756  0008FE                     ;PWM.c: 99: 
  4757                           	lfsr	2,01h
  4758  0008FE  EE20 F001          	movf	((c:setMotorPWM@m)),c,w
  4759  000902  5019               	addwf	fsr2l
  4760  000904  26D9               	movf	((c:setMotorPWM@m+1)),c,w
  4761  000906  501A               	addwfc	fsr2h
  4762  000908  22DA               	movf	indf2,w
  4763  00090A  50DF               	btfsc	status,2
  4764  00090C  B4D8               	goto	u581
  4765  00090E  EF8B  F004         	goto	u580
  4766  000912  EF8D  F004         u581:
  4767  000916                     	goto	l1477
  4768  000916  EFA4  F004         u580:
  4769  00091A                     	line	100
  4770                           	
  4771                           l1475:
  4772  00091A                     ;PWM.c: 100: void stop(struct DC_motor *mL, struct DC_motor *mR) {
  4773                           	lfsr	2,06h
  4774  00091A  EE20 F006          	movf	((c:setMotorPWM@m)),c,w
  4775  00091E  5019               	addwf	fsr2l
  4776  000920  26D9               	movf	((c:setMotorPWM@m+1)),c,w
  4777  000922  501A               	addwfc	fsr2h
  4778  000924  22DA               	movf	indf2,w
  4779  000926  50DF               	movwf	(??_setMotorPWM+0+0)&0ffh,c
  4780  000928  6E1B               	movlw	(01h)&0ffh
  4781  00092A  0E01               	movwf	(??_setMotorPWM+1+0)&0ffh,c
  4782  00092C  6E1C               	incf	((??_setMotorPWM+0+0)),c
  4783  00092E  2A1B               	goto	u594
  4784  000930  EF9C  F004         u595:
  4785  000934                     	bcf	status,0
  4786  000934  90D8               	rlcf	((??_setMotorPWM+1+0)),c
  4787  000936  361C               u594:
  4788  000938                     	decfsz	((??_setMotorPWM+0+0)),c
  4789  000938  2E1B               	goto	u595
  4790  00093A  EF9A  F004         	movf	((??_setMotorPWM+1+0)),c,w
  4791  00093E  501C               	iorwf	((c:3978)),c,w	;volatile
  4792  000940  108A               	movwf	((c:3978)),c	;volatile
  4793  000942  6E8A               	line	101
  4794                           ;PWM.c: 101: 
  4795                           	goto	l207
  4796  000944  EFBC  F004         	
  4797                           l205:
  4798  000948                     	line	102
  4799                           	
  4800                           l1477:
  4801  000948                     ;PWM.c: 102:         for (mL->power; (mL->power)>0;(mL->power)--) {
  4802                           	lfsr	2,06h
  4803  000948  EE20 F006          	movf	((c:setMotorPWM@m)),c,w
  4804  00094C  5019               	addwf	fsr2l
  4805  00094E  26D9               	movf	((c:setMotorPWM@m+1)),c,w
  4806  000950  501A               	addwfc	fsr2h
  4807  000952  22DA               	movf	indf2,w
  4808  000954  50DF               	movwf	(??_setMotorPWM+0+0)&0ffh,c
  4809  000956  6E1B               	movlw	(01h)&0ffh
  4810  000958  0E01               	movwf	(??_setMotorPWM+1+0)&0ffh,c
  4811  00095A  6E1C               	incf	((??_setMotorPWM+0+0)),c
  4812  00095C  2A1B               	goto	u604
  4813  00095E  EFB3  F004         u605:
  4814  000962                     	bcf	status,0
  4815  000962  90D8               	rlcf	((??_setMotorPWM+1+0)),c
  4816  000964  361C               u604:
  4817  000966                     	decfsz	((??_setMotorPWM+0+0)),c
  4818  000966  2E1B               	goto	u605
  4819  000968  EFB1  F004         	movf	((??_setMotorPWM+1+0)),c,w
  4820  00096C  501C               	xorlw	0ffh
  4821  00096E  0AFF               	andwf	((c:3978)),c,w	;volatile
  4822  000970  148A               	movwf	((c:3978)),c	;volatile
  4823  000972  6E8A               	goto	l207
  4824  000974  EFBC  F004         	line	103
  4825                           ;PWM.c: 103:         setMotorPWM(mL);
  4826                           	
  4827                           l206:
  4828  000978                     	line	105
  4829                           	
  4830                           l207:
  4831  000978                     	return	;funcret
  4832  000978  0012               	opt stack 0
  4833                           GLOBAL	__end_of_setMotorPWM
  4834                           	__end_of_setMotorPWM:
  4835  00097A                     	signat	_setMotorPWM,4217
  4836                           	global	___wmul
  4837                           
  4838 ;; *************** function ___wmul *****************
  4839 ;; Defined at:
  4840 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
  4841 ;; Parameters:    Size  Location     Type
  4842 ;;  multiplier      2   18[COMRAM] unsigned int 
  4843 ;;  multiplicand    2   20[COMRAM] unsigned int 
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;  product         2   22[COMRAM] unsigned int 
  4846 ;; Return value:  Size  Location     Type
  4847 ;;                  2   18[COMRAM] unsigned int 
  4848 ;; Registers used:
  4849 ;;		wreg, status,2, status,0, prodl, prodh
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4855 ;;      Params:         4       0       0       0
  4856 ;;      Locals:         2       0       0       0
  4857 ;;      Temps:          0       0       0       0
  4858 ;;      Totals:         6       0       0       0
  4859 ;;Total ram usage:        6 bytes
  4860 ;; Hardware stack levels used:    1
  4861 ;; Hardware stack levels required when called:    7
  4862 ;; This function calls:
  4863 ;;		Nothing
  4864 ;; This function is called by:
  4865 ;;		_setMotorPWM
  4866 ;; This function uses a non-reentrant model
  4867 ;;
  4868                           psect	text5,class=CODE,space=0,reloc=2,group=1
  4869                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
  4870                           	line	15
  4871                           global __ptext5
  4872                           __ptext5:
  4873  000F64                     psect	text5
  4874                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
  4875                           	line	15
  4876                           	global	__size_of___wmul
  4877                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  4878  0000                     	
  4879                           ___wmul:
  4880  000F64                     ;incstack = 0
  4881                           	opt	stack 21
  4882                           	line	37
  4883                           	
  4884                           l1445:
  4885  000F64                     	movf	((c:___wmul@multiplier)),c,w
  4886  000F64  5013               	mulwf	((c:___wmul@multiplicand)),c
  4887  000F66  0215               	movff	prodl,(c:___wmul@product)
  4888  000F68  CFF3 F017          	movff	prodh,(c:___wmul@product+1)
  4889  000F6C  CFF4 F018          	line	38
  4890                           	movf	((c:___wmul@multiplier)),c,w
  4891  000F70  5013               	mulwf	(0+((c:___wmul@multiplicand)+01h)),c
  4892  000F72  0216               	movf	(prodl),c,w
  4893  000F74  50F3               	addwf	((c:___wmul@product+1)),c
  4894  000F76  2618               
  4895                           	line	39
  4896                           	movf	(0+((c:___wmul@multiplier)+01h)),c,w
  4897  000F78  5014               	mulwf	((c:___wmul@multiplicand)),c
  4898  000F7A  0215               	movf	(prodl),c,w
  4899  000F7C  50F3               	addwf	((c:___wmul@product+1)),c
  4900  000F7E  2618               
  4901                           	line	52
  4902                           	
  4903                           l1447:
  4904  000F80                     	movff	(c:___wmul@product),(c:?___wmul)
  4905  000F80  C017  F013         	movff	(c:___wmul@product+1),(c:?___wmul+1)
  4906  000F84  C018  F014         	goto	l328
  4907  000F88  EFC6  F007         	
  4908                           l1449:
  4909  000F8C                     	line	53
  4910                           	
  4911                           l328:
  4912  000F8C                     	return	;funcret
  4913  000F8C  0012               	opt stack 0
  4914                           GLOBAL	__end_of___wmul
  4915                           	__end_of___wmul:
  4916  000F8E                     	signat	___wmul,8314
  4917                           	global	_initPWM
  4918                           
  4919 ;; *************** function _initPWM *****************
  4920 ;; Defined at:
  4921 ;;		line 30 in file "PWM.c"
  4922 ;; Parameters:    Size  Location     Type
  4923 ;;		None
  4924 ;; Auto vars:     Size  Location     Type
  4925 ;;		None
  4926 ;; Return value:  Size  Location     Type
  4927 ;;                  1    wreg      void 
  4928 ;; Registers used:
  4929 ;;		wreg, status,2
  4930 ;; Tracked objects:
  4931 ;;		On entry : 0/0
  4932 ;;		On exit  : 0/0
  4933 ;;		Unchanged: 0/0
  4934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4935 ;;      Params:         0       0       0       0
  4936 ;;      Locals:         0       0       0       0
  4937 ;;      Temps:          0       0       0       0
  4938 ;;      Totals:         0       0       0       0
  4939 ;;Total ram usage:        0 bytes
  4940 ;; Hardware stack levels used:    1
  4941 ;; Hardware stack levels required when called:    7
  4942 ;; This function calls:
  4943 ;;		Nothing
  4944 ;; This function is called by:
  4945 ;;		_main
  4946 ;; This function uses a non-reentrant model
  4947 ;;
  4948                           psect	text6,class=CODE,space=0,reloc=2,group=0
  4949                           	file	"PWM.c"
  4950                           	line	30
  4951                           global __ptext6
  4952                           __ptext6:
  4953  000CA0                     psect	text6
  4954                           	file	"PWM.c"
  4955                           	line	30
  4956                           	global	__size_of_initPWM
  4957                           	__size_of_initPWM	equ	__end_of_initPWM-_initPWM
  4958  0000                     	
  4959                           _initPWM:
  4960  000CA0                     ;incstack = 0
  4961                           	opt	stack 23
  4962                           	line	35
  4963                           	
  4964                           l1573:
  4965  000CA0                     ;PWM.c: 35:     PDC1L=0;
  4966                           	bcf	((c:3978)),c,0	;volatile
  4967  000CA0  908A               	line	36
  4968                           ;PWM.c: 36:     PDC1H=0;
  4969                           	bcf	((c:3987)),c,0	;volatile
  4970  000CA2  9093               	line	37
  4971                           ;PWM.c: 37:     PDC2L=0;
  4972                           	bcf	((c:3978)),c,1	;volatile
  4973  000CA4  928A               	line	38
  4974                           ;PWM.c: 38:     PDC2H=0;
  4975                           	bcf	((c:3987)),c,1	;volatile
  4976  000CA6  9293               	line	39
  4977                           ;PWM.c: 39:     PDC3L=0;
  4978                           	bcf	((c:3978)),c,2	;volatile
  4979  000CA8  948A               	line	40
  4980                           ;PWM.c: 40:     PDC3H=0;
  4981                           	bcf	((c:3987)),c,2	;volatile
  4982  000CAA  9493               	line	41
  4983                           ;PWM.c: 41: 
  4984                           	bcf	((c:3978)),c,3	;volatile
  4985  000CAC  968A               	line	42
  4986                           ;PWM.c: 42: 
  4987                           	bcf	((c:3987)),c,3	;volatile
  4988  000CAE  9693               	line	45
  4989                           	
  4990                           l1575:
  4991  000CB0                     ;PWM.c: 45: 
  4992                           	movlw	low(0)
  4993  000CB0  0E00               	movwf	((c:3967)),c	;volatile
  4994  000CB2  6E7F               	line	47
  4995                           ;PWM.c: 47:     PDC0H=0b1;
  4996                           	movlw	low(080h)
  4997  000CB4  0E80               	movwf	((c:3966)),c	;volatile
  4998  000CB6  6E7E               	line	50
  4999                           ;PWM.c: 50: 
  5000                           	movlw	low(06Fh)
  5001  000CB8  0E6F               	movwf	((c:3951)),c	;volatile
  5002  000CBA  6E6F               	line	51
  5003                           ;PWM.c: 51: };
  5004                           	movlw	low(0)
  5005  000CBC  0E00               	movwf	((c:3950)),c	;volatile
  5006  000CBE  6E6E               	line	53
  5007                           ;PWM.c: 53: 
  5008                           	movlw	low(0C7h)
  5009  000CC0  0EC7               	movwf	((c:3963)),c	;volatile
  5010  000CC2  6E7B               	line	54
  5011                           ;PWM.c: 54: 
  5012                           	movlw	low(0)
  5013  000CC4  0E00               	movwf	((c:3962)),c	;volatile
  5014  000CC6  6E7A               	line	57
  5015                           ;PWM.c: 57: void setMotorPWM(struct DC_motor *m){
  5016                           	movlw	low(0)
  5017  000CC8  0E00               	movwf	((c:3961)),c	;volatile
  5018  000CCA  6E79               	line	58
  5019                           ;PWM.c: 58: 
  5020                           	movlw	low(0)
  5021  000CCC  0E00               	movwf	((c:3960)),c	;volatile
  5022  000CCE  6E78               	line	59
  5023                           ;PWM.c: 59:     int PWMduty = ((int)m->power)*(m->PWMperiod);
  5024                           	movlw	low(0)
  5025  000CD0  0E00               	movwf	((c:3959)),c	;volatile
  5026  000CD2  6E77               	line	60
  5027                           ;PWM.c: 60: 
  5028                           	movlw	low(0)
  5029  000CD4  0E00               	movwf	((c:3958)),c	;volatile
  5030  000CD6  6E76               	line	61
  5031                           ;PWM.c: 61:     if (m->direction) {
  5032                           	movlw	low(0)
  5033  000CD8  0E00               	movwf	((c:3957)),c	;volatile
  5034  000CDA  6E75               	line	62
  5035                           ;PWM.c: 62: 
  5036                           	movlw	low(0)
  5037  000CDC  0E00               	movwf	((c:3956)),c	;volatile
  5038  000CDE  6E74               	line	63
  5039                           ;PWM.c: 63:         PWMduty = (PWMduty>>9)+PWMduty>>7;
  5040                           	movlw	low(0)
  5041  000CE0  0E00               	movwf	((c:3955)),c	;volatile
  5042  000CE2  6E73               	line	64
  5043                           ;PWM.c: 64:         PWMduty = m->PWMperiod - PWMduty;
  5044                           	movlw	low(0)
  5045  000CE4  0E00               	movwf	((c:3954)),c	;volatile
  5046  000CE6  6E72               	line	70
  5047                           ;PWM.c: 70: 
  5048                           	movlw	low(08Fh)
  5049  000CE8  0E8F               	movwf	((c:3961)),c	;volatile
  5050  000CEA  6E79               	line	71
  5051                           ;PWM.c: 71:     PWMduty=(PWMduty<<2);
  5052                           	movlw	low(01h)
  5053  000CEC  0E01               	movwf	((c:3960)),c	;volatile
  5054  000CEE  6E78               	line	72
  5055                           ;PWM.c: 72:     *(m->dutyLowByte)=PWMduty&0xFF;
  5056                           	movlw	low(08Fh)
  5057  000CF0  0E8F               	movwf	((c:3959)),c	;volatile
  5058  000CF2  6E77               	line	73
  5059                           ;PWM.c: 73:     *(m->dutyHighByte)=(PWMduty>>8)&0x3F;
  5060                           	movlw	low(01h)
  5061  000CF4  0E01               	movwf	((c:3958)),c	;volatile
  5062  000CF6  6E76               	line	75
  5063                           	
  5064                           l200:
  5065  000CF8                     	return	;funcret
  5066  000CF8  0012               	opt stack 0
  5067                           GLOBAL	__end_of_initPWM
  5068                           	__end_of_initPWM:
  5069  000CFA                     	signat	_initPWM,89
  5070                           	global	_initLCD
  5071                           
  5072 ;; *************** function _initLCD *****************
  5073 ;; Defined at:
  5074 ;;		line 70 in file "LCD.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;		None
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;		None
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  1    wreg      void 
  5081 ;; Registers used:
  5082 ;;		wreg, status,2, status,0, cstack
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5088 ;;      Params:         0       0       0       0
  5089 ;;      Locals:         0       0       0       0
  5090 ;;      Temps:          1       0       0       0
  5091 ;;      Totals:         1       0       0       0
  5092 ;;Total ram usage:        1 bytes
  5093 ;; Hardware stack levels used:    1
  5094 ;; Hardware stack levels required when called:   10
  5095 ;; This function calls:
  5096 ;;		_LCDout
  5097 ;;		_SendLCD
  5098 ;; This function is called by:
  5099 ;;		_main
  5100 ;; This function uses a non-reentrant model
  5101 ;;
  5102                           psect	text7,class=CODE,space=0,reloc=2,group=0
  5103                           	file	"LCD.c"
  5104                           	line	70
  5105                           global __ptext7
  5106                           __ptext7:
  5107  000AA2                     psect	text7
  5108                           	file	"LCD.c"
  5109                           	line	70
  5110                           	global	__size_of_initLCD
  5111                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  5112  0000                     	
  5113                           _initLCD:
  5114  000AA2                     ;incstack = 0
  5115                           	opt	stack 20
  5116                           	line	73
  5117                           	
  5118                           l1577:
  5119  000AA2                     ;LCD.c: 73: 
  5120                           	bcf	((c:3977)),c,6	;volatile
  5121  000AA2  9C89               	line	74
  5122                           ;LCD.c: 74:     _delay((unsigned long)((20)*(8000000/4000.0)));
  5123                           	bcf	((c:3986)),c,6	;volatile
  5124  000AA4  9C92               	line	76
  5125                           ;LCD.c: 76:     LCDout(0b0011);
  5126                           	bcf	((c:3979)),c,0	;volatile
  5127  000AA6  908B               	line	77
  5128                           ;LCD.c: 77: 
  5129                           	bcf	((c:3988)),c,0	;volatile
  5130  000AA8  9094               	line	79
  5131                           ;LCD.c: 79: 
  5132                           	bcf	((c:3979)),c,1	;volatile
  5133  000AAA  928B               	line	80
  5134                           ;LCD.c: 80:     LCDout(0b0011);
  5135                           	bcf	((c:3988)),c,1	;volatile
  5136  000AAC  9294               	line	82
  5137                           ;LCD.c: 82:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  5138                           	bcf	((c:3979)),c,2	;volatile
  5139  000AAE  948B               	line	83
  5140                           ;LCD.c: 83: 
  5141                           	bcf	((c:3988)),c,2	;volatile
  5142  000AB0  9494               	line	85
  5143                           ;LCD.c: 85: 
  5144                           	bcf	((c:3980)),c,0	;volatile
  5145  000AB2  908C               	line	86
  5146                           ;LCD.c: 86:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  5147                           	bcf	((c:3989)),c,0	;volatile
  5148  000AB4  9095               	line	88
  5149                           ;LCD.c: 88:     LCDout(0b0010);
  5150                           	bcf	((c:3980)),c,1	;volatile
  5151  000AB6  928C               	line	89
  5152                           ;LCD.c: 89: 
  5153                           	bcf	((c:3989)),c,1	;volatile
  5154  000AB8  9295               	line	92
  5155                           	
  5156                           l1579:
  5157  000ABA                     ;LCD.c: 92: 
  5158                           	opt asmopt_push
  5159                           opt asmopt_off
  5160                           movlw	52
  5161  000ABA  0E34               movwf	(??_initLCD+0+0)&0ffh,c,f
  5162  000ABC  6E1A               	movlw	242
  5163  000ABE  0EF2               u1057:
  5164  000AC0                     decfsz	wreg,f
  5165  000AC0  2EE8               	bra	u1057
  5166  000AC2  D7FE               	decfsz	(??_initLCD+0+0)&0ffh,c,f
  5167  000AC4  2E1A               	bra	u1057
  5168  000AC6  D7FC               opt asmopt_pop
  5169                           
  5170                           	line	94
  5171                           	
  5172                           l1581:
  5173  000AC8                     ;LCD.c: 94:     SendLCD(0b00101000,0);
  5174                           	movlw	(03h)&0ffh
  5175  000AC8  0E03               	
  5176                           	call	_LCDout
  5177  000ACA  EC3E  F007         	line	96
  5178                           	
  5179                           l1583:
  5180  000ACE                     ;LCD.c: 96:     SendLCD(0b00001000,0);
  5181                           	opt asmopt_push
  5182                           opt asmopt_off
  5183                           movlw	13
  5184  000ACE  0E0D               movwf	(??_initLCD+0+0)&0ffh,c,f
  5185  000AD0  6E1A               	movlw	252
  5186  000AD2  0EFC               u1067:
  5187  000AD4                     decfsz	wreg,f
  5188  000AD4  2EE8               	bra	u1067
  5189  000AD6  D7FE               	decfsz	(??_initLCD+0+0)&0ffh,c,f
  5190  000AD8  2E1A               	bra	u1067
  5191  000ADA  D7FC               opt asmopt_pop
  5192                           
  5193                           	line	98
  5194                           ;LCD.c: 98:     SendLCD(0b00000001,0);
  5195                           	movlw	(03h)&0ffh
  5196  000ADC  0E03               	
  5197                           	call	_LCDout
  5198  000ADE  EC3E  F007         	line	100
  5199                           	
  5200                           l1585:
  5201  000AE2                     ;LCD.c: 100:     SendLCD(0b00000110,0);
  5202                           	opt asmopt_push
  5203                           opt asmopt_off
  5204                           	movlw	133
  5205  000AE2  0E85               u1077:
  5206  000AE4                     decfsz	wreg,f
  5207  000AE4  2EE8               	bra	u1077
  5208  000AE6  D7FE               	nop
  5209  000AE8  F000               opt asmopt_pop
  5210                           
  5211                           	line	102
  5212                           	
  5213                           l1587:
  5214  000AEA                     ;LCD.c: 102:     SendLCD(0b00001100,0);
  5215                           	movlw	(03h)&0ffh
  5216  000AEA  0E03               	
  5217                           	call	_LCDout
  5218  000AEC  EC3E  F007         	line	104
  5219                           ;LCD.c: 104: }
  5220                           	opt asmopt_push
  5221                           opt asmopt_off
  5222                           	movlw	33
  5223  000AF0  0E21               u1087:
  5224  000AF2                     decfsz	wreg,f
  5225  000AF2  2EE8               	bra	u1087
  5226  000AF4  D7FE               	nop
  5227  000AF6  F000               opt asmopt_pop
  5228                           
  5229                           	line	106
  5230                           	
  5231                           l1589:
  5232  000AF8                     ;LCD.c: 106: 
  5233                           	movlw	(02h)&0ffh
  5234  000AF8  0E02               	
  5235                           	call	_LCDout
  5236  000AFA  EC3E  F007         	line	108
  5237                           	
  5238                           l1591:
  5239  000AFE                     ;LCD.c: 108: 
  5240                           	opt asmopt_push
  5241                           opt asmopt_off
  5242                           	movlw	33
  5243  000AFE  0E21               u1097:
  5244  000B00                     decfsz	wreg,f
  5245  000B00  2EE8               	bra	u1097
  5246  000B02  D7FE               	nop
  5247  000B04  F000               opt asmopt_pop
  5248                           
  5249                           	line	112
  5250                           ;LCD.c: 112:     } else if (line==2){
  5251                           	movlw	low(0)
  5252  000B06  0E00               	movwf	((c:SendLCD@type)),c
  5253  000B08  6E16               	movlw	(028h)&0ffh
  5254  000B0A  0E28               	
  5255                           	call	_SendLCD
  5256  000B0C  EC7A  F007         	line	113
  5257                           	
  5258                           l1593:
  5259  000B10                     ;LCD.c: 113:         SendLCD(0xC0,0);
  5260                           	opt asmopt_push
  5261                           opt asmopt_off
  5262                           	movlw	33
  5263  000B10  0E21               u1107:
  5264  000B12                     decfsz	wreg,f
  5265  000B12  2EE8               	bra	u1107
  5266  000B14  D7FE               	nop
  5267  000B16  F000               opt asmopt_pop
  5268                           
  5269                           	line	114
  5270                           	
  5271                           l1595:
  5272  000B18                     ;LCD.c: 114:     }
  5273                           	movlw	low(0)
  5274  000B18  0E00               	movwf	((c:SendLCD@type)),c
  5275  000B1A  6E16               	movlw	(08h)&0ffh
  5276  000B1C  0E08               	
  5277                           	call	_SendLCD
  5278  000B1E  EC7A  F007         	line	115
  5279                           ;LCD.c: 115: 
  5280                           	opt asmopt_push
  5281                           opt asmopt_off
  5282                           	movlw	33
  5283  000B22  0E21               u1117:
  5284  000B24                     decfsz	wreg,f
  5285  000B24  2EE8               	bra	u1117
  5286  000B26  D7FE               	nop
  5287  000B28  F000               opt asmopt_pop
  5288                           
  5289                           	line	116
  5290                           	
  5291                           l1597:
  5292  000B2A                     ;LCD.c: 116:  _delay((unsigned long)((50)*(8000000/4000000.0)));
  5293                           	movlw	low(0)
  5294  000B2A  0E00               	movwf	((c:SendLCD@type)),c
  5295  000B2C  6E16               	movlw	(01h)&0ffh
  5296  000B2E  0E01               	
  5297                           	call	_SendLCD
  5298  000B30  EC7A  F007         	line	117
  5299                           	
  5300                           l1599:
  5301  000B34                     ;LCD.c: 117: }
  5302                           	opt asmopt_push
  5303                           opt asmopt_off
  5304                           movlw	13
  5305  000B34  0E0D               movwf	(??_initLCD+0+0)&0ffh,c,f
  5306  000B36  6E1A               	movlw	252
  5307  000B38  0EFC               u1127:
  5308  000B3A                     decfsz	wreg,f
  5309  000B3A  2EE8               	bra	u1127
  5310  000B3C  D7FE               	decfsz	(??_initLCD+0+0)&0ffh,c,f
  5311  000B3E  2E1A               	bra	u1127
  5312  000B40  D7FC               opt asmopt_pop
  5313                           
  5314                           	line	118
  5315                           ;LCD.c: 118: 
  5316                           	movlw	low(0)
  5317  000B42  0E00               	movwf	((c:SendLCD@type)),c
  5318  000B44  6E16               	movlw	(06h)&0ffh
  5319  000B46  0E06               	
  5320                           	call	_SendLCD
  5321  000B48  EC7A  F007         	line	119
  5322                           	
  5323                           l1601:
  5324  000B4C                     ;LCD.c: 119: 
  5325                           	opt asmopt_push
  5326                           opt asmopt_off
  5327                           	movlw	33
  5328  000B4C  0E21               u1137:
  5329  000B4E                     decfsz	wreg,f
  5330  000B4E  2EE8               	bra	u1137
  5331  000B50  D7FE               	nop
  5332  000B52  F000               opt asmopt_pop
  5333                           
  5334                           	line	120
  5335                           	
  5336                           l1603:
  5337  000B54                     ;LCD.c: 120: 
  5338                           	movlw	low(0)
  5339  000B54  0E00               	movwf	((c:SendLCD@type)),c
  5340  000B56  6E16               	movlw	(0Ch)&0ffh
  5341  000B58  0E0C               	
  5342                           	call	_SendLCD
  5343  000B5A  EC7A  F007         	line	121
  5344                           ;LCD.c: 121: 
  5345                           	opt asmopt_push
  5346                           opt asmopt_off
  5347                           	movlw	33
  5348  000B5E  0E21               u1147:
  5349  000B60                     decfsz	wreg,f
  5350  000B60  2EE8               	bra	u1147
  5351  000B62  D7FE               	nop
  5352  000B64  F000               opt asmopt_pop
  5353                           
  5354                           	line	122
  5355                           	
  5356                           l252:
  5357  000B66                     	return	;funcret
  5358  000B66  0012               	opt stack 0
  5359                           GLOBAL	__end_of_initLCD
  5360                           	__end_of_initLCD:
  5361  000B68                     	signat	_initLCD,89
  5362                           	global	_SendLCD
  5363                           
  5364 ;; *************** function _SendLCD *****************
  5365 ;; Defined at:
  5366 ;;		line 49 in file "LCD.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;  Byte            1    wreg     unsigned char 
  5369 ;;  type            1   21[COMRAM] unsigned char 
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;  Byte            1   24[COMRAM] unsigned char 
  5372 ;;  LowBits         1   23[COMRAM] unsigned char 
  5373 ;;  HighBits        1   22[COMRAM] unsigned char 
  5374 ;; Return value:  Size  Location     Type
  5375 ;;                  1    wreg      void 
  5376 ;; Registers used:
  5377 ;;		wreg, status,2, status,0, cstack
  5378 ;; Tracked objects:
  5379 ;;		On entry : 0/0
  5380 ;;		On exit  : 0/0
  5381 ;;		Unchanged: 0/0
  5382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5383 ;;      Params:         1       0       0       0
  5384 ;;      Locals:         3       0       0       0
  5385 ;;      Temps:          0       0       0       0
  5386 ;;      Totals:         4       0       0       0
  5387 ;;Total ram usage:        4 bytes
  5388 ;; Hardware stack levels used:    1
  5389 ;; Hardware stack levels required when called:    9
  5390 ;; This function calls:
  5391 ;;		_LCDout
  5392 ;; This function is called by:
  5393 ;;		_initLCD
  5394 ;; This function uses a non-reentrant model
  5395 ;;
  5396                           psect	text8,class=CODE,space=0,reloc=2,group=0
  5397                           	line	49
  5398                           global __ptext8
  5399                           __ptext8:
  5400  000EF4                     psect	text8
  5401                           	file	"LCD.c"
  5402                           	line	49
  5403                           	global	__size_of_SendLCD
  5404                           	__size_of_SendLCD	equ	__end_of_SendLCD-_SendLCD
  5405  0000                     	
  5406                           _SendLCD:
  5407  000EF4                     ;incstack = 0
  5408                           	opt	stack 20
  5409                           ;SendLCD@Byte stored from wreg
  5410                           	movwf	((c:SendLCD@Byte)),c
  5411  000EF4  6E19               	line	52
  5412                           	
  5413                           l1527:
  5414  000EF6                     ;LCD.c: 52: void initLCD(void){
  5415                           	btfsc	(c:SendLCD@type),c,0
  5416  000EF6  B016               	bra	u655
  5417  000EF8  D002               	bcf	((c:3977)),c,6	;volatile
  5418  000EFA  9C89               	bra	u656
  5419  000EFC  D001               	u655:
  5420  000EFE                     	bsf	((c:3977)),c,6	;volatile
  5421  000EFE  8C89               	u656:
  5422  000F00                     
  5423                           	line	54
  5424                           	
  5425                           l1529:
  5426  000F00                     ;LCD.c: 54: 
  5427                           	movf	((c:SendLCD@Byte)),c,w
  5428  000F00  5019               	andlw	low(0F0h)
  5429  000F02  0BF0               	movwf	((c:SendLCD@HighBits)),c
  5430  000F04  6E17               	line	55
  5431                           ;LCD.c: 55:     LATAbits.LATA6=0;
  5432                           	movf	((c:SendLCD@Byte)),c,w
  5433  000F06  5019               	andlw	low(0Fh)
  5434  000F08  0B0F               	movwf	((c:SendLCD@LowBits)),c
  5435  000F0A  6E18               	line	58
  5436                           	
  5437                           l1531:
  5438  000F0C                     ;LCD.c: 58:     LATCbits.LATC0 =0;
  5439                           	swapf	((c:SendLCD@HighBits)),c,w
  5440  000F0C  3817               	andlw	(0ffh shr 4) & 0ffh
  5441  000F0E  0B0F               	
  5442                           	call	_LCDout
  5443  000F10  EC3E  F007         	line	59
  5444                           	
  5445                           l1533:
  5446  000F14                     ;LCD.c: 59:     TRISCbits.RC0=0;
  5447                           	opt asmopt_push
  5448                           opt asmopt_off
  5449                           	movlw	6
  5450  000F14  0E06               u1157:
  5451  000F16                     decfsz	wreg,f
  5452  000F16  2EE8               	bra	u1157
  5453  000F18  D7FE               	nop2
  5454  000F1A  D000               opt asmopt_pop
  5455                           
  5456                           	line	62
  5457                           	
  5458                           l1535:
  5459  000F1C                     ;LCD.c: 62:     TRISCbits.RC1=0;
  5460                           	movf	((c:SendLCD@LowBits)),c,w
  5461  000F1C  5018               	
  5462                           	call	_LCDout
  5463  000F1E  EC3E  F007         	line	63
  5464                           	
  5465                           l1537:
  5466  000F22                     ;LCD.c: 63: 
  5467                           	opt asmopt_push
  5468                           opt asmopt_off
  5469                           	movlw	6
  5470  000F22  0E06               u1167:
  5471  000F24                     decfsz	wreg,f
  5472  000F24  2EE8               	bra	u1167
  5473  000F26  D7FE               	nop2
  5474  000F28  D000               opt asmopt_pop
  5475                           
  5476                           	line	65
  5477                           	
  5478                           l249:
  5479  000F2A                     	return	;funcret
  5480  000F2A  0012               	opt stack 0
  5481                           GLOBAL	__end_of_SendLCD
  5482                           	__end_of_SendLCD:
  5483  000F2C                     	signat	_SendLCD,8313
  5484                           	global	_LCDout
  5485                           
  5486 ;; *************** function _LCDout *****************
  5487 ;; Defined at:
  5488 ;;		line 34 in file "LCD.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;  number          1    wreg     unsigned char 
  5491 ;; Auto vars:     Size  Location     Type
  5492 ;;  number          1   20[COMRAM] unsigned char 
  5493 ;; Return value:  Size  Location     Type
  5494 ;;                  1    wreg      void 
  5495 ;; Registers used:
  5496 ;;		wreg, status,2, status,0, cstack
  5497 ;; Tracked objects:
  5498 ;;		On entry : 0/0
  5499 ;;		On exit  : 0/0
  5500 ;;		Unchanged: 0/0
  5501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5502 ;;      Params:         0       0       0       0
  5503 ;;      Locals:         1       0       0       0
  5504 ;;      Temps:          2       0       0       0
  5505 ;;      Totals:         3       0       0       0
  5506 ;;Total ram usage:        3 bytes
  5507 ;; Hardware stack levels used:    1
  5508 ;; Hardware stack levels required when called:    8
  5509 ;; This function calls:
  5510 ;;		_E_TOG
  5511 ;; This function is called by:
  5512 ;;		_SendLCD
  5513 ;;		_initLCD
  5514 ;; This function uses a non-reentrant model
  5515 ;;
  5516                           psect	text9,class=CODE,space=0,reloc=2,group=0
  5517                           	line	34
  5518                           global __ptext9
  5519                           __ptext9:
  5520  000E7C                     psect	text9
  5521                           	file	"LCD.c"
  5522                           	line	34
  5523                           	global	__size_of_LCDout
  5524                           	__size_of_LCDout	equ	__end_of_LCDout-_LCDout
  5525  0000                     	
  5526                           _LCDout:
  5527  000E7C                     ;incstack = 0
  5528                           	opt	stack 20
  5529                           ;LCDout@number stored from wreg
  5530                           	movwf	((c:LCDout@number)),c
  5531  000E7C  6E15               	line	39
  5532                           	
  5533                           l1479:
  5534  000E7E                     ;LCD.c: 39: 
  5535                           	movff	(c:3979),??_LCDout+0+0	;volatile
  5536  000E7E  CF8B F013          	movlw	0F9h
  5537  000E82  0EF9               	andwf	(??_LCDout+0+0),c
  5538  000E84  1613               	movff	(c:LCDout@number),??_LCDout+1+0
  5539  000E86  C015  F014         	movlw	03h
  5540  000E8A  0E03               	andwf	(??_LCDout+1+0),c
  5541  000E8C  1614               	bcf	status,0
  5542  000E8E  90D8               	rlcf	(??_LCDout+1+0),c,w
  5543  000E90  3414               	iorwf	(??_LCDout+0+0),c,w
  5544  000E92  1013               	movwf	((c:3979)),c	;volatile
  5545  000E94  6E8B               	line	41
  5546                           ;LCD.c: 41:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  5547                           	movff	(c:3980),??_LCDout+0+0	;volatile
  5548  000E96  CF8C F013          	movlw	0FCh
  5549  000E9A  0EFC               	andwf	(??_LCDout+0+0),c
  5550  000E9C  1613               	rrncf	((c:LCDout@number)),c,w
  5551  000E9E  4015               	rrncf	wreg
  5552  000EA0  42E8               	andlw	(0ffh shr 2) & 0ffh
  5553  000EA2  0B3F               	andlw	low(03h)
  5554  000EA4  0B03               	iorwf	(??_LCDout+0+0),c,w
  5555  000EA6  1013               	movwf	((c:3980)),c	;volatile
  5556  000EA8  6E8C               	line	42
  5557                           	
  5558                           l1481:
  5559  000EAA                     ;LCD.c: 42: 
  5560                           	call	_E_TOG	;wreg free
  5561  000EAA  ECF1  F007         	line	43
  5562                           	
  5563                           l1483:
  5564  000EAE                     ;LCD.c: 43: 
  5565                           	opt asmopt_push
  5566                           opt asmopt_off
  5567                           	movlw	3
  5568  000EAE  0E03               u1177:
  5569  000EB0                     decfsz	wreg,f
  5570  000EB0  2EE8               	bra	u1177
  5571  000EB2  D7FE               	nop
  5572  000EB4  F000               opt asmopt_pop
  5573                           
  5574                           	line	44
  5575                           	
  5576                           l246:
  5577  000EB6                     	return	;funcret
  5578  000EB6  0012               	opt stack 0
  5579                           GLOBAL	__end_of_LCDout
  5580                           	__end_of_LCDout:
  5581  000EB8                     	signat	_LCDout,4217
  5582                           	global	_E_TOG
  5583                           
  5584 ;; *************** function _E_TOG *****************
  5585 ;; Defined at:
  5586 ;;		line 24 in file "LCD.c"
  5587 ;; Parameters:    Size  Location     Type
  5588 ;;		None
  5589 ;; Auto vars:     Size  Location     Type
  5590 ;;		None
  5591 ;; Return value:  Size  Location     Type
  5592 ;;                  1    wreg      void 
  5593 ;; Registers used:
  5594 ;;		wreg
  5595 ;; Tracked objects:
  5596 ;;		On entry : 0/0
  5597 ;;		On exit  : 0/0
  5598 ;;		Unchanged: 0/0
  5599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5600 ;;      Params:         0       0       0       0
  5601 ;;      Locals:         0       0       0       0
  5602 ;;      Temps:          0       0       0       0
  5603 ;;      Totals:         0       0       0       0
  5604 ;;Total ram usage:        0 bytes
  5605 ;; Hardware stack levels used:    1
  5606 ;; Hardware stack levels required when called:    7
  5607 ;; This function calls:
  5608 ;;		Nothing
  5609 ;; This function is called by:
  5610 ;;		_LCDout
  5611 ;; This function uses a non-reentrant model
  5612 ;;
  5613                           psect	text10,class=CODE,space=0,reloc=2,group=0
  5614                           	line	24
  5615                           global __ptext10
  5616                           __ptext10:
  5617  000FE2                     psect	text10
  5618                           	file	"LCD.c"
  5619                           	line	24
  5620                           	global	__size_of_E_TOG
  5621                           	__size_of_E_TOG	equ	__end_of_E_TOG-_E_TOG
  5622  0000                     	
  5623                           _E_TOG:
  5624  000FE2                     ;incstack = 0
  5625                           	opt	stack 20
  5626                           	line	25
  5627                           	
  5628                           l1439:
  5629  000FE2                     ;LCD.c: 25:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  5630                           	bsf	((c:3979)),c,0	;volatile
  5631  000FE2  808B               	line	26
  5632                           	
  5633                           l1441:
  5634  000FE4                     ;LCD.c: 26: }
  5635                           	opt asmopt_push
  5636                           opt asmopt_off
  5637                           	movlw	3
  5638  000FE4  0E03               u1187:
  5639  000FE6                     decfsz	wreg,f
  5640  000FE6  2EE8               	bra	u1187
  5641  000FE8  D7FE               	nop
  5642  000FEA  F000               opt asmopt_pop
  5643                           
  5644                           	line	27
  5645                           	
  5646                           l1443:
  5647  000FEC                     ;LCD.c: 27: 
  5648                           	bcf	((c:3979)),c,0	;volatile
  5649  000FEC  908B               	line	28
  5650                           	
  5651                           l243:
  5652  000FEE                     	return	;funcret
  5653  000FEE  0012               	opt stack 0
  5654                           GLOBAL	__end_of_E_TOG
  5655                           	__end_of_E_TOG:
  5656  000FF0                     	signat	_E_TOG,89
  5657                           	global	_initIR
  5658                           
  5659 ;; *************** function _initIR *****************
  5660 ;; Defined at:
  5661 ;;		line 21 in file "IR.c"
  5662 ;; Parameters:    Size  Location     Type
  5663 ;;		None
  5664 ;; Auto vars:     Size  Location     Type
  5665 ;;		None
  5666 ;; Return value:  Size  Location     Type
  5667 ;;                  1    wreg      void 
  5668 ;; Registers used:
  5669 ;;		wreg, status,2
  5670 ;; Tracked objects:
  5671 ;;		On entry : 0/0
  5672 ;;		On exit  : 0/0
  5673 ;;		Unchanged: 0/0
  5674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5675 ;;      Params:         0       0       0       0
  5676 ;;      Locals:         0       0       0       0
  5677 ;;      Temps:          0       0       0       0
  5678 ;;      Totals:         0       0       0       0
  5679 ;;Total ram usage:        0 bytes
  5680 ;; Hardware stack levels used:    1
  5681 ;; Hardware stack levels required when called:    7
  5682 ;; This function calls:
  5683 ;;		Nothing
  5684 ;; This function is called by:
  5685 ;;		_main
  5686 ;; This function uses a non-reentrant model
  5687 ;;
  5688                           psect	text11,class=CODE,space=0,reloc=2,group=0
  5689                           	file	"IR.c"
  5690                           	line	21
  5691                           global __ptext11
  5692                           __ptext11:
  5693  000F8E                     psect	text11
  5694                           	file	"IR.c"
  5695                           	line	21
  5696                           	global	__size_of_initIR
  5697                           	__size_of_initIR	equ	__end_of_initIR-_initIR
  5698  0000                     	
  5699                           _initIR:
  5700  000F8E                     ;incstack = 0
  5701                           	opt	stack 23
  5702                           	line	23
  5703                           	
  5704                           l1605:
  5705  000F8E                     ;IR.c: 23: 
  5706                           	movlw	low(0)
  5707  000F8E  0E00               	movwf	((c:4024)),c	;volatile
  5708  000F90  6EB8               	line	24
  5709                           ;IR.c: 24: 
  5710                           	movlw	low(0)
  5711  000F92  0E00               	movwf	((c:4025)),c	;volatile
  5712  000F94  6EB9               	line	29
  5713                           	
  5714                           l1607:
  5715  000F96                     ;IR.c: 29: 
  5716                           	bcf	((c:3977)),c,3	;volatile
  5717  000F96  9689               	line	30
  5718                           	
  5719                           l1609:
  5720  000F98                     ;IR.c: 30: 
  5721                           	bsf	((c:3986)),c,3	;volatile
  5722  000F98  8692               	line	32
  5723                           	
  5724                           l1611:
  5725  000F9A                     ;IR.c: 32: 
  5726                           	bcf	((c:3977)),c,4	;volatile
  5727  000F9A  9889               	line	33
  5728                           	
  5729                           l1613:
  5730  000F9C                     ;IR.c: 33: 
  5731                           	bsf	((c:3986)),c,4	;volatile
  5732  000F9C  8892               	line	37
  5733                           ;IR.c: 37: 
  5734                           	movlw	low(046h)
  5735  000F9E  0E46               	movwf	((c:3938)),c	;volatile
  5736  000FA0  6E62               	line	38
  5737                           ;IR.c: 38: 
  5738                           	movlw	low(046h)
  5739  000FA2  0E46               	movwf	((c:3937)),c	;volatile
  5740  000FA4  6E61               	line	42
  5741                           	movlw	low(011h)
  5742  000FA6  0E11               	movwf	((c:4023)),c	;volatile
  5743  000FA8  6EB7               	line	44
  5744                           	
  5745                           l289:
  5746  000FAA                     	return	;funcret
  5747  000FAA  0012               	opt stack 0
  5748                           GLOBAL	__end_of_initIR
  5749                           	__end_of_initIR:
  5750  000FAC                     	signat	_initIR,89
  5751                           	global	_initEusart
  5752                           
  5753 ;; *************** function _initEusart *****************
  5754 ;; Defined at:
  5755 ;;		line 16 in file "eusart.c"
  5756 ;; Parameters:    Size  Location     Type
  5757 ;;		None
  5758 ;; Auto vars:     Size  Location     Type
  5759 ;;		None
  5760 ;; Return value:  Size  Location     Type
  5761 ;;                  1    wreg      void 
  5762 ;; Registers used:
  5763 ;;		wreg, status,2
  5764 ;; Tracked objects:
  5765 ;;		On entry : 0/0
  5766 ;;		On exit  : 0/0
  5767 ;;		Unchanged: 0/0
  5768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5769 ;;      Params:         0       0       0       0
  5770 ;;      Locals:         0       0       0       0
  5771 ;;      Temps:          0       0       0       0
  5772 ;;      Totals:         0       0       0       0
  5773 ;;Total ram usage:        0 bytes
  5774 ;; Hardware stack levels used:    1
  5775 ;; Hardware stack levels required when called:    7
  5776 ;; This function calls:
  5777 ;;		Nothing
  5778 ;; This function is called by:
  5779 ;;		_main
  5780 ;; This function uses a non-reentrant model
  5781 ;;
  5782                           psect	text12,class=CODE,space=0,reloc=2,group=0
  5783                           	file	"eusart.c"
  5784                           	line	16
  5785                           global __ptext12
  5786                           __ptext12:
  5787  000FCA                     psect	text12
  5788                           	file	"eusart.c"
  5789                           	line	16
  5790                           	global	__size_of_initEusart
  5791                           	__size_of_initEusart	equ	__end_of_initEusart-_initEusart
  5792  0000                     	
  5793                           _initEusart:
  5794  000FCA                     ;incstack = 0
  5795                           	opt	stack 23
  5796                           	line	19
  5797                           	
  5798                           l1559:
  5799  000FCA                     ;eusart.c: 19:     LATCbits.LATC7=0;
  5800                           	bcf	((c:3979)),c,7	;volatile
  5801  000FCA  9E8B               	line	20
  5802                           ;eusart.c: 20:     TRISCbits.RC7=1;
  5803                           	bsf	((c:3988)),c,7	;volatile
  5804  000FCC  8E94               	line	22
  5805                           	
  5806                           l1561:
  5807  000FCE                     ;eusart.c: 22:     SPBRG=207;
  5808                           	movlw	low(0CFh)
  5809  000FCE  0ECF               	movwf	((c:4015)),c	;volatile
  5810  000FD0  6EAF               	line	23
  5811                           ;eusart.c: 23:     SPBRGH=0;
  5812                           	movlw	low(0)
  5813  000FD2  0E00               	movwf	((c:4016)),c	;volatile
  5814  000FD4  6EB0               	line	24
  5815                           	
  5816                           l1563:
  5817  000FD6                     ;eusart.c: 24:     BAUDCONbits.BRG16=1;
  5818                           	bsf	((c:4010)),c,3	;volatile
  5819  000FD6  86AA               	line	25
  5820                           	
  5821                           l1565:
  5822  000FD8                     ;eusart.c: 25:     TXSTAbits.BRGH=1;
  5823                           	bsf	((c:4012)),c,2	;volatile
  5824  000FD8  84AC               	line	26
  5825                           	
  5826                           l1567:
  5827  000FDA                     ;eusart.c: 26:     RCSTAbits.CREN=1;
  5828                           	bsf	((c:4011)),c,4	;volatile
  5829  000FDA  88AB               	line	27
  5830                           	
  5831                           l1569:
  5832  000FDC                     ;eusart.c: 27:     RCSTAbits.SPEN=1;
  5833                           	bsf	((c:4011)),c,7	;volatile
  5834  000FDC  8EAB               	line	28
  5835                           	
  5836                           l1571:
  5837  000FDE                     ;eusart.c: 28:     TXSTAbits.TXEN=0;
  5838                           	bcf	((c:4012)),c,5	;volatile
  5839  000FDE  9AAC               	line	29
  5840                           	
  5841                           l143:
  5842  000FE0                     	return	;funcret
  5843  000FE0  0012               	opt stack 0
  5844                           GLOBAL	__end_of_initEusart
  5845                           	__end_of_initEusart:
  5846  000FE2                     	signat	_initEusart,89
  5847                           	global	_findStrengths
  5848                           
  5849 ;; *************** function _findStrengths *****************
  5850 ;; Defined at:
  5851 ;;		line 50 in file "IR.c"
  5852 ;; Parameters:    Size  Location     Type
  5853 ;;  leftIR          2   18[COMRAM] PTR int 
  5854 ;;		 -> main@leftIR(2), 
  5855 ;;  rightIR         2   20[COMRAM] PTR int 
  5856 ;;		 -> main@rightIR(2), 
  5857 ;; Auto vars:     Size  Location     Type
  5858 ;;		None
  5859 ;; Return value:  Size  Location     Type
  5860 ;;                  1    wreg      void 
  5861 ;; Registers used:
  5862 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5868 ;;      Params:         4       0       0       0
  5869 ;;      Locals:         0       0       0       0
  5870 ;;      Temps:          4       0       0       0
  5871 ;;      Totals:         8       0       0       0
  5872 ;;Total ram usage:        8 bytes
  5873 ;; Hardware stack levels used:    1
  5874 ;; Hardware stack levels required when called:    7
  5875 ;; This function calls:
  5876 ;;		Nothing
  5877 ;; This function is called by:
  5878 ;;		_main
  5879 ;; This function uses a non-reentrant model
  5880 ;;
  5881                           psect	text13,class=CODE,space=0,reloc=2,group=0
  5882                           	file	"IR.c"
  5883                           	line	50
  5884                           global __ptext13
  5885                           __ptext13:
  5886  000E32                     psect	text13
  5887                           	file	"IR.c"
  5888                           	line	50
  5889                           	global	__size_of_findStrengths
  5890                           	__size_of_findStrengths	equ	__end_of_findStrengths-_findStrengths
  5891  0000                     	
  5892                           _findStrengths:
  5893  000E32                     ;incstack = 0
  5894                           	opt	stack 23
  5895                           	line	55
  5896                           	
  5897                           l1621:
  5898  000E32                     	movf	((c:3943)),c,w	;volatile
  5899  000E32  5067               	movwf	(??_findStrengths+0+0+1)&0ffh,c
  5900  000E34  6E18               	clrf	(??_findStrengths+0+0)&0ffh,c
  5901  000E36  6A17               	movf	((c:3942)),c,w	;volatile
  5902  000E38  5066               	movwf	(??_findStrengths+2+0)&0ffh,c
  5903  000E3A  6E19               	clrf	(??_findStrengths+2+0+1)&0ffh,c
  5904  000E3C  6A1A               
  5905                           	movf	(??_findStrengths+0+0),c,w
  5906  000E3E  5017               	iorwf	(??_findStrengths+2+0),c
  5907  000E40  1219               	movf	(??_findStrengths+0+1),c,w
  5908  000E42  5018               	iorwf	(??_findStrengths+2+1),c
  5909  000E44  121A               	movff	(c:findStrengths@leftIR),fsr2l
  5910  000E46  C013  FFD9         	movff	(c:findStrengths@leftIR+1),fsr2h
  5911  000E4A  C014  FFDA         	movff	??_findStrengths+2+0,postinc2
  5912  000E4E  C019  FFDE         	movff	??_findStrengths+2+1,postdec2
  5913  000E52  C01A  FFDD         
  5914                           	line	56
  5915                           	movf	((c:3941)),c,w	;volatile
  5916  000E56  5065               	movwf	(??_findStrengths+0+0+1)&0ffh,c
  5917  000E58  6E18               	clrf	(??_findStrengths+0+0)&0ffh,c
  5918  000E5A  6A17               	movf	((c:3940)),c,w	;volatile
  5919  000E5C  5064               	movwf	(??_findStrengths+2+0)&0ffh,c
  5920  000E5E  6E19               	clrf	(??_findStrengths+2+0+1)&0ffh,c
  5921  000E60  6A1A               
  5922                           	movf	(??_findStrengths+0+0),c,w
  5923  000E62  5017               	iorwf	(??_findStrengths+2+0),c
  5924  000E64  1219               	movf	(??_findStrengths+0+1),c,w
  5925  000E66  5018               	iorwf	(??_findStrengths+2+1),c
  5926  000E68  121A               	movff	(c:findStrengths@rightIR),fsr2l
  5927  000E6A  C015  FFD9         	movff	(c:findStrengths@rightIR+1),fsr2h
  5928  000E6E  C016  FFDA         	movff	??_findStrengths+2+0,postinc2
  5929  000E72  C019  FFDE         	movff	??_findStrengths+2+1,postdec2
  5930  000E76  C01A  FFDD         
  5931                           	line	57
  5932                           	
  5933                           l292:
  5934  000E7A                     	return	;funcret
  5935  000E7A  0012               	opt stack 0
  5936                           GLOBAL	__end_of_findStrengths
  5937                           	__end_of_findStrengths:
  5938  000E7C                     	signat	_findStrengths,8313
  5939                           	global	_my_lp_isr
  5940                           
  5941 ;; *************** function _my_lp_isr *****************
  5942 ;; Defined at:
  5943 ;;		line 275 in file "main.c"
  5944 ;; Parameters:    Size  Location     Type
  5945 ;;		None
  5946 ;; Auto vars:     Size  Location     Type
  5947 ;;		None
  5948 ;; Return value:  Size  Location     Type
  5949 ;;                  1    wreg      void 
  5950 ;; Registers used:
  5951 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5952 ;; Tracked objects:
  5953 ;;		On entry : 0/0
  5954 ;;		On exit  : 0/0
  5955 ;;		Unchanged: 0/0
  5956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5957 ;;      Params:         0       0       0       0
  5958 ;;      Locals:         0       0       0       0
  5959 ;;      Temps:          7       0       0       0
  5960 ;;      Totals:         7       0       0       0
  5961 ;;Total ram usage:        7 bytes
  5962 ;; Hardware stack levels used:    1
  5963 ;; Hardware stack levels required when called:    6
  5964 ;; This function calls:
  5965 ;;		_sendRFID
  5966 ;; This function is called by:
  5967 ;;		Interrupt level 1
  5968 ;; This function uses a non-reentrant model
  5969 ;;
  5970                           psect	intcodelo,class=CODE,space=0,reloc=2
  5971                           global __pintcodelo
  5972                           __pintcodelo:
  5973  000018                     psect	intcodelo
  5974                           	file	"main.c"
  5975                           	line	275
  5976                           	global	__size_of_my_lp_isr
  5977                           	__size_of_my_lp_isr	equ	__end_of_my_lp_isr-_my_lp_isr
  5978  0000                     	
  5979                           _my_lp_isr:
  5980  000018                     ;incstack = 0
  5981                           	opt	stack 20
  5982                           	bsf int$flags,0,c ;set compiler interrupt flag (level 1)
  5983  000018  8033               	movff	status+0,??_my_lp_isr+0
  5984  00001A  CFD8 F00C          	movff	wreg+0,??_my_lp_isr+1
  5985  00001E  CFE8 F00D          	movff	bsr+0,??_my_lp_isr+2
  5986  000022  CFE0 F00E          	movff	tblptrl+0,??_my_lp_isr+3
  5987  000026  CFF6 F00F          	movff	tblptrh+0,??_my_lp_isr+4
  5988  00002A  CFF7 F010          	movff	tblptru+0,??_my_lp_isr+5
  5989  00002E  CFF8 F011          	movff	tablat+0,??_my_lp_isr+6
  5990  000032  CFF5 F012          	line	277
  5991                           	
  5992                           i1l1843:
  5993  000036                     ;main.c: 277:             if (INTCON3bits.INT2IF) {
  5994                           	btfss	((c:4080)),c,1	;volatile
  5995  000036  A2F0               	goto	i1u101_21
  5996  000038  EF20  F000         	goto	i1u101_20
  5997  00003C  EF22  F000         i1u101_21:
  5998  000040                     	goto	i1l120
  5999  000040  EF38  F000         i1u101_20:
  6000  000044                     	line	279
  6001                           	
  6002                           i1l1845:
  6003  000044                     ;main.c: 279:                 if (RFIDread==0){
  6004                           	movlb	1	; () banked
  6005  000044  0101               	movf	((_RFIDread))&0ffh,w
  6006  000046  51CF               	btfss	status,2
  6007  000048  A4D8               	goto	i1u102_21
  6008  00004A  EF29  F000         	goto	i1u102_20
  6009  00004E  EF2B  F000         i1u102_21:
  6010  000052                     	goto	i1l1855
  6011  000052  EF35  F000         i1u102_20:
  6012  000056                     	line	280
  6013                           	
  6014                           i1l1847:; BSR set to: 1
  6015  000056                     
  6016                           ;main.c: 280:                 sendRFID();
  6017                           	call	_sendRFID	;wreg free
  6018  000056  ECBD  F004         	line	281
  6019                           	
  6020                           i1l1849:
  6021  00005A                     ;main.c: 281:                 IRsource=1;
  6022                           	movlw	low(01h)
  6023  00005A  0E01               	movlb	1	; () banked
  6024  00005C  0101               	movwf	((_IRsource))&0ffh
  6025  00005E  6FCE               	line	282
  6026                           	
  6027                           i1l1851:; BSR set to: 1
  6028  000060                     
  6029                           ;main.c: 282:                 RFIDread=1;
  6030                           	movlw	low(01h)
  6031  000060  0E01               	movwf	((_RFIDread))&0ffh
  6032  000062  6FCF               	line	283
  6033                           	
  6034                           i1l1853:; BSR set to: 1
  6035  000064                     
  6036                           ;main.c: 283:                 LATDbits.LATD2 = 1;
  6037                           	bsf	((c:3980)),c,2	;volatile
  6038  000064  848C               	goto	i1l1855
  6039  000066  EF35  F000         	line	284
  6040                           ;main.c: 284:                 }
  6041                           	
  6042                           i1l119:; BSR set to: 1
  6043  00006A                     
  6044                           	line	286
  6045                           	
  6046                           i1l1855:; BSR set to: 1
  6047  00006A                     
  6048                           ;main.c: 286:             INTCON3bits.INT2IF = 0;
  6049                           	bcf	((c:4080)),c,1	;volatile
  6050  00006A  92F0               	goto	i1l120
  6051  00006C  EF38  F000         	line	288
  6052                           ;main.c: 288:        }
  6053                           	
  6054                           i1l118:; BSR set to: 1
  6055  000070                     
  6056                           	line	289
  6057                           	
  6058                           i1l120:
  6059  000070                     	movff	??_my_lp_isr+6,tablat+0
  6060  000070  C012  FFF5         	movff	??_my_lp_isr+5,tblptru+0
  6061  000074  C011  FFF8         	movff	??_my_lp_isr+4,tblptrh+0
  6062  000078  C010  FFF7         	movff	??_my_lp_isr+3,tblptrl+0
  6063  00007C  C00F  FFF6         	movff	??_my_lp_isr+2,bsr+0
  6064  000080  C00E  FFE0         	movff	??_my_lp_isr+1,wreg+0
  6065  000084  C00D  FFE8         	movff	??_my_lp_isr+0,status+0
  6066  000088  C00C  FFD8         	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
  6067  00008C  9033               	retfie
  6068  00008E  0010               	opt stack 0
  6069                           GLOBAL	__end_of_my_lp_isr
  6070                           	__end_of_my_lp_isr:
  6071  000090                     	signat	_my_lp_isr,89
  6072                           	global	_sendRFID
  6073                           
  6074 ;; *************** function _sendRFID *****************
  6075 ;; Defined at:
  6076 ;;		line 15 in file "RFID.c"
  6077 ;; Parameters:    Size  Location     Type
  6078 ;;		None
  6079 ;; Auto vars:     Size  Location     Type
  6080 ;;		None
  6081 ;; Return value:  Size  Location     Type
  6082 ;;                  1    wreg      void 
  6083 ;; Registers used:
  6084 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6085 ;; Tracked objects:
  6086 ;;		On entry : 0/0
  6087 ;;		On exit  : 0/0
  6088 ;;		Unchanged: 0/0
  6089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6090 ;;      Params:         0       0       0       0
  6091 ;;      Locals:         0       0       0       0
  6092 ;;      Temps:          0       0       0       0
  6093 ;;      Totals:         0       0       0       0
  6094 ;;Total ram usage:        0 bytes
  6095 ;; Hardware stack levels used:    1
  6096 ;; Hardware stack levels required when called:    5
  6097 ;; This function calls:
  6098 ;;		_LCD_String
  6099 ;;		_SetLine
  6100 ;;		_getCharSerial
  6101 ;;		i1_SendLCD
  6102 ;; This function is called by:
  6103 ;;		_my_lp_isr
  6104 ;; This function uses a non-reentrant model
  6105 ;;
  6106                           psect	text15,class=CODE,space=0,reloc=2,group=0
  6107                           	file	"RFID.c"
  6108                           	line	15
  6109                           global __ptext15
  6110                           __ptext15:
  6111  00097A                     psect	text15
  6112                           	file	"RFID.c"
  6113                           	line	15
  6114                           	global	__size_of_sendRFID
  6115                           	__size_of_sendRFID	equ	__end_of_sendRFID-_sendRFID
  6116  0000                     	
  6117                           _sendRFID:
  6118  00097A                     ;incstack = 0
  6119                           	opt	stack 20
  6120                           	line	18
  6121                           	
  6122                           i1l1623:
  6123  00097A                     ;RFID.c: 18:     a= getCharSerial();
  6124                           	call	_getCharSerial	;wreg free
  6125  00097A  ECD6  F007         	movwf	((c:_a)),c
  6126  00097E  6E2E               	line	19
  6127                           	
  6128                           i1l1625:
  6129  000980                     ;RFID.c: 19:                 if (a == 0x02) {
  6130                           		movlw	2
  6131  000980  0E02               	xorwf	((c:_a)),c,w
  6132  000982  182E               	btfss	status,2
  6133  000984  A4D8               	goto	i1u69_21
  6134  000986  EFC7  F004         	goto	i1u69_20
  6135  00098A  EFC9  F004         
  6136                           i1u69_21:
  6137  00098E                     	goto	i1l325
  6138  00098E  EF50  F005         i1u69_20:
  6139  000992                     	goto	i1l1669
  6140  000992  EF43  F005         	line	20
  6141                           	
  6142                           i1l1627:
  6143  000996                     ;RFID.c: 20:                     while (a != 0x03) {
  6144                           	goto	i1l1669
  6145  000996  EF43  F005         	
  6146                           i1l313:
  6147  00099A                     	line	21
  6148                           	
  6149                           i1l1629:
  6150  00099A                     ;RFID.c: 21:                         a = getCharSerial();
  6151                           	call	_getCharSerial	;wreg free
  6152  00099A  ECD6  F007         	movwf	((c:_a)),c
  6153  00099E  6E2E               	line	22
  6154                           	
  6155                           i1l1631:
  6156  0009A0                     ;RFID.c: 22:                         if (index <= 12) {
  6157                           		movlw	0Dh-0
  6158  0009A0  0E0D               	cpfslt	((c:_index)),c
  6159  0009A2  6032               	goto	i1u70_21
  6160  0009A4  EFD6  F004         	goto	i1u70_20
  6161  0009A8  EFD8  F004         
  6162                           i1u70_21:
  6163  0009AC                     	goto	i1l1669
  6164  0009AC  EF43  F005         i1u70_20:
  6165  0009B0                     	line	23
  6166                           	
  6167                           i1l1633:
  6168  0009B0                     ;RFID.c: 23:                             SendLCD(a, 1);
  6169                           	movlw	low(01h)
  6170  0009B0  0E01               	movwf	((c:i1SendLCD@type)),c
  6171  0009B2  6E05               	movf	((c:_a)),c,w
  6172  0009B4  502E               	
  6173                           	call	i1_SendLCD
  6174  0009B6  EC96  F007         	line	24
  6175                           	
  6176                           i1l1635:
  6177  0009BA                     ;RFID.c: 24:                             if (a > 64) {
  6178                           		movlw	041h-1
  6179  0009BA  0E40               	cpfsgt	((c:_a)),c
  6180  0009BC  642E               	goto	i1u71_21
  6181  0009BE  EFE3  F004         	goto	i1u71_20
  6182  0009C2  EFE5  F004         
  6183                           i1u71_21:
  6184  0009C6                     	goto	i1l1639
  6185  0009C6  EFEA  F004         i1u71_20:
  6186  0009CA                     	line	25
  6187                           	
  6188                           i1l1637:
  6189  0009CA                     ;RFID.c: 25:                                 a = a - 55;
  6190                           	movf	((c:_a)),c,w
  6191  0009CA  502E               	addlw	low(0C9h)
  6192  0009CC  0FC9               	movwf	((c:_a)),c
  6193  0009CE  6E2E               	line	26
  6194                           ;RFID.c: 26:                             } else {
  6195                           	goto	i1l316
  6196  0009D0  EFED  F004         	
  6197                           i1l315:
  6198  0009D4                     	line	27
  6199                           	
  6200                           i1l1639:
  6201  0009D4                     ;RFID.c: 27:                                 a=a^(0b110000);
  6202                           	movf	((c:_a)),c,w
  6203  0009D4  502E               	xorlw	low(030h)
  6204  0009D6  0A30               	movwf	((c:_a)),c
  6205  0009D8  6E2E               	line	30
  6206                           ;RFID.c: 30:                             }
  6207                           	
  6208                           i1l316:
  6209  0009DA                     	line	31
  6210                           ;RFID.c: 31:                             currentVal = (a | currentVal);
  6211                           	movf	((c:_a)),c,w
  6212  0009DA  502E               	iorwf	((c:_currentVal)),c,w
  6213  0009DC  1030               	movwf	((c:_currentVal)),c
  6214  0009DE  6E30               	line	32
  6215                           	
  6216                           i1l1641:
  6217  0009E0                     ;RFID.c: 32:                             if (index % 2 == 1) {
  6218                           	
  6219                           	btfss	((c:_index)),c,(0)&7
  6220  0009E0  A032               	goto	i1u72_21
  6221  0009E2  EFF5  F004         	goto	i1u72_20
  6222  0009E6  EFF7  F004         i1u72_21:
  6223  0009EA                     	goto	i1l1645
  6224  0009EA  EFFC  F004         i1u72_20:
  6225  0009EE                     	line	37
  6226                           	
  6227                           i1l1643:
  6228  0009EE                     ;RFID.c: 37:                                 currentVal = currentVal << 4;
  6229                           	swapf	((c:_currentVal)),c,w
  6230  0009EE  3830               	andlw	(0ffh shl 4) & 0ffh
  6231  0009F0  0BF0               	movwf	((c:_currentVal)),c
  6232  0009F2  6E30               	line	38
  6233                           ;RFID.c: 38:                             } else {
  6234                           	goto	i1l1661
  6235  0009F4  EF2E  F005         	
  6236                           i1l317:
  6237  0009F8                     	line	39
  6238                           	
  6239                           i1l1645:
  6240  0009F8                     ;RFID.c: 39:                                 if (index < 11) {
  6241                           		movlw	0Bh-0
  6242  0009F8  0E0B               	cpfslt	((c:_index)),c
  6243  0009FA  6032               	goto	i1u73_21
  6244  0009FC  EF02  F005         	goto	i1u73_20
  6245  000A00  EF04  F005         
  6246                           i1u73_21:
  6247  000A04                     	goto	i1l1649
  6248  000A04  EF09  F005         i1u73_20:
  6249  000A08                     	line	40
  6250                           	
  6251                           i1l1647:
  6252  000A08                     ;RFID.c: 40:                                     checkSum = checkSum^currentVal;
  6253                           	movf	((c:_checkSum)),c,w
  6254  000A08  502F               	xorwf	((c:_currentVal)),c,w
  6255  000A0A  1830               	movwf	((c:_checkSum)),c
  6256  000A0C  6E2F               	line	42
  6257                           ;RFID.c: 42:                                 } else {
  6258                           	goto	i1l1659
  6259  000A0E  EF2A  F005         	
  6260                           i1l319:
  6261  000A12                     	line	43
  6262                           	
  6263                           i1l1649:
  6264  000A12                     ;RFID.c: 43:                                     if (checkSum == currentVal) {
  6265                           	movf	((c:_currentVal)),c,w
  6266  000A12  5030               xorwf	((c:_checkSum)),c,w
  6267  000A14  182F               	btfss	status,2
  6268  000A16  A4D8               	goto	i1u74_21
  6269  000A18  EF10  F005         	goto	i1u74_20
  6270  000A1C  EF12  F005         
  6271                           i1u74_21:
  6272  000A20                     	goto	i1l1655
  6273  000A20  EF1D  F005         i1u74_20:
  6274  000A24                     	line	44
  6275                           	
  6276                           i1l1651:
  6277  000A24                     ;RFID.c: 44:                                         SetLine(2);
  6278                           	movlw	(02h)&0ffh
  6279  000A24  0E02               	
  6280                           	call	_SetLine
  6281  000A26  ECCD  F006         	line	45
  6282                           	
  6283                           i1l1653:
  6284  000A2A                     ;RFID.c: 45:                                         LCD_String("Match");
  6285                           		movlw	low(STR_1)
  6286  000A2A  0E04               	movwf	((c:LCD_String@string)),c
  6287  000A2C  6E09               	movlw	high(STR_1)
  6288  000A2E  0E03               	movwf	((c:LCD_String@string+1)),c
  6289  000A30  6E0A               
  6290                           	call	_LCD_String	;wreg free
  6291  000A32  ECA5  F006         	line	46
  6292                           ;RFID.c: 46:                                     } else {
  6293                           	goto	i1l1659
  6294  000A36  EF2A  F005         	
  6295                           i1l321:
  6296  000A3A                     	line	47
  6297                           	
  6298                           i1l1655:
  6299  000A3A                     ;RFID.c: 47:                                         SetLine(2);
  6300                           	movlw	(02h)&0ffh
  6301  000A3A  0E02               	
  6302                           	call	_SetLine
  6303  000A3C  ECCD  F006         	line	48
  6304                           	
  6305                           i1l1657:
  6306  000A40                     ;RFID.c: 48:                                         LCD_String("No Match");
  6307                           		movlw	low(STR_2)
  6308  000A40  0E01               	movwf	((c:LCD_String@string)),c
  6309  000A42  6E09               	movlw	high(STR_2)
  6310  000A44  0E03               	movwf	((c:LCD_String@string+1)),c
  6311  000A46  6E0A               
  6312                           	call	_LCD_String	;wreg free
  6313  000A48  ECA5  F006         	goto	i1l1659
  6314  000A4C  EF2A  F005         	line	49
  6315                           ;RFID.c: 49:                                     }
  6316                           	
  6317                           i1l322:
  6318  000A50                     	goto	i1l1659
  6319  000A50  EF2A  F005         	line	51
  6320                           ;RFID.c: 51:                                 }
  6321                           	
  6322                           i1l320:
  6323  000A54                     	line	52
  6324                           	
  6325                           i1l1659:
  6326  000A54                     ;RFID.c: 52:                                 currentVal = 0;
  6327                           	movlw	low(0)
  6328  000A54  0E00               	movwf	((c:_currentVal)),c
  6329  000A56  6E30               	goto	i1l1661
  6330  000A58  EF2E  F005         	line	53
  6331                           ;RFID.c: 53:                             }
  6332                           	
  6333                           i1l318:
  6334  000A5C                     	line	54
  6335                           	
  6336                           i1l1661:
  6337  000A5C                     ;RFID.c: 54:                             index = index + 1;
  6338                           	incf	((c:_index)),c,w
  6339  000A5C  2832               	movwf	((c:_index)),c
  6340  000A5E  6E32               	line	55
  6341                           	
  6342                           i1l1663:
  6343  000A60                     ;RFID.c: 55:                             a=0;
  6344                           	movlw	low(0)
  6345  000A60  0E00               	movwf	((c:_a)),c
  6346  000A62  6E2E               	line	56
  6347                           	
  6348                           i1l1665:
  6349  000A64                     ;RFID.c: 56:                             if (index==13) {
  6350                           		movlw	13
  6351  000A64  0E0D               	xorwf	((c:_index)),c,w
  6352  000A66  1832               	btfss	status,2
  6353  000A68  A4D8               	goto	i1u75_21
  6354  000A6A  EF39  F005         	goto	i1u75_20
  6355  000A6E  EF3B  F005         
  6356                           i1u75_21:
  6357  000A72                     	goto	i1l1669
  6358  000A72  EF43  F005         i1u75_20:
  6359  000A76                     	line	57
  6360                           	
  6361                           i1l1667:
  6362  000A76                     ;RFID.c: 57:                                 a=0x03;
  6363                           	movlw	low(03h)
  6364  000A76  0E03               	movwf	((c:_a)),c
  6365  000A78  6E2E               	goto	i1l1669
  6366  000A7A  EF43  F005         	line	59
  6367                           ;RFID.c: 59:                             }
  6368                           	
  6369                           i1l323:
  6370  000A7E                     	goto	i1l1669
  6371  000A7E  EF43  F005         	line	60
  6372                           ;RFID.c: 60:                         }
  6373                           	
  6374                           i1l314:
  6375  000A82                     	goto	i1l1669
  6376  000A82  EF43  F005         	line	61
  6377                           ;RFID.c: 61:                     }
  6378                           	
  6379                           i1l312:
  6380  000A86                     	line	20
  6381                           	
  6382                           i1l1669:
  6383  000A86                     ;RFID.c: 20:                     while (a != 0x03) {
  6384                           		movlw	3
  6385  000A86  0E03               	xorwf	((c:_a)),c,w
  6386  000A88  182E               	btfss	status,2
  6387  000A8A  A4D8               	goto	i1u76_21
  6388  000A8C  EF4A  F005         	goto	i1u76_20
  6389  000A90  EF4C  F005         
  6390                           i1u76_21:
  6391  000A94                     	goto	i1l1629
  6392  000A94  EFCD  F004         i1u76_20:
  6393  000A98                     	goto	i1l325
  6394  000A98  EF50  F005         	
  6395                           i1l324:
  6396  000A9C                     	goto	i1l325
  6397  000A9C  EF50  F005         	line	62
  6398                           ;RFID.c: 62:                 }
  6399                           	
  6400                           i1l311:
  6401  000AA0                     	line	63
  6402                           	
  6403                           i1l325:
  6404  000AA0                     	return	;funcret
  6405  000AA0  0012               	opt stack 0
  6406                           GLOBAL	__end_of_sendRFID
  6407                           	__end_of_sendRFID:
  6408  000AA2                     	signat	_sendRFID,89
  6409                           	global	_getCharSerial
  6410                           
  6411 ;; *************** function _getCharSerial *****************
  6412 ;; Defined at:
  6413 ;;		line 36 in file "eusart.c"
  6414 ;; Parameters:    Size  Location     Type
  6415 ;;		None
  6416 ;; Auto vars:     Size  Location     Type
  6417 ;;		None
  6418 ;; Return value:  Size  Location     Type
  6419 ;;                  1    wreg      unsigned char 
  6420 ;; Registers used:
  6421 ;;		wreg, status,2
  6422 ;; Tracked objects:
  6423 ;;		On entry : 0/0
  6424 ;;		On exit  : 0/0
  6425 ;;		Unchanged: 0/0
  6426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6427 ;;      Params:         0       0       0       0
  6428 ;;      Locals:         0       0       0       0
  6429 ;;      Temps:          0       0       0       0
  6430 ;;      Totals:         0       0       0       0
  6431 ;;Total ram usage:        0 bytes
  6432 ;; Hardware stack levels used:    1
  6433 ;; Hardware stack levels required when called:    1
  6434 ;; This function calls:
  6435 ;;		Nothing
  6436 ;; This function is called by:
  6437 ;;		_sendRFID
  6438 ;; This function uses a non-reentrant model
  6439 ;;
  6440                           psect	text16,class=CODE,space=0,reloc=2,group=0
  6441                           	file	"eusart.c"
  6442                           	line	36
  6443                           global __ptext16
  6444                           __ptext16:
  6445  000FAC                     psect	text16
  6446                           	file	"eusart.c"
  6447                           	line	36
  6448                           	global	__size_of_getCharSerial
  6449                           	__size_of_getCharSerial	equ	__end_of_getCharSerial-_getCharSerial
  6450  0000                     	
  6451                           _getCharSerial:
  6452  000FAC                     ;incstack = 0
  6453                           	opt	stack 23
  6454                           	line	37
  6455                           	
  6456                           i1l1509:
  6457  000FAC                     ;eusart.c: 37:     while(!PIR1bits.RCIF);
  6458                           	goto	i1l146
  6459  000FAC  EFD8  F007         	
  6460                           i1l147:
  6461  000FB0                     	
  6462                           i1l146:
  6463  000FB0                     	btfss	((c:3998)),c,5	;volatile
  6464  000FB0  AA9E               	goto	i1u63_21
  6465  000FB2  EFDD  F007         	goto	i1u63_20
  6466  000FB6  EFDF  F007         i1u63_21:
  6467  000FBA                     	goto	i1l146
  6468  000FBA  EFD8  F007         i1u63_20:
  6469  000FBE                     	goto	i1l1511
  6470  000FBE  EFE1  F007         	
  6471                           i1l148:
  6472  000FC2                     	line	38
  6473                           	
  6474                           i1l1511:
  6475  000FC2                     ;eusart.c: 38:     return RCREG;
  6476                           	movf	((c:4014)),c,w	;volatile
  6477  000FC2  50AE               	goto	i1l149
  6478  000FC4  EFE4  F007         	
  6479                           i1l1513:
  6480  000FC8                     	line	39
  6481                           	
  6482                           i1l149:
  6483  000FC8                     	return	;funcret
  6484  000FC8  0012               	opt stack 0
  6485                           GLOBAL	__end_of_getCharSerial
  6486                           	__end_of_getCharSerial:
  6487  000FCA                     	signat	_getCharSerial,89
  6488                           	global	_SetLine
  6489                           
  6490 ;; *************** function _SetLine *****************
  6491 ;; Defined at:
  6492 ;;		line 127 in file "LCD.c"
  6493 ;; Parameters:    Size  Location     Type
  6494 ;;  line            1    wreg     unsigned char 
  6495 ;; Auto vars:     Size  Location     Type
  6496 ;;  line            1    8[COMRAM] unsigned char 
  6497 ;; Return value:  Size  Location     Type
  6498 ;;                  1    wreg      void 
  6499 ;; Registers used:
  6500 ;;		wreg, status,2, status,0, cstack
  6501 ;; Tracked objects:
  6502 ;;		On entry : 0/0
  6503 ;;		On exit  : 0/0
  6504 ;;		Unchanged: 0/0
  6505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6506 ;;      Params:         0       0       0       0
  6507 ;;      Locals:         1       0       0       0
  6508 ;;      Temps:          0       0       0       0
  6509 ;;      Totals:         1       0       0       0
  6510 ;;Total ram usage:        1 bytes
  6511 ;; Hardware stack levels used:    1
  6512 ;; Hardware stack levels required when called:    4
  6513 ;; This function calls:
  6514 ;;		i1_SendLCD
  6515 ;; This function is called by:
  6516 ;;		_sendRFID
  6517 ;; This function uses a non-reentrant model
  6518 ;;
  6519                           psect	text17,class=CODE,space=0,reloc=2,group=0
  6520                           	file	"LCD.c"
  6521                           	line	127
  6522                           global __ptext17
  6523                           __ptext17:
  6524  000D9A                     psect	text17
  6525                           	file	"LCD.c"
  6526                           	line	127
  6527                           	global	__size_of_SetLine
  6528                           	__size_of_SetLine	equ	__end_of_SetLine-_SetLine
  6529  0000                     	
  6530                           _SetLine:
  6531  000D9A                     ;incstack = 0
  6532                           	opt	stack 20
  6533                           ;SetLine@line stored from wreg
  6534                           	movwf	((c:SetLine@line)),c
  6535  000D9A  6E09               	line	128
  6536                           	
  6537                           i1l1539:
  6538  000D9C                     ;LCD.c: 128: }
  6539                           		decf	((c:SetLine@line)),c,w
  6540  000D9C  0409               	btfss	status,2
  6541  000D9E  A4D8               	goto	i1u66_21
  6542  000DA0  EFD4  F006         	goto	i1u66_20
  6543  000DA4  EFD6  F006         
  6544                           i1u66_21:
  6545  000DA8                     	goto	i1l1543
  6546  000DA8  EFDD  F006         i1u66_20:
  6547  000DAC                     	line	129
  6548                           	
  6549                           i1l1541:
  6550  000DAC                     	movlw	low(0)
  6551  000DAC  0E00               	movwf	((c:i1SendLCD@type)),c
  6552  000DAE  6E05               	movlw	(080h)&0ffh
  6553  000DB0  0E80               	
  6554                           	call	i1_SendLCD
  6555  000DB2  EC96  F007         	line	130
  6556                           	goto	i1l1547
  6557  000DB6  EFEF  F006         	
  6558                           i1l255:
  6559  000DBA                     	
  6560                           i1l1543:
  6561  000DBA                     		movlw	2
  6562  000DBA  0E02               	xorwf	((c:SetLine@line)),c,w
  6563  000DBC  1809               	btfss	status,2
  6564  000DBE  A4D8               	goto	i1u67_21
  6565  000DC0  EFE4  F006         	goto	i1u67_20
  6566  000DC4  EFE6  F006         
  6567                           i1u67_21:
  6568  000DC8                     	goto	i1l1547
  6569  000DC8  EFEF  F006         i1u67_20:
  6570  000DCC                     	line	131
  6571                           	
  6572                           i1l1545:
  6573  000DCC                     	movlw	low(0)
  6574  000DCC  0E00               	movwf	((c:i1SendLCD@type)),c
  6575  000DCE  6E05               	movlw	(0C0h)&0ffh
  6576  000DD0  0EC0               	
  6577                           	call	i1_SendLCD
  6578  000DD2  EC96  F007         	goto	i1l1547
  6579  000DD6  EFEF  F006         	line	132
  6580                           	
  6581                           i1l257:
  6582  000DDA                     	goto	i1l1547
  6583  000DDA  EFEF  F006         	
  6584                           i1l256:
  6585  000DDE                     	line	134
  6586                           	
  6587                           i1l1547:
  6588  000DDE                     	opt asmopt_push
  6589                           opt asmopt_off
  6590                           	movlw	33
  6591  000DDE  0E21               i1u119_27:
  6592  000DE0                     decfsz	wreg,f
  6593  000DE0  2EE8               	bra	i1u119_27
  6594  000DE2  D7FE               	nop
  6595  000DE4  F000               opt asmopt_pop
  6596                           
  6597                           	line	135
  6598                           	
  6599                           i1l258:
  6600  000DE6                     	return	;funcret
  6601  000DE6  0012               	opt stack 0
  6602                           GLOBAL	__end_of_SetLine
  6603                           	__end_of_SetLine:
  6604  000DE8                     	signat	_SetLine,4217
  6605                           	global	_LCD_String
  6606                           
  6607 ;; *************** function _LCD_String *****************
  6608 ;; Defined at:
  6609 ;;		line 140 in file "LCD.c"
  6610 ;; Parameters:    Size  Location     Type
  6611 ;;  string          2    8[COMRAM] PTR unsigned char 
  6612 ;;		 -> STR_2(9), STR_1(6), 
  6613 ;; Auto vars:     Size  Location     Type
  6614 ;;		None
  6615 ;; Return value:  Size  Location     Type
  6616 ;;                  1    wreg      void 
  6617 ;; Registers used:
  6618 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6619 ;; Tracked objects:
  6620 ;;		On entry : 0/0
  6621 ;;		On exit  : 0/0
  6622 ;;		Unchanged: 0/0
  6623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6624 ;;      Params:         2       0       0       0
  6625 ;;      Locals:         0       0       0       0
  6626 ;;      Temps:          1       0       0       0
  6627 ;;      Totals:         3       0       0       0
  6628 ;;Total ram usage:        3 bytes
  6629 ;; Hardware stack levels used:    1
  6630 ;; Hardware stack levels required when called:    4
  6631 ;; This function calls:
  6632 ;;		i1_SendLCD
  6633 ;; This function is called by:
  6634 ;;		_sendRFID
  6635 ;; This function uses a non-reentrant model
  6636 ;;
  6637                           psect	text18,class=CODE,space=0,reloc=2,group=0
  6638                           	line	140
  6639                           global __ptext18
  6640                           __ptext18:
  6641  000D4A                     psect	text18
  6642                           	file	"LCD.c"
  6643                           	line	140
  6644                           	global	__size_of_LCD_String
  6645                           	__size_of_LCD_String	equ	__end_of_LCD_String-_LCD_String
  6646  0000                     	
  6647                           _LCD_String:
  6648  000D4A                     ;incstack = 0
  6649                           	opt	stack 20
  6650                           	line	141
  6651                           	
  6652                           i1l1549:
  6653  000D4A                     	goto	i1l1557
  6654  000D4A  EFBC  F006         	
  6655                           i1l262:
  6656  000D4E                     	line	142
  6657                           	
  6658                           i1l1551:
  6659  000D4E                     	movlw	low(01h)
  6660  000D4E  0E01               	movwf	((c:i1SendLCD@type)),c
  6661  000D50  6E05               	movff	(c:LCD_String@string),tblptrl
  6662  000D52  C009  FFF6         	movff	(c:LCD_String@string+1),tblptrh
  6663  000D56  C00A  FFF7         	if	0	;tblptru may be non-zero
  6664  000D5A                     	clrf	tblptru
  6666  000D5A                     	if	0	;tblptru may be non-zero
  6667  000D5A                     	global __mediumconst
  6668                           movlw	low highword(__mediumconst)
  6671  000D5A                     	tblrd	*
  6672  000D5A  0008               	
  6673                           	movf	tablat,w
  6674  000D5C  50F5               	
  6675                           	call	i1_SendLCD
  6676  000D5E  EC96  F007         	
  6677                           i1l1553:
  6678  000D62                     	infsnz	((c:LCD_String@string)),c
  6679  000D62  4A09               	incf	((c:LCD_String@string+1)),c
  6680  000D64  2A0A               	line	143
  6681                           	
  6682                           i1l1555:
  6683  000D66                     	opt asmopt_push
  6684                           opt asmopt_off
  6685                           movlw	130
  6686  000D66  0E82               movwf	(??_LCD_String+0+0)&0ffh,c,f
  6687  000D68  6E0B               	movlw	222
  6688  000D6A  0EDE               i1u120_27:
  6689  000D6C                     decfsz	wreg,f
  6690  000D6C  2EE8               	bra	i1u120_27
  6691  000D6E  D7FE               	decfsz	(??_LCD_String+0+0)&0ffh,c,f
  6692  000D70  2E0B               	bra	i1u120_27
  6693  000D72  D7FC               opt asmopt_pop
  6694                           
  6695                           	goto	i1l1557
  6696  000D74  EFBC  F006         	line	145
  6697                           	
  6698                           i1l261:
  6699  000D78                     	line	141
  6700                           	
  6701                           i1l1557:
  6702  000D78                     	movff	(c:LCD_String@string),tblptrl
  6703  000D78  C009  FFF6         	movff	(c:LCD_String@string+1),tblptrh
  6704  000D7C  C00A  FFF7         	if	0	;tblptru may be non-zero
  6705  000D80                     	clrf	tblptru
  6707  000D80                     	if	0	;tblptru may be non-zero
  6708  000D80                     	global __mediumconst
  6709                           movlw	low highword(__mediumconst)
  6712  000D80                     	tblrd	*
  6713  000D80  0008               	
  6714                           	movf	tablat,w
  6715  000D82  50F5               	iorlw	0
  6716  000D84  0900               	btfss	status,2
  6717  000D86  A4D8               	goto	i1u68_21
  6718  000D88  EFC8  F006         	goto	i1u68_20
  6719  000D8C  EFCA  F006         i1u68_21:
  6720  000D90                     	goto	i1l1551
  6721  000D90  EFA7  F006         i1u68_20:
  6722  000D94                     	goto	i1l264
  6723  000D94  EFCC  F006         	
  6724                           i1l263:
  6725  000D98                     	line	146
  6726                           	
  6727                           i1l264:
  6728  000D98                     	return	;funcret
  6729  000D98  0012               	opt stack 0
  6730                           GLOBAL	__end_of_LCD_String
  6731                           	__end_of_LCD_String:
  6732  000D9A                     	signat	_LCD_String,4217
  6733                           	global	i1_SendLCD
  6734                           
  6735 ;; *************** function i1_SendLCD *****************
  6736 ;; Defined at:
  6737 ;;		line 49 in file "LCD.c"
  6738 ;; Parameters:    Size  Location     Type
  6739 ;;  Byte            1    wreg     unsigned char 
  6740 ;;  type            1    4[COMRAM] unsigned char 
  6741 ;; Auto vars:     Size  Location     Type
  6742 ;;  Byte            1    7[COMRAM] unsigned char 
  6743 ;;  SendLCD         1    6[COMRAM] unsigned char 
  6744 ;;  SendLCD         1    5[COMRAM] unsigned char 
  6745 ;; Return value:  Size  Location     Type
  6746 ;;                  1    wreg      void 
  6747 ;; Registers used:
  6748 ;;		wreg, status,2, status,0, cstack
  6749 ;; Tracked objects:
  6750 ;;		On entry : 0/0
  6751 ;;		On exit  : 0/0
  6752 ;;		Unchanged: 0/0
  6753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6754 ;;      Params:         1       0       0       0
  6755 ;;      Locals:         3       0       0       0
  6756 ;;      Temps:          0       0       0       0
  6757 ;;      Totals:         4       0       0       0
  6758 ;;Total ram usage:        4 bytes
  6759 ;; Hardware stack levels used:    1
  6760 ;; Hardware stack levels required when called:    3
  6761 ;; This function calls:
  6762 ;;		i1_LCDout
  6763 ;; This function is called by:
  6764 ;;		_SetLine
  6765 ;;		_LCD_String
  6766 ;;		_sendRFID
  6767 ;; This function uses a non-reentrant model
  6768 ;;
  6769                           psect	text19,class=CODE,space=0,reloc=2,group=0
  6770                           	line	49
  6771                           global __ptext19
  6772                           __ptext19:
  6773  000F2C                     psect	text19
  6774                           	file	"LCD.c"
  6775                           	line	49
  6776                           	global	__size_ofi1_SendLCD
  6777                           	__size_ofi1_SendLCD	equ	__end_ofi1_SendLCD-i1_SendLCD
  6778  0000                     	
  6779                           i1_SendLCD:
  6780  000F2C                     ;incstack = 0
  6781                           	opt	stack 21
  6782                           ;i1SendLCD@Byte stored from wreg
  6783                           	movwf	((c:i1SendLCD@Byte)),c
  6784  000F2C  6E08               	line	52
  6785                           	
  6786                           i1l1485:
  6787  000F2E                     ;LCD.c: 52: void initLCD(void){
  6788                           	btfsc	(c:i1SendLCD@type),c,0
  6789  000F2E  B005               	bra	i1u61_25
  6790  000F30  D002               	bcf	((c:3977)),c,6	;volatile
  6791  000F32  9C89               	bra	i1u61_26
  6792  000F34  D001               	i1u61_25:
  6793  000F36                     	bsf	((c:3977)),c,6	;volatile
  6794  000F36  8C89               	i1u61_26:
  6795  000F38                     
  6796                           	line	54
  6797                           	
  6798                           i1l1487:
  6799  000F38                     ;LCD.c: 54: 
  6800                           	movf	((c:i1SendLCD@Byte)),c,w
  6801  000F38  5008               	andlw	low(0F0h)
  6802  000F3A  0BF0               	movwf	((c:i1SendLCD@HighBits)),c
  6803  000F3C  6E06               	line	55
  6804                           ;LCD.c: 55:     LATAbits.LATA6=0;
  6805                           	movf	((c:i1SendLCD@Byte)),c,w
  6806  000F3E  5008               	andlw	low(0Fh)
  6807  000F40  0B0F               	movwf	((c:i1SendLCD@LowBits)),c
  6808  000F42  6E07               	line	58
  6809                           	
  6810                           i1l1489:
  6811  000F44                     ;LCD.c: 58:     LATCbits.LATC0 =0;
  6812                           	swapf	((c:i1SendLCD@HighBits)),c,w
  6813  000F44  3806               	andlw	(0ffh shr 4) & 0ffh
  6814  000F46  0B0F               	
  6815                           	call	i1_LCDout
  6816  000F48  EC5C  F007         	line	59
  6817                           	
  6818                           i1l1491:
  6819  000F4C                     ;LCD.c: 59:     TRISCbits.RC0=0;
  6820                           	opt asmopt_push
  6821                           opt asmopt_off
  6822                           	movlw	6
  6823  000F4C  0E06               i1u121_27:
  6824  000F4E                     decfsz	wreg,f
  6825  000F4E  2EE8               	bra	i1u121_27
  6826  000F50  D7FE               	nop2
  6827  000F52  D000               opt asmopt_pop
  6828                           
  6829                           	line	62
  6830                           	
  6831                           i1l1493:
  6832  000F54                     ;LCD.c: 62:     TRISCbits.RC1=0;
  6833                           	movf	((c:i1SendLCD@LowBits)),c,w
  6834  000F54  5007               	
  6835                           	call	i1_LCDout
  6836  000F56  EC5C  F007         	line	63
  6837                           	
  6838                           i1l1495:
  6839  000F5A                     ;LCD.c: 63: 
  6840                           	opt asmopt_push
  6841                           opt asmopt_off
  6842                           	movlw	6
  6843  000F5A  0E06               i1u122_27:
  6844  000F5C                     decfsz	wreg,f
  6845  000F5C  2EE8               	bra	i1u122_27
  6846  000F5E  D7FE               	nop2
  6847  000F60  D000               opt asmopt_pop
  6848                           
  6849                           	line	65
  6850                           	
  6851                           i1l249:
  6852  000F62                     	return	;funcret
  6853  000F62  0012               	opt stack 0
  6854                           GLOBAL	__end_ofi1_SendLCD
  6855                           	__end_ofi1_SendLCD:
  6856  000F64                     	signat	i1_SendLCD,89
  6857                           	global	i1_LCDout
  6858                           
  6859 ;; *************** function i1_LCDout *****************
  6860 ;; Defined at:
  6861 ;;		line 34 in file "LCD.c"
  6862 ;; Parameters:    Size  Location     Type
  6863 ;;  number          1    wreg     unsigned char 
  6864 ;; Auto vars:     Size  Location     Type
  6865 ;;  number          1    3[COMRAM] unsigned char 
  6866 ;; Return value:  Size  Location     Type
  6867 ;;                  1    wreg      void 
  6868 ;; Registers used:
  6869 ;;		wreg, status,2, status,0, cstack
  6870 ;; Tracked objects:
  6871 ;;		On entry : 0/0
  6872 ;;		On exit  : 0/0
  6873 ;;		Unchanged: 0/0
  6874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6875 ;;      Params:         0       0       0       0
  6876 ;;      Locals:         1       0       0       0
  6877 ;;      Temps:          2       0       0       0
  6878 ;;      Totals:         3       0       0       0
  6879 ;;Total ram usage:        3 bytes
  6880 ;; Hardware stack levels used:    1
  6881 ;; Hardware stack levels required when called:    2
  6882 ;; This function calls:
  6883 ;;		i1_E_TOG
  6884 ;; This function is called by:
  6885 ;;		i1_SendLCD
  6886 ;; This function uses a non-reentrant model
  6887 ;;
  6888                           psect	text20,class=CODE,space=0,reloc=2,group=0
  6889                           	line	34
  6890                           global __ptext20
  6891                           __ptext20:
  6892  000EB8                     psect	text20
  6893                           	file	"LCD.c"
  6894                           	line	34
  6895                           	global	__size_ofi1_LCDout
  6896                           	__size_ofi1_LCDout	equ	__end_ofi1_LCDout-i1_LCDout
  6897  0000                     	
  6898                           i1_LCDout:
  6899  000EB8                     ;incstack = 0
  6900                           	opt	stack 21
  6901                           ;i1LCDout@number stored from wreg
  6902                           	movwf	((c:i1LCDout@number)),c
  6903  000EB8  6E04               	line	39
  6904                           	
  6905                           i1l1451:
  6906  000EBA                     ;LCD.c: 39: 
  6907                           	movff	(c:3979),??i1_LCDout+0+0	;volatile
  6908  000EBA  CF8B F002          	movlw	0F9h
  6909  000EBE  0EF9               	andwf	(??i1_LCDout+0+0),c
  6910  000EC0  1602               	movff	(c:i1LCDout@number),??i1_LCDout+1+0
  6911  000EC2  C004  F003         	movlw	03h
  6912  000EC6  0E03               	andwf	(??i1_LCDout+1+0),c
  6913  000EC8  1603               	bcf	status,0
  6914  000ECA  90D8               	rlcf	(??i1_LCDout+1+0),c,w
  6915  000ECC  3403               	iorwf	(??i1_LCDout+0+0),c,w
  6916  000ECE  1002               	movwf	((c:3979)),c	;volatile
  6917  000ED0  6E8B               	line	41
  6918                           ;LCD.c: 41:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  6919                           	movff	(c:3980),??i1_LCDout+0+0	;volatile
  6920  000ED2  CF8C F002          	movlw	0FCh
  6921  000ED6  0EFC               	andwf	(??i1_LCDout+0+0),c
  6922  000ED8  1602               	rrncf	((c:i1LCDout@number)),c,w
  6923  000EDA  4004               	rrncf	wreg
  6924  000EDC  42E8               	andlw	(0ffh shr 2) & 0ffh
  6925  000EDE  0B3F               	andlw	low(03h)
  6926  000EE0  0B03               	iorwf	(??i1_LCDout+0+0),c,w
  6927  000EE2  1002               	movwf	((c:3980)),c	;volatile
  6928  000EE4  6E8C               	line	42
  6929                           	
  6930                           i1l1453:
  6931  000EE6                     ;LCD.c: 42: 
  6932                           	call	i1_E_TOG	;wreg free
  6933  000EE6  ECF8  F007         	line	43
  6934                           	
  6935                           i1l1455:
  6936  000EEA                     ;LCD.c: 43: 
  6937                           	opt asmopt_push
  6938                           opt asmopt_off
  6939                           	movlw	3
  6940  000EEA  0E03               i1u123_27:
  6941  000EEC                     decfsz	wreg,f
  6942  000EEC  2EE8               	bra	i1u123_27
  6943  000EEE  D7FE               	nop
  6944  000EF0  F000               opt asmopt_pop
  6945                           
  6946                           	line	44
  6947                           	
  6948                           i1l246:
  6949  000EF2                     	return	;funcret
  6950  000EF2  0012               	opt stack 0
  6951                           GLOBAL	__end_ofi1_LCDout
  6952                           	__end_ofi1_LCDout:
  6953  000EF4                     	signat	i1_LCDout,89
  6954                           	global	i1_E_TOG
  6955                           
  6956 ;; *************** function i1_E_TOG *****************
  6957 ;; Defined at:
  6958 ;;		line 24 in file "LCD.c"
  6959 ;; Parameters:    Size  Location     Type
  6960 ;;		None
  6961 ;; Auto vars:     Size  Location     Type
  6962 ;;		None
  6963 ;; Return value:  Size  Location     Type
  6964 ;;                  1    wreg      void 
  6965 ;; Registers used:
  6966 ;;		wreg
  6967 ;; Tracked objects:
  6968 ;;		On entry : 0/0
  6969 ;;		On exit  : 0/0
  6970 ;;		Unchanged: 0/0
  6971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6972 ;;      Params:         0       0       0       0
  6973 ;;      Locals:         0       0       0       0
  6974 ;;      Temps:          0       0       0       0
  6975 ;;      Totals:         0       0       0       0
  6976 ;;Total ram usage:        0 bytes
  6977 ;; Hardware stack levels used:    1
  6978 ;; Hardware stack levels required when called:    1
  6979 ;; This function calls:
  6980 ;;		Nothing
  6981 ;; This function is called by:
  6982 ;;		i1_LCDout
  6983 ;; This function uses a non-reentrant model
  6984 ;;
  6985                           psect	text21,class=CODE,space=0,reloc=2,group=0
  6986                           	line	24
  6987                           global __ptext21
  6988                           __ptext21:
  6989  000FF0                     psect	text21
  6990                           	file	"LCD.c"
  6991                           	line	24
  6992                           	global	__size_ofi1_E_TOG
  6993                           	__size_ofi1_E_TOG	equ	__end_ofi1_E_TOG-i1_E_TOG
  6994  0000                     	
  6995                           i1_E_TOG:
  6996  000FF0                     ;incstack = 0
  6997                           	opt	stack 21
  6998                           	line	25
  6999                           	
  7000                           i1l1433:
  7001  000FF0                     ;LCD.c: 25:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  7002                           	bsf	((c:3979)),c,0	;volatile
  7003  000FF0  808B               	line	26
  7004                           	
  7005                           i1l1435:
  7006  000FF2                     ;LCD.c: 26: }
  7007                           	opt asmopt_push
  7008                           opt asmopt_off
  7009                           	movlw	3
  7010  000FF2  0E03               i1u124_27:
  7011  000FF4                     decfsz	wreg,f
  7012  000FF4  2EE8               	bra	i1u124_27
  7013  000FF6  D7FE               	nop
  7014  000FF8  F000               opt asmopt_pop
  7015                           
  7016                           	line	27
  7017                           	
  7018                           i1l1437:
  7019  000FFA                     ;LCD.c: 27: 
  7020                           	bcf	((c:3979)),c,0	;volatile
  7021  000FFA  908B               	line	28
  7022                           	
  7023                           i1l243:
  7024  000FFC                     	return	;funcret
  7025  000FFC  0012               	opt stack 0
  7026                           GLOBAL	__end_ofi1_E_TOG
  7027                           	__end_ofi1_E_TOG:
  7028  000FFE                     	signat	i1_E_TOG,89
  7029                           	global	_my_hp_isr
  7030                           
  7031 ;; *************** function _my_hp_isr *****************
  7032 ;; Defined at:
  7033 ;;		line 249 in file "main.c"
  7034 ;; Parameters:    Size  Location     Type
  7035 ;;		None
  7036 ;; Auto vars:     Size  Location     Type
  7037 ;;		None
  7038 ;; Return value:  Size  Location     Type
  7039 ;;                  1    wreg      void 
  7040 ;; Registers used:
  7041 ;;		wreg, status,2, status,0
  7042 ;; Tracked objects:
  7043 ;;		On entry : 0/0
  7044 ;;		On exit  : 0/0
  7045 ;;		Unchanged: 0/0
  7046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7047 ;;      Params:         0       0       0       0
  7048 ;;      Locals:         0       0       0       0
  7049 ;;      Temps:          1       0       0       0
  7050 ;;      Totals:         1       0       0       0
  7051 ;;Total ram usage:        1 bytes
  7052 ;; Hardware stack levels used:    1
  7053 ;; This function calls:
  7054 ;;		Nothing
  7055 ;; This function is called by:
  7056 ;;		Interrupt level 2
  7057 ;; This function uses a non-reentrant model
  7058 ;;
  7059                           psect	intcode,class=CODE,space=0,reloc=2
  7060                           global __pintcode
  7061                           __pintcode:
  7062  000008                     psect	intcode
  7063                           	file	"main.c"
  7064                           	line	249
  7065                           	global	__size_of_my_hp_isr
  7066                           	__size_of_my_hp_isr	equ	__end_of_my_hp_isr-_my_hp_isr
  7067  0000                     	
  7068                           _my_hp_isr:
  7069  000008                     ;incstack = 0
  7070                           	opt	stack 20
  7071                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
  7072  000008  8233               	global	int_func
  7073                           	goto	int_func
  7074  00000A  EFB4  F005         psect	intcode_body,class=CODE,space=0,reloc=2
  7075                           global __pintcode_body
  7076                           __pintcode_body:
  7077  000B68                     int_func:
  7078  000B68                     	line	252
  7079                           	
  7080                           i2l1831:
  7081  000B68                     ;main.c: 252:     if (INTCONbits.INT0IF){
  7082                           	btfss	((c:4082)),c,1	;volatile
  7083  000B68  A2F2               	goto	i2u95_41
  7084  000B6A  EFB9  F005         	goto	i2u95_40
  7085  000B6E  EFBB  F005         i2u95_41:
  7086  000B72                     	goto	i2l113
  7087  000B72  EFEE  F005         i2u95_40:
  7088  000B76                     	line	254
  7089                           	
  7090                           i2l1833:
  7091  000B76                     ;main.c: 254:         debouncer +=1;
  7092                           	incf	((c:_debouncer)),c
  7093  000B76  2A31               	line	256
  7094                           	
  7095                           i2l1835:
  7096  000B78                     ;main.c: 256:         if (debouncer == 30){
  7097                           		movlw	30
  7098  000B78  0E1E               	xorwf	((c:_debouncer)),c,w
  7099  000B7A  1831               	btfss	status,2
  7100  000B7C  A4D8               	goto	i2u96_41
  7101  000B7E  EFC3  F005         	goto	i2u96_40
  7102  000B82  EFC5  F005         
  7103                           i2u96_41:
  7104  000B86                     	goto	i2l113
  7105  000B86  EFEE  F005         i2u96_40:
  7106  000B8A                     	line	257
  7107                           	
  7108                           i2l1837:
  7109  000B8A                     ;main.c: 257:             IRsource = 0;
  7110                           	movlw	low(0)
  7111  000B8A  0E00               	movlb	1	; () banked
  7112  000B8C  0101               	movwf	((_IRsource))&0ffh
  7113  000B8E  6FCE               	line	258
  7114                           ;main.c: 258:             debouncer =0;
  7115                           	movlw	low(0)
  7116  000B90  0E00               	movwf	((c:_debouncer)),c
  7117  000B92  6E31               	line	260
  7118                           ;main.c: 260:             RFIDread = 0;
  7119                           	movlw	low(0)
  7120  000B94  0E00               	movwf	((_RFIDread))&0ffh
  7121  000B96  6FCF               	line	261
  7122                           ;main.c: 261:             robotOn = !robotOn;
  7123                           	movf	((_robotOn))&0ffh,w
  7124  000B98  51D0               	btfsc	status,2
  7125  000B9A  B4D8               	goto	i2u97_41
  7126  000B9C  EFD2  F005         	goto	i2u97_40
  7127  000BA0  EFD5  F005         i2u97_41:
  7128  000BA4                     	movlw	1
  7129  000BA4  0E01               	goto	i2u98_40
  7130  000BA6  EFD6  F005         i2u97_40:
  7131  000BAA                     	movlw	0
  7132  000BAA  0E00               i2u98_40:
  7133  000BAC                     	movwf	((_robotOn))&0ffh
  7134  000BAC  6FD0               	line	262
  7135                           ;main.c: 262:             reset=1;
  7136                           	movlw	low(01h)
  7137  000BAE  0E01               	movwf	((_reset))&0ffh
  7138  000BB0  6FE3               	line	263
  7139                           	
  7140                           i2l1839:; BSR set to: 1
  7141  000BB2                     
  7142                           ;main.c: 263:             LATCbits.LATC4=!LATCbits.LATC4;
  7143                           	btfss	((c:3979)),c,4	;volatile
  7144  000BB2  A88B               	goto	i2u99_41
  7145  000BB4  EFDE  F005         	goto	i2u99_40
  7146  000BB8  EFE2  F005         i2u99_41:
  7147  000BBC                     	clrf	(??_my_hp_isr+0+0)&0ffh,c
  7148  000BBC  6A01               	incf	(??_my_hp_isr+0+0)&0ffh,c
  7149  000BBE  2A01               	goto	i2u100_48
  7150  000BC0  EFE3  F005         i2u99_40:
  7151  000BC4                     	clrf	(??_my_hp_isr+0+0)&0ffh,c
  7152  000BC4  6A01               i2u100_48:
  7153  000BC6                     	swapf	(??_my_hp_isr+0+0),c
  7154  000BC6  3A01               	movf	((c:3979)),c,w	;volatile
  7155  000BC8  508B               	xorwf	(??_my_hp_isr+0+0),c,w
  7156  000BCA  1801               	andlw	not (((1<<1)-1)<<4)
  7157  000BCC  0BEF               	xorwf	(??_my_hp_isr+0+0),c,w
  7158  000BCE  1801               	movwf	((c:3979)),c	;volatile
  7159  000BD0  6E8B               	line	264
  7160                           	
  7161                           i2l1841:
  7162  000BD2                     ;main.c: 264:             INTCONbits.INT0IF=0;
  7163                           	bcf	((c:4082)),c,1	;volatile
  7164  000BD2  92F2               	goto	i2l113
  7165  000BD4  EFEE  F005         	line	265
  7166                           ;main.c: 265:         }
  7167                           	
  7168                           i2l112:
  7169  000BD8                     	goto	i2l113
  7170  000BD8  EFEE  F005         	line	268
  7171                           ;main.c: 268:     }
  7172                           	
  7173                           i2l111:
  7174  000BDC                     	line	269
  7175                           	
  7176                           i2l113:
  7177  000BDC                     	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  7178  000BDC  9233               	retfie f
  7179  000BDE  0011               	opt stack 0
  7180                           GLOBAL	__end_of_my_hp_isr
  7181                           	__end_of_my_hp_isr:
  7182  000BE0                     	signat	_my_hp_isr,89
  7183                           psect	smallconst
  7184                           	db 0	; dummy byte at the end
  7185  00030A  00                 	global	__smallconst
  7186                           	global	__mediumconst
  7187                           	GLOBAL	__activetblptr
  7188                           __activetblptr	EQU	1
  7189  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  7190                           	PSECT	rparam,class=COMRAM,space=1,noexec
  7191                           	GLOBAL	__Lrparam
  7192                           	FNCONF	rparam,??,?
  7193                           	GLOBAL	___rparam_used
  7194                           	___rparam_used EQU 1
  7195  0000                     	GLOBAL	___param_bank
  7196                           	___param_bank EQU 0
  7197  0000                     GLOBAL	__Lparam, __Hparam
  7198                           GLOBAL	__Lrparam, __Hrparam
  7199                           __Lparam	EQU	__Lrparam
  7200  0000                     __Hparam	EQU	__Hrparam
  7201  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
  7202                           	global	btemp
  7203                           btemp:
  7204  000033                     	ds	1
  7205  000033                     	global	int$flags
  7206                           	int$flags	set btemp
  7207  0000                     	global	wtemp8
  7208                           	wtemp8 set btemp+1
  7209  0000                     	global	ttemp5
  7210                           	ttemp5 set btemp+1
  7211  0000                     	global	ttemp6
  7212                           	ttemp6 set btemp+4
  7213  0000                     	global	ttemp7
  7214                           	ttemp7 set btemp+8
  7215  0000                     	end


Data Sizes:
    Strings     9
    Constant    0
    Data        2
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      50
    BANK0           160      0       0
    BANK1           256    206     228
    BANK2           244      0       0

Pointer List with Targets:

    findStrengths@rightIR	PTR int  size(2) Largest target is 2
		 -> main@rightIR(BANK1[2]), 

    findStrengths@leftIR	PTR int  size(2) Largest target is 2
		 -> main@leftIR(BANK1[2]), 

    LCD_String@string	PTR unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), STR_1(CODE[6]), 

    move@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    move@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    move@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    move@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    move@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    move@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    stop@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    stop@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    setMotorsFullSpeed@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    setMotorsFullSpeed@mR.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    setMotorsFullSpeed@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    setMotorsFullSpeed@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    setMotorsFullSpeed@mL.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    setMotorsFullSpeed@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    setMotorPWM@m.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), motorR(BANK1[9]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    motorR.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    S24DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1H(SFR[1]), PDC0H(SFR[1]), 

    S24DC_motor$dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 

    motorL.dutyLowByte	PTR unsigned char  size(2) Largest target is 1
		 -> PDC1L(SFR[1]), PDC0L(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_move
    _move->_setMotorsFullSpeed
    _move->_stop
    _stop->_setMotorPWM
    _setMotorsFullSpeed->_setMotorPWM
    _setMotorPWM->___wmul
    _initLCD->_SendLCD
    _SendLCD->_LCDout

Critical Paths under _my_lp_isr in COMRAM

    _sendRFID->_LCD_String
    _SetLine->i1_SendLCD
    _LCD_String->i1_SendLCD
    i1_SendLCD->i1_LCDout

Critical Paths under _my_hp_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _my_lp_isr in BANK0

    None.

Critical Paths under _my_hp_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_lp_isr in BANK1

    None.

Critical Paths under _my_hp_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_lp_isr in BANK2

    None.

Critical Paths under _my_hp_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               209   209      0    9939
                                             42 COMRAM     3     3      0
                                              0 BANK1    206   206      0
                      _findStrengths
                         _initEusart
                             _initIR
                            _initLCD
                            _initPWM
                               _move
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _move                                                 5     0      5    4632
                                             37 COMRAM     5     0      5
                 _setMotorsFullSpeed
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    1810
                                             32 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorsFullSpeed                                   5     1      4    1506
                                             32 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          8     6      2    1244
                                             24 COMRAM     8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     257
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _initPWM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     780
                                             25 COMRAM     1     1      0
                             _LCDout
                            _SendLCD
 ---------------------------------------------------------------------------------
 (2) _SendLCD                                              4     3      1     736
                                             21 COMRAM     4     3      1
                             _LCDout
 ---------------------------------------------------------------------------------
 (3) _LCDout                                               3     3      0      44
                                             18 COMRAM     3     3      0
                              _E_TOG
 ---------------------------------------------------------------------------------
 (4) _E_TOG                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initIR                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initEusart                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _findStrengths                                        8     4      4     652
                                             18 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _my_lp_isr                                            7     7      0    1021
                                             11 COMRAM     7     7      0
                           _sendRFID
 ---------------------------------------------------------------------------------
 (6) _sendRFID                                             0     0      0    1021
                         _LCD_String
                            _SetLine
                      _getCharSerial
                          i1_SendLCD
 ---------------------------------------------------------------------------------
 (7) _getCharSerial                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _SetLine                                              1     1      0     304
                                              8 COMRAM     1     1      0
                          i1_SendLCD
 ---------------------------------------------------------------------------------
 (7) _LCD_String                                           3     1      2     457
                                              8 COMRAM     3     1      2
                          i1_SendLCD
 ---------------------------------------------------------------------------------
 (7) i1_SendLCD                                            4     3      1     260
                                              4 COMRAM     4     3      1
                           i1_LCDout
 ---------------------------------------------------------------------------------
 (8) i1_LCDout                                             3     3      0      44
                                              1 COMRAM     3     3      0
                            i1_E_TOG
 ---------------------------------------------------------------------------------
 (9) i1_E_TOG                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _my_hp_isr                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _findStrengths
   _initEusart
   _initIR
   _initLCD
     _LCDout
       _E_TOG
     _SendLCD
       _LCDout
         _E_TOG
   _initPWM
   _move
     _setMotorsFullSpeed
       _setMotorPWM
         ___wmul
     _stop
       _setMotorPWM
         ___wmul
   _setMotorPWM
     ___wmul
   _stop
     _setMotorPWM
       ___wmul

 _my_lp_isr (ROOT)
   _sendRFID
     _LCD_String
       i1_SendLCD
         i1_LCDout
           i1_E_TOG
     _SetLine
       i1_SendLCD
         i1_LCDout
           i1_E_TOG
     _getCharSerial
     i1_SendLCD
       i1_LCDout
         i1_E_TOG

 _my_hp_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2F3      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     CE      E4       7       89.1%
BITBANK2            F4      0       0       8        0.0%
BANK2               F4      0       0       9        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      32       1       53.2%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     116       5        0.0%
DATA                 0      0     116      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Dec 09 16:28:04 2019

                          _a 002E                           l70 03C4                           l71 0710  
                         l80 04D8                           l72 0426                           l81 04A8  
                         l73 03DE                           l90 0620                           l82 04EE  
                         l83 070C                           l91 0708                           l75 0488  
                         l67 0314                           l92 0704                           l84 0628  
                         l68 0314                           l93 06BA                           l85 05DE  
                         l77 0464                           l69 0322                           l94 0658  
                         l86 057C                           l78 048C                           l95 06B4  
                         l87 05D8                           l79 0506                           l97 06F8  
                         l89 061C                           l98 06FC                           l99 079E  
                         bsr 000FE0          ___wmul@multiplicand 0015                  ?_LCD_String 0009  
                        l100 079A                          l101 075A                          l102 0740  
                        l103 076E                          l200 0CF8                          l104 07A2  
                        l105 07A6                          l210 0C82                          l106 07A6  
                        l203 0864                          l211 0C44                          l204 08A0  
                        l212 0C9E                          l205 0948                          l213 0C9E  
                        l206 0978                          l222 0D48                          l143 0FE0  
                        l207 0978                          l216 0C22                          l217 0BE4  
                        l218 0C3E                          l243 0FEE                          l219 0C3E  
                        l252 0B66                          l246 0EB6                          l328 0F8C  
                        l249 0F2A                          l292 0E7A                          l289 0FAA  
                        u530 07F8                          u531 07F4                          u604 0966  
                        u620 0C3A                          u605 0962                          u621 0C36  
                        u640 0C9A                          u800 0460                          u545 0804  
                        u641 0C96                          u801 045C                          u810 0474  
                        u555 081C                          u811 0470                          u580 091A  
                        u900 0680                          u820 0484                          u581 0916  
                        u565 0870                          u901 067C                          u821 0480  
                        u910 06E4                          u830 04A0                          u655 0EFE  
                        u575 0888                          u911 06E0                          u831 049C  
                        u656 0F00                          u920 06F4                          u840 04EA  
                        u921 06F0                          u841 04E6                          u594 0938  
                        u930 0720                          u850 0576                          u770 0322  
                        u595 0934                          u931 071C                          u851 0572  
                        u771 031E                          u940 076A                          u860 05A4  
                        u780 03D6                          u941 0766                          u861 05A0  
                        u781 03D2                          u870 0608                          u790 0444  
                        u871 0604                          u791 0440                          u880 0618  
                        u881 0614                          u890 0652                          u891 064E  
                        prod 000FF3                          wreg 000FE8                 __CFG_LVP$OFF 000000  
                       l1501 0BFC                         l1503 0C06                         l1441 0FE4  
                       l1601 0B4C                         l1521 0C66                         l1505 0C14  
                       l1611 0F9A                         l1443 0FEC                         l1531 0F0C  
                       l1603 0B54                         l1523 0C74                         l1515 0C40  
                       l1507 0C22                         l1621 0E32                         l1613 0F9C  
                       l1605 0F8E                         l1533 0F14                         l1445 0F64  
                       l1461 07F8                         l1517 0C44                         l1525 0C82  
                       l1701 0372                         l1607 0F96                         l1439 0FE2  
                       l1535 0F1C                         l1527 0EF6                         l1447 0F80  
                       l1471 08DC                         l1463 0830                         l1519 0C5C  
                       l1615 0CFA                         l1711 039A                         l1703 0376  
                       l1561 0FCE                         l1609 0F98                         l1481 0EAA  
                       l1537 0F22                         l1529 0F00                         l1449 0F8C  
                       l1473 08FE                         l1465 0864                         l1457 07AA  
                       l1617 0D20                         l1801 06E4                         l1721 03DA  
                       l1713 03A2                         l1705 037E                         l1571 0FDE  
                       l1563 0FD6                         l1483 0EAE                         l1475 091A  
                       l1467 08A0                         l1459 07DC                         l1619 0D34  
                       l1811 073A                         l1803 06FC                         l1723 03DE  
                       l1731 0426                         l1715 03AE                         l1707 0382  
                       l1565 0FD8                         l1581 0AC8                         l1573 0CA0  
                       l1477 0948                         l1469 08BC                         l1821 0772  
                       l1813 0740                         l1741 0490                         l1733 0444  
                       l1725 03F6                         l1805 0710                         l1717 03BA  
                       l1709 0396                         l1567 0FDA                         l1559 0FCA  
                       l1479 0E7E                         l1591 0AFE                         l1583 0ACE  
                       l1575 0CB0                         l1823 0776                         l1815 0742  
                       l1807 0720                         l1751 04EE                         l1743 04A4  
                       l1735 0464                         l1727 040C                         l1719 03C0  
                       l1671 030C                         l1569 0FDC                         l1593 0B10  
                       l1585 0AE2                         l1577 0AA2                         l1497 0BE0  
                       l1825 077A                         l1817 075A                         l1809 0734  
                       l1761 054A                         l1745 04A8                         l1753 0506  
                       l1737 0474                         l1729 040E                         l1681 0340  
                       l1673 0336                         l1595 0B18                         l1587 0AEA  
                       l1579 0ABA                         l1499 0BE4                         l1827 077E  
                       l1819 076E                         l1771 05BC                         l1763 0576  
                       l1755 051E                         l1747 04AA                         l1739 048C  
                       l1691 034C                         l1683 0342                         l1675 033A  
                       l1597 0B2A                         l1589 0AF8                         l1829 078A  
                       l1781 0620                         l1773 05D2                         l1765 057C  
                       l1757 0534                         l1749 04D8                         l1693 0350  
                       l1685 0344                         l1677 033C                         l1599 0B34  
                       l1791 0680                         l1775 05D8                         l1767 0590  
                       l1783 0628                         l1759 0536                         l1695 0354  
                       l1687 0346                         l1679 033E                         l1793 0698  
                       l1785 0652                         l1769 05A4                         l1777 05DE  
                       l1697 0358                         l1689 0348                         l1795 06AE  
                       l1787 0658                         l1779 0608                         l1699 035E  
                       l1797 06B4                         l1789 066C                         l1799 06BA  
                       STR_1 0304                         STR_2 0301                         u1107 0B12  
                       u1117 0B24                         u1037 0C0C                         u1127 0B3A  
                       u1047 0C6C                         u1137 0B4E                         u1057 0AC0  
                       u1147 0B60                         u1067 0AD4                         u1157 0F16  
                       u1077 0AE4                         _LATB 000F8A                         u1167 0F24  
                       u1087 0AF2                         _LATC 000F8B                         _LATD 000F8C  
                       u1177 0EB0                         u1097 0B00                         u1187 0FE6  
                       _PIR1 000F9E              __end_ofi1_E_TOG 0FFE              ??_findStrengths 0017  
                main@rightIR 01CB                         _main 030C                         _move 0CFA  
                       fsr2h 000FDA                         indf2 000FDF                         fsr2l 000FD9  
                       btemp 0033                         _stop 0BE0                         prodh 000FF4  
                       prodl 000FF3                         start 0090                 ___param_bank 000000  
            __end_of_SendLCD 0F2C              __end_of_SetLine 0DE8                        ?_main 0001  
                      ?_move 0026                        ?_stop 0021                        _PDC0H 000F78  
                      _PDC1H 000F76                        _PDC0L 000F79                        _PDC2H 000F74  
                      _PDC1L 000F77                        _PDC3H 000F72                        _PDC2L 000F75  
                      _PDC3L 000F73                        _T5CON 000FB7                        i1l120 0070  
                      i1l118 0070                        i1l311 0AA0                        i1l119 006A  
                      i1l312 0A86                        i1l320 0A54                        i1l321 0A3A  
                      i1l313 099A                        i1l146 0FB0                        i1l314 0A82  
                      i1l322 0A50                        i1l243 0FFC                        i1l147 0FB0  
                      i1l323 0A7E                        i1l315 09D4                        i1l148 0FC2  
                      i1l324 0A9C                        i1l316 09DA                        i1l261 0D78  
                      i1l149 0FC8                        i1l317 09F8                        i1l325 0AA0  
                      i1l246 0EF2                        i1l262 0D4E                        i1l318 0A5C  
                      i2l111 0BDC                        i1l263 0D98                        i1l255 0DBA  
                      i1l319 0A12                        i2l112 0BD8                        i1l264 0D98  
                      i1l256 0DDE                        i2l113 0BDC                        i1l249 0F62  
                      i1l257 0DDA                        i1l258 0DE6             __end_ofi1_LCDout 0EF4  
                      _RCREG 000FAE                        _E_TOG 0FE2                        _SPBRG 000FAF  
                      _TXREG 000FAD              __end_of_initLCD 0B68              __end_of_initPWM 0CFA  
                      _index 0032                        _reset 01E3           __size_ofi1_SendLCD 0038  
                      main@c 01C8                        main@i 01CD                        tablat 000FF5  
                      ttemp5 0034                        ttemp6 0037                        ttemp7 003B  
                      status 000FD8                        wtemp8 0034          __size_of_LCD_String 0050  
             __CFG_MCLRE$OFF 000000              __initialization 0DE8                 __end_of_main 07AA  
               __end_of_move 0D4A                 __end_of_stop 0C40               __CFG_OSC$IRCIO 000000  
           LCD_String@string 0009                       ??_main 002B                       ??_move 002B  
                     ??_stop 0025                __activetblptr 000001                       ?_E_TOG 0001  
                  ??i1_E_TOG 0002                 ?_setMotorPWM 0019                       _ANSEL0 000FB8  
                     _ANSEL1 000FB9                       i1l1511 0FC2                       i1l1433 0FF0  
                     i1l1513 0FC8                       i1l1435 0FF2                       i1l1451 0EBA  
                     i1l1437 0FFA                       i1l1453 0EE6                       i1l1541 0DAC  
                     i1l1509 0FAC                       i1l1455 0EEA                       i1l1551 0D4E  
                     i1l1543 0DBA                       i1l1631 09A0                       i1l1623 097A  
                     i1l1553 0D62                       i1l1545 0DCC                       i1l1641 09E0  
                     i1l1633 09B0                       i1l1625 0980                       i1l1491 0F4C  
                     i1l1555 0D66                       i1l1547 0DDE                       i1l1539 0D9C  
                     i1l1651 0A24                       i1l1643 09EE                       i1l1635 09BA  
                     i1l1627 0996                       i1l1493 0F54                       i1l1485 0F2E  
                     i1l1557 0D78                       i1l1549 0D4A                       i1l1653 0A2A  
                     i1l1661 0A5C                       i1l1645 09F8                       i1l1637 09CA  
                     i1l1629 099A                       i1l1495 0F5A                       i1l1487 0F38  
                     i1l1663 0A60                       i1l1655 0A3A                       i1l1647 0A08  
                     i1l1639 09D4                       i1l1489 0F44                       i1l1665 0A64  
                     i1l1657 0A40                       i1l1649 0A12                       i1l1667 0A76  
                     i1l1659 0A54                       i1l1851 0060                       i1l1843 0036  
                     i1l1669 0A86                       i1l1853 0064                       i1l1845 0044  
                     i1l1847 0056                       i1l1855 006A                       i1l1849 005A  
             __CFG_WDTEN$OFF 000000                       i2l1831 0B68                       i2l1841 0BD2  
                     i2l1833 0B76                       i2l1835 0B78                       i2l1837 0B8A  
                     i2l1839 0BB2                       _LCDout 0E7C                  SendLCD@Byte 0019  
                     _OSCCON 000FD3        __end_of_getCharSerial 0FCA                       _PTCON0 000F7F  
                     _PTCON1 000F7E                       _SPBRGH 000FB0                       _PTPERH 000F7A  
                     _PTPERL 000F7B                  SendLCD@type 0016                    ??_SendLCD 0017  
                  ??_SetLine 0009                       ___wmul 0F64            __end_ofi1_SendLCD 0F64  
                     _initIR 0F8E                       clear_0 0E12                       _motorL 01DA  
                     _motorR 01D1             __end_of_sendRFID 0AA2                    ??_initLCD 001A  
                  ??_initPWM 0013                 __pdataCOMRAM 0032                       move@mL 0026  
                     move@mR 0028                 __mediumconst 0000                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8                       stop@mL 0021  
                     stop@mR 0023                   __accesstop 0060      __end_of__initialization 0E20  
              ___rparam_used 000001                  SetLine@line 0009                __end_of_E_TOG 0FF0  
                  ?i1_LCDout 0001               __pcstackCOMRAM 0001                 __pidataBANK1 0FFF  
         _setMotorsFullSpeed 0C40                 ??_LCD_String 000B          ?_setMotorsFullSpeed 0021  
                    ??_E_TOG 0013                   __pbssBANK1 01CE                      ?_LCDout 0001  
       ??_setMotorsFullSpeed 0025           __end_of_LCD_String 0D9A                   ??i1_LCDout 0002  
                    ?___wmul 0013                      _CAP2CON 000F62                      _CAP3CON 000F61  
                    ?_initIR 0001           __size_of_my_hp_isr 0BD8           __size_of_my_lp_isr 0078  
                    i1_E_TOG 0FF0                      i1u61_25 0F36                      i1u61_26 0F38  
                    i1u70_20 09B0                      i1u70_21 09AC                      i1u63_20 0FBE  
                    i1u71_20 09CA                      i1u63_21 0FBA                      i1u71_21 09C6  
                    i1u72_20 09EE                      i1u72_21 09EA                      i1u73_20 0A08  
                    i1u73_21 0A04                      i1u66_20 0DAC                      i1u74_20 0A24  
                    i1u66_21 0DA8                      i1u74_21 0A20                      i1u67_20 0DCC  
                    i1u75_20 0A76                      i1u67_21 0DC8                      i1u75_21 0A72  
                    i1u68_20 0D94                      i1u76_20 0A98                      i1u68_21 0D90  
                    i1u76_21 0A94                      i1u69_20 0992                      i1u69_21 098E  
                    i2u95_40 0B76                      i2u95_41 0B72                      i2u96_40 0B8A  
                    i2u96_41 0B86                      i2u97_40 0BAA                      i2u97_41 0BA4  
                    i2u98_40 0BAC                      i2u99_40 0BC4                      i2u99_41 0BBC  
                    _PWMCON0 000F6F         findStrengths@rightIR 0015                      _PWMCON1 000F6E  
       __size_of_setMotorPWM 01D0              __size_of_LCDout 003C                    ?_sendRFID 0001  
      __end_of_findStrengths 0E7C                      _SendLCD 0EF4                      __Hparam 0000  
                    _SetLine 0D9A                      __Lparam 0000                   _initEusart 0FCA  
            __size_of___wmul 002A                 __psmallconst 0300                   _currentVal 0030  
            __size_of_initIR 001E                      __pcinit 0DE8                      __ramtop 0300  
                    __ptext0 030C                      __ptext1 0CFA                      __ptext2 0BE0  
                    __ptext3 0C40                      __ptext4 07AA                      __ptext5 0F64  
                    __ptext6 0CA0                      __ptext7 0AA2                      __ptext8 0EF4  
                    __ptext9 0E7C                      _initLCD 0AA2                      _initPWM 0CA0  
               LCDout@number 0015                      _robotOn 01D0               __pintcode_body 0B68  
       end_of_initialization 0E20           setMotorPWM@PWMduty 001F                      int_func 0B68  
          __end_of_my_hp_isr 0BE0            __end_of_my_lp_isr 0090                   ??_sendRFID 000C  
                    move@dir 002A               SendLCD@LowBits 0018                    _RCSTAbits 000FAB  
                    postdec2 000FDD                      postinc0 000FEE                      postinc2 000FDE  
                  i1_SendLCD 0F2C            i1SendLCD@HighBits 0006                    _TRISAbits 000F92  
                  _TRISBbits 000F93                    _TRISCbits 000F94                    _TRISDbits 000F95  
             i1LCDout@number 0004                   main@leftIR 01C9               __end_of_LCDout 0EB8  
                  _TXSTAbits 000FAC                  ?_initEusart 0001            __size_ofi1_LCDout 003C  
             __end_of___wmul 0F8E                  _BAUDCONbits 000FAA                __pidataCOMRAM 0FFE  
             __end_of_initIR 0FAC       __size_of_getCharSerial 001E                   ?i1_SendLCD 0005  
        start_initialization 0DE8                     ??_LCDout 0013                     ??___wmul 0017  
                __pdataBANK1 01E3                     ??_initIR 0013                  __pbssCOMRAM 002E  
              __pcstackBANK1 0100                     ?i1_E_TOG 0001          __size_of_initEusart 0018  
              _getCharSerial 0FAC  __size_of_setMotorsFullSpeed 0060                     ?_SendLCD 0016  
                  _debouncer 0031                     ?_SetLine 0001            __size_of_sendRFID 0128  
                  __pintcode 0008                  __pintcodelo 0018          findStrengths@leftIR 0013  
                   _CAP2BUFH 000F67                     _CAP2BUFL 000F66                     _CAP3BUFH 000F65  
                   _CAP3BUFL 000F64                  ??i1_SendLCD 0006                     ?_initLCD 0001  
                   ?_initPWM 0001                  __smallconst 0300               __size_of_E_TOG 000E  
              ??_setMotorPWM 001B               ?_getCharSerial 0001                i1SendLCD@Byte 0008  
             ___wmul@product 0017                     _LATAbits 000F89                     _LATBbits 000F8A  
                   _LATCbits 000F8B                     _LATDbits 000F8C                i1SendLCD@type 0005  
                   i1u101_20 0044                     i1u101_21 0040                     i1u102_20 0056  
                   i1u102_21 0052                     i1u120_27 0D6C                     i1u121_27 0F4E  
                   i1u122_27 0F5C                     i1u123_27 0EEC                     i1u124_27 0FF4  
                   i1u119_27 0DE0                     i2u100_48 0BC6                     i1_LCDout 0EB8  
                   _PIR1bits 000F9E                    _my_hp_isr 0008                     _RFIDread 01CF  
                  _my_lp_isr 0018                     _RCONbits 000FD0            ___wmul@multiplier 0013  
           i1SendLCD@LowBits 0007                 setMotorPWM@m 0019                     _IRsource 01CE  
     __size_of_findStrengths 004A         setMotorsFullSpeed@mL 0021         setMotorsFullSpeed@mR 0023  
           __size_ofi1_E_TOG 000E                  _INTCON2bits 000FF1                  _INTCON3bits 000FF0  
        __end_of_setMotorPWM 097A                     __Hrparam 0000             __size_of_SendLCD 0038  
                 ?_my_hp_isr 0001                     __Lrparam 0000             __size_of_SetLine 004E  
                 ?_my_lp_isr 0001                 __Lsmallconst 0300                 ??_initEusart 0013  
                   _checkSum 002F             __size_of_initLCD 00C6             __size_of_initPWM 005A  
                   __ptext10 0FE2                     __ptext11 0F8E                     __ptext20 0EB8  
                   __ptext12 0FCA                     __ptext21 0FF0                     __ptext13 0E32  
                   __ptext15 097A                     __ptext16 0FAC                     __ptext17 0D9A  
                   __ptext18 0D4A                     __ptext19 0F2C              ??_getCharSerial 0002  
         __end_of_initEusart 0FE2                __size_of_main 049E                __size_of_move 0050  
              __size_of_stop 0060                     _sendRFID 097A                _findStrengths 0E32  
                   int$flags 0033                     main@path 0100                   _LCD_String 0D4A  
                 _INTCONbits 000FF2              SendLCD@HighBits 0017                  _setMotorPWM 07AA  
                   intlevel1 0000                     intlevel2 0000               ?_findStrengths 0013  
                 _OSCCONbits 000FD3                  ??_my_hp_isr 0001                  ??_my_lp_isr 000C  
 __end_of_setMotorsFullSpeed 0CA0  
